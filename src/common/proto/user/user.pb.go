// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.17.3
// source: user.proto

package user

import (
	base "common/proto/base"
	comm "common/proto/comm"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Source int32

const (
	Source_Source_None                Source = 0
	Source_UserSource_UGC             Source = 1 // UGC
	Source_UserSource_OfficialWebsite Source = 2 // 官网
	Source_ExternalSource_Discord     Source = 1
	Source_ExternalSource_Google      Source = 2
	Source_ExternalSource_Meta        Source = 3
)

// Enum value maps for Source.
var (
	Source_name = map[int32]string{
		0: "Source_None",
		1: "UserSource_UGC",
		2: "UserSource_OfficialWebsite",
		// Duplicate value: 1: "ExternalSource_Discord",
		// Duplicate value: 2: "ExternalSource_Google",
		3: "ExternalSource_Meta",
	}
	Source_value = map[string]int32{
		"Source_None":                0,
		"UserSource_UGC":             1,
		"UserSource_OfficialWebsite": 2,
		"ExternalSource_Discord":     1,
		"ExternalSource_Google":      2,
		"ExternalSource_Meta":        3,
	}
)

func (x Source) Enum() *Source {
	p := new(Source)
	*p = x
	return p
}

func (x Source) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Source) Descriptor() protoreflect.EnumDescriptor {
	return file_user_proto_enumTypes[0].Descriptor()
}

func (Source) Type() protoreflect.EnumType {
	return &file_user_proto_enumTypes[0]
}

func (x Source) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Source.Descriptor instead.
func (Source) EnumDescriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{0}
}

type ModifyReq_OptType int32

const (
	ModifyReq__NO            ModifyReq_OptType = 0
	ModifyReq_BindExternal   ModifyReq_OptType = 1
	ModifyReq_UnBindExternal ModifyReq_OptType = 2
)

// Enum value maps for ModifyReq_OptType.
var (
	ModifyReq_OptType_name = map[int32]string{
		0: "_NO",
		1: "BindExternal",
		2: "UnBindExternal",
	}
	ModifyReq_OptType_value = map[string]int32{
		"_NO":            0,
		"BindExternal":   1,
		"UnBindExternal": 2,
	}
)

func (x ModifyReq_OptType) Enum() *ModifyReq_OptType {
	p := new(ModifyReq_OptType)
	*p = x
	return p
}

func (x ModifyReq_OptType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModifyReq_OptType) Descriptor() protoreflect.EnumDescriptor {
	return file_user_proto_enumTypes[1].Descriptor()
}

func (ModifyReq_OptType) Type() protoreflect.EnumType {
	return &file_user_proto_enumTypes[1]
}

func (x ModifyReq_OptType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModifyReq_OptType.Descriptor instead.
func (ModifyReq_OptType) EnumDescriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{2, 0}
}

type CheckOtpReq_OtpType int32

const (
	CheckOtpReq__NoType        CheckOtpReq_OtpType = 0
	CheckOtpReq_BeforeRegister CheckOtpReq_OtpType = 1
	CheckOtpReq_AfterRegister  CheckOtpReq_OtpType = 2
)

// Enum value maps for CheckOtpReq_OtpType.
var (
	CheckOtpReq_OtpType_name = map[int32]string{
		0: "_NoType",
		1: "BeforeRegister",
		2: "AfterRegister",
	}
	CheckOtpReq_OtpType_value = map[string]int32{
		"_NoType":        0,
		"BeforeRegister": 1,
		"AfterRegister":  2,
	}
)

func (x CheckOtpReq_OtpType) Enum() *CheckOtpReq_OtpType {
	p := new(CheckOtpReq_OtpType)
	*p = x
	return p
}

func (x CheckOtpReq_OtpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckOtpReq_OtpType) Descriptor() protoreflect.EnumDescriptor {
	return file_user_proto_enumTypes[2].Descriptor()
}

func (CheckOtpReq_OtpType) Type() protoreflect.EnumType {
	return &file_user_proto_enumTypes[2]
}

func (x CheckOtpReq_OtpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckOtpReq_OtpType.Descriptor instead.
func (CheckOtpReq_OtpType) EnumDescriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{10, 0}
}

type GenerateExternalTokenReq_TokenUse int32

const (
	GenerateExternalTokenReq_Default GenerateExternalTokenReq_TokenUse = 0 // 默认登录使用
	GenerateExternalTokenReq_Bind    GenerateExternalTokenReq_TokenUse = 1
)

// Enum value maps for GenerateExternalTokenReq_TokenUse.
var (
	GenerateExternalTokenReq_TokenUse_name = map[int32]string{
		0: "Default",
		1: "Bind",
	}
	GenerateExternalTokenReq_TokenUse_value = map[string]int32{
		"Default": 0,
		"Bind":    1,
	}
)

func (x GenerateExternalTokenReq_TokenUse) Enum() *GenerateExternalTokenReq_TokenUse {
	p := new(GenerateExternalTokenReq_TokenUse)
	*p = x
	return p
}

func (x GenerateExternalTokenReq_TokenUse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GenerateExternalTokenReq_TokenUse) Descriptor() protoreflect.EnumDescriptor {
	return file_user_proto_enumTypes[3].Descriptor()
}

func (GenerateExternalTokenReq_TokenUse) Type() protoreflect.EnumType {
	return &file_user_proto_enumTypes[3]
}

func (x GenerateExternalTokenReq_TokenUse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GenerateExternalTokenReq_TokenUse.Descriptor instead.
func (GenerateExternalTokenReq_TokenUse) EnumDescriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{16, 0}
}

type UserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientInfo            *base.ClientInfo `protobuf:"bytes,1,opt,name=client_info,json=clientInfo,proto3" json:"client_info,omitempty"`
	Email                 string           `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Password              string           `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Otp                   string           `protobuf:"bytes,4,opt,name=otp,proto3" json:"otp,omitempty"`                                                                     // 验证码 只有注册时使用
	Name                  string           `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`                                                                   // 用户名
	CryptoKey             string           `protobuf:"bytes,6,opt,name=crypto_key,json=cryptoKey,proto3" json:"crypto_key,omitempty"`                                        // 客户端公钥
	CheckType             int32            `protobuf:"varint,7,opt,name=check_type,json=checkType,proto3" json:"check_type,omitempty"`                                       // 校验类型 编辑器需求使用   1 注册 2 登录
	Source                Source           `protobuf:"varint,8,opt,name=source,proto3,enum=user.Source" json:"source,omitempty"`                                             // 1 ugc
	ExternalSource        Source           `protobuf:"varint,9,opt,name=external_source,json=externalSource,proto3,enum=user.Source" json:"external_source,omitempty"`       //
	ExternalCode          string           `protobuf:"bytes,10,opt,name=external_code,json=externalCode,proto3" json:"external_code,omitempty"`                              // 三方oauth2 code
	ExternalToken         string           `protobuf:"bytes,11,opt,name=external_token,json=externalToken,proto3" json:"external_token,omitempty"`                           // 轮询 token 自己生成
	Birthday              string           `protobuf:"bytes,12,opt,name=birthday,proto3" json:"birthday,omitempty"`                                                          // eg: 2000-01-01
	ExternalUserId        string           `protobuf:"bytes,13,opt,name=external_user_id,json=externalUserId,proto3" json:"external_user_id,omitempty"`                      // 三方user_id
	ExternalValidateToken string           `protobuf:"bytes,14,opt,name=external_validate_token,json=externalValidateToken,proto3" json:"external_validate_token,omitempty"` // 三方验证登录token eg: google_id_token  meta: access_token
}

func (x *UserReq) Reset() {
	*x = UserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserReq) ProtoMessage() {}

func (x *UserReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserReq.ProtoReflect.Descriptor instead.
func (*UserReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{0}
}

func (x *UserReq) GetClientInfo() *base.ClientInfo {
	if x != nil {
		return x.ClientInfo
	}
	return nil
}

func (x *UserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserReq) GetOtp() string {
	if x != nil {
		return x.Otp
	}
	return ""
}

func (x *UserReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserReq) GetCryptoKey() string {
	if x != nil {
		return x.CryptoKey
	}
	return ""
}

func (x *UserReq) GetCheckType() int32 {
	if x != nil {
		return x.CheckType
	}
	return 0
}

func (x *UserReq) GetSource() Source {
	if x != nil {
		return x.Source
	}
	return Source_Source_None
}

func (x *UserReq) GetExternalSource() Source {
	if x != nil {
		return x.ExternalSource
	}
	return Source_Source_None
}

func (x *UserReq) GetExternalCode() string {
	if x != nil {
		return x.ExternalCode
	}
	return ""
}

func (x *UserReq) GetExternalToken() string {
	if x != nil {
		return x.ExternalToken
	}
	return ""
}

func (x *UserReq) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *UserReq) GetExternalUserId() string {
	if x != nil {
		return x.ExternalUserId
	}
	return ""
}

func (x *UserReq) GetExternalValidateToken() string {
	if x != nil {
		return x.ExternalValidateToken
	}
	return ""
}

type UserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authorization string `protobuf:"bytes,1,opt,name=authorization,proto3" json:"authorization,omitempty"` // 会话验证密钥
	CryptoKey     string `protobuf:"bytes,2,opt,name=crypto_key,json=cryptoKey,proto3" json:"crypto_key,omitempty"`
	Id            int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	PlayerId      int64  `protobuf:"varint,4,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Birthday      string `protobuf:"bytes,5,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Name          string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UserResp) Reset() {
	*x = UserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResp) ProtoMessage() {}

func (x *UserResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResp.ProtoReflect.Descriptor instead.
func (*UserResp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{1}
}

func (x *UserResp) GetAuthorization() string {
	if x != nil {
		return x.Authorization
	}
	return ""
}

func (x *UserResp) GetCryptoKey() string {
	if x != nil {
		return x.CryptoKey
	}
	return ""
}

func (x *UserResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserResp) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *UserResp) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *UserResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ModifyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientInfo     *base.ClientInfo  `protobuf:"bytes,1,opt,name=client_info,json=clientInfo,proto3" json:"client_info,omitempty"`
	Name           string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Birthday       string            `protobuf:"bytes,3,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Email          string            `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Token          string            `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	Password       string            `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	ExternalSource Source            `protobuf:"varint,7,opt,name=external_source,json=externalSource,proto3,enum=user.Source" json:"external_source,omitempty"`
	OptType        ModifyReq_OptType `protobuf:"varint,8,opt,name=opt_type,json=optType,proto3,enum=user.ModifyReq_OptType" json:"opt_type,omitempty"` // 操作类型
	ExternalCode   string            `protobuf:"bytes,9,opt,name=external_code,json=externalCode,proto3" json:"external_code,omitempty"`               // 三方oauth2 code
}

func (x *ModifyReq) Reset() {
	*x = ModifyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyReq) ProtoMessage() {}

func (x *ModifyReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyReq.ProtoReflect.Descriptor instead.
func (*ModifyReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{2}
}

func (x *ModifyReq) GetClientInfo() *base.ClientInfo {
	if x != nil {
		return x.ClientInfo
	}
	return nil
}

func (x *ModifyReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModifyReq) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *ModifyReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ModifyReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ModifyReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ModifyReq) GetExternalSource() Source {
	if x != nil {
		return x.ExternalSource
	}
	return Source_Source_None
}

func (x *ModifyReq) GetOptType() ModifyReq_OptType {
	if x != nil {
		return x.OptType
	}
	return ModifyReq__NO
}

func (x *ModifyReq) GetExternalCode() string {
	if x != nil {
		return x.ExternalCode
	}
	return ""
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email          string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`                                   // 注册邮箱
	Source         Source `protobuf:"varint,4,opt,name=source,proto3,enum=user.Source" json:"source,omitempty"`               //
	ExternalCode   string `protobuf:"bytes,5,opt,name=external_code,json=externalCode,proto3" json:"external_code,omitempty"` // 三方user_id
	Birthday       string `protobuf:"bytes,6,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Verified       int32  `protobuf:"varint,7,opt,name=verified,proto3" json:"verified,omitempty"` // 邮箱是否验证  1 已验证
	ExternalSource Source `protobuf:"varint,8,opt,name=external_source,json=externalSource,proto3,enum=user.Source" json:"external_source,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{3}
}

func (x *UserInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInfo) GetSource() Source {
	if x != nil {
		return x.Source
	}
	return Source_Source_None
}

func (x *UserInfo) GetExternalCode() string {
	if x != nil {
		return x.ExternalCode
	}
	return ""
}

func (x *UserInfo) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *UserInfo) GetVerified() int32 {
	if x != nil {
		return x.Verified
	}
	return 0
}

func (x *UserInfo) GetExternalSource() Source {
	if x != nil {
		return x.ExternalSource
	}
	return Source_Source_None
}

type ChangePasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientInfo  *base.ClientInfo `protobuf:"bytes,1,opt,name=client_info,json=clientInfo,proto3" json:"client_info,omitempty"`    // 客户端信息
	NewPassword string           `protobuf:"bytes,2,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"` // 新密码
	OldPassword string           `protobuf:"bytes,3,opt,name=old_password,json=oldPassword,proto3" json:"old_password,omitempty"` // 旧密码
}

func (x *ChangePasswordReq) Reset() {
	*x = ChangePasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePasswordReq) ProtoMessage() {}

func (x *ChangePasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePasswordReq.ProtoReflect.Descriptor instead.
func (*ChangePasswordReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{4}
}

func (x *ChangePasswordReq) GetClientInfo() *base.ClientInfo {
	if x != nil {
		return x.ClientInfo
	}
	return nil
}

func (x *ChangePasswordReq) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

func (x *ChangePasswordReq) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

type OtpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientInfo *base.ClientInfo `protobuf:"bytes,1,opt,name=client_info,json=clientInfo,proto3" json:"client_info,omitempty"`
	Email      string           `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	OtpType    int32            `protobuf:"varint,3,opt,name=otp_type,json=otpType,proto3" json:"otp_type,omitempty"` // 1 注册 2 找回密码
	UserId     int64            `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`    // user_id
}

func (x *OtpReq) Reset() {
	*x = OtpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OtpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OtpReq) ProtoMessage() {}

func (x *OtpReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OtpReq.ProtoReflect.Descriptor instead.
func (*OtpReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{5}
}

func (x *OtpReq) GetClientInfo() *base.ClientInfo {
	if x != nil {
		return x.ClientInfo
	}
	return nil
}

func (x *OtpReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *OtpReq) GetOtpType() int32 {
	if x != nil {
		return x.OtpType
	}
	return 0
}

func (x *OtpReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type HostResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostId int32 `protobuf:"varint,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
}

func (x *HostResp) Reset() {
	*x = HostResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostResp) ProtoMessage() {}

func (x *HostResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostResp.ProtoReflect.Descriptor instead.
func (*HostResp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{6}
}

func (x *HostResp) GetHostId() int32 {
	if x != nil {
		return x.HostId
	}
	return 0
}

type HostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientInfo *base.ClientInfo `protobuf:"bytes,1,opt,name=client_info,json=clientInfo,proto3" json:"client_info,omitempty"`
	Env        string           `protobuf:"bytes,2,opt,name=env,proto3" json:"env,omitempty"`
	Name       string           `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"` // game name
	GameId     int64            `protobuf:"varint,4,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Version    int32            `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *HostReq) Reset() {
	*x = HostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostReq) ProtoMessage() {}

func (x *HostReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostReq.ProtoReflect.Descriptor instead.
func (*HostReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{7}
}

func (x *HostReq) GetClientInfo() *base.ClientInfo {
	if x != nil {
		return x.ClientInfo
	}
	return nil
}

func (x *HostReq) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *HostReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HostReq) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *HostReq) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type PlayerIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host   string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	UserId int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *PlayerIdReq) Reset() {
	*x = PlayerIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerIdReq) ProtoMessage() {}

func (x *PlayerIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerIdReq.ProtoReflect.Descriptor instead.
func (*PlayerIdReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{8}
}

func (x *PlayerIdReq) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *PlayerIdReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetOtherUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientInfo *base.ClientInfo `protobuf:"bytes,1,opt,name=client_info,json=clientInfo,proto3" json:"client_info,omitempty"`
	UserId     int64            `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetOtherUserReq) Reset() {
	*x = GetOtherUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOtherUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOtherUserReq) ProtoMessage() {}

func (x *GetOtherUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOtherUserReq.ProtoReflect.Descriptor instead.
func (*GetOtherUserReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{9}
}

func (x *GetOtherUserReq) GetClientInfo() *base.ClientInfo {
	if x != nil {
		return x.ClientInfo
	}
	return nil
}

func (x *GetOtherUserReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CheckOtpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientInfo *base.ClientInfo    `protobuf:"bytes,1,opt,name=client_info,json=clientInfo,proto3" json:"client_info,omitempty"`
	Email      string              `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	OtpType    CheckOtpReq_OtpType `protobuf:"varint,3,opt,name=otp_type,json=otpType,proto3,enum=user.CheckOtpReq_OtpType" json:"otp_type,omitempty"` // 1 注册之前验证 2 注册之后验证
	Code       string              `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`                                                     // 验证码
	UserId     int64               `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CheckToken string              `protobuf:"bytes,6,opt,name=check_token,json=checkToken,proto3" json:"check_token,omitempty"` // 非必要字段，只做校验
}

func (x *CheckOtpReq) Reset() {
	*x = CheckOtpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckOtpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckOtpReq) ProtoMessage() {}

func (x *CheckOtpReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckOtpReq.ProtoReflect.Descriptor instead.
func (*CheckOtpReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{10}
}

func (x *CheckOtpReq) GetClientInfo() *base.ClientInfo {
	if x != nil {
		return x.ClientInfo
	}
	return nil
}

func (x *CheckOtpReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CheckOtpReq) GetOtpType() CheckOtpReq_OtpType {
	if x != nil {
		return x.OtpType
	}
	return CheckOtpReq__NoType
}

func (x *CheckOtpReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CheckOtpReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CheckOtpReq) GetCheckToken() string {
	if x != nil {
		return x.CheckToken
	}
	return ""
}

type CheckOtpRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuccessToken string `protobuf:"bytes,1,opt,name=success_token,json=successToken,proto3" json:"success_token,omitempty"` // 验证成功凭证
}

func (x *CheckOtpRes) Reset() {
	*x = CheckOtpRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckOtpRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckOtpRes) ProtoMessage() {}

func (x *CheckOtpRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckOtpRes.ProtoReflect.Descriptor instead.
func (*CheckOtpRes) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{11}
}

func (x *CheckOtpRes) GetSuccessToken() string {
	if x != nil {
		return x.SuccessToken
	}
	return ""
}

type SetPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientInfo       *base.ClientInfo `protobuf:"bytes,1,opt,name=client_info,json=clientInfo,proto3" json:"client_info,omitempty"`
	Email            string           `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Password         string           `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	SetPasswordToken string           `protobuf:"bytes,4,opt,name=set_password_token,json=setPasswordToken,proto3" json:"set_password_token,omitempty"`
}

func (x *SetPasswordReq) Reset() {
	*x = SetPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPasswordReq) ProtoMessage() {}

func (x *SetPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPasswordReq.ProtoReflect.Descriptor instead.
func (*SetPasswordReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{12}
}

func (x *SetPasswordReq) GetClientInfo() *base.ClientInfo {
	if x != nil {
		return x.ClientInfo
	}
	return nil
}

func (x *SetPasswordReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SetPasswordReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SetPasswordReq) GetSetPasswordToken() string {
	if x != nil {
		return x.SetPasswordToken
	}
	return ""
}

type QuickRegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientInfo *base.ClientInfo `protobuf:"bytes,1,opt,name=client_info,json=clientInfo,proto3" json:"client_info,omitempty"`
	Email      string           `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Password   string           `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Source     Source           `protobuf:"varint,4,opt,name=source,proto3,enum=user.Source" json:"source,omitempty"`      // 1 ugc
	Birthday   string           `protobuf:"bytes,5,opt,name=birthday,proto3" json:"birthday,omitempty"`                    // eg: 2000-01-01
	CryptoKey  string           `protobuf:"bytes,6,opt,name=crypto_key,json=cryptoKey,proto3" json:"crypto_key,omitempty"` // 客户端公钥
}

func (x *QuickRegisterReq) Reset() {
	*x = QuickRegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuickRegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuickRegisterReq) ProtoMessage() {}

func (x *QuickRegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuickRegisterReq.ProtoReflect.Descriptor instead.
func (*QuickRegisterReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{13}
}

func (x *QuickRegisterReq) GetClientInfo() *base.ClientInfo {
	if x != nil {
		return x.ClientInfo
	}
	return nil
}

func (x *QuickRegisterReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *QuickRegisterReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *QuickRegisterReq) GetSource() Source {
	if x != nil {
		return x.Source
	}
	return Source_Source_None
}

func (x *QuickRegisterReq) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *QuickRegisterReq) GetCryptoKey() string {
	if x != nil {
		return x.CryptoKey
	}
	return ""
}

type CheckPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientInfo *base.ClientInfo `protobuf:"bytes,1,opt,name=client_info,json=clientInfo,proto3" json:"client_info,omitempty"`
	Password   string           `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *CheckPasswordReq) Reset() {
	*x = CheckPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPasswordReq) ProtoMessage() {}

func (x *CheckPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPasswordReq.ProtoReflect.Descriptor instead.
func (*CheckPasswordReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{14}
}

func (x *CheckPasswordReq) GetClientInfo() *base.ClientInfo {
	if x != nil {
		return x.ClientInfo
	}
	return nil
}

func (x *CheckPasswordReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type CheckPasswordRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuccessToken string `protobuf:"bytes,1,opt,name=success_token,json=successToken,proto3" json:"success_token,omitempty"`
}

func (x *CheckPasswordRes) Reset() {
	*x = CheckPasswordRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPasswordRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPasswordRes) ProtoMessage() {}

func (x *CheckPasswordRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPasswordRes.ProtoReflect.Descriptor instead.
func (*CheckPasswordRes) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{15}
}

func (x *CheckPasswordRes) GetSuccessToken() string {
	if x != nil {
		return x.SuccessToken
	}
	return ""
}

type GenerateExternalTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalSource Source                            `protobuf:"varint,1,opt,name=external_source,json=externalSource,proto3,enum=user.Source" json:"external_source,omitempty"`
	UseType        GenerateExternalTokenReq_TokenUse `protobuf:"varint,2,opt,name=use_type,json=useType,proto3,enum=user.GenerateExternalTokenReq_TokenUse" json:"use_type,omitempty"`
}

func (x *GenerateExternalTokenReq) Reset() {
	*x = GenerateExternalTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateExternalTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateExternalTokenReq) ProtoMessage() {}

func (x *GenerateExternalTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateExternalTokenReq.ProtoReflect.Descriptor instead.
func (*GenerateExternalTokenReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{16}
}

func (x *GenerateExternalTokenReq) GetExternalSource() Source {
	if x != nil {
		return x.ExternalSource
	}
	return Source_Source_None
}

func (x *GenerateExternalTokenReq) GetUseType() GenerateExternalTokenReq_TokenUse {
	if x != nil {
		return x.UseType
	}
	return GenerateExternalTokenReq_Default
}

type GenerateExternalTokenRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token          string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ExternalSource Source `protobuf:"varint,2,opt,name=external_source,json=externalSource,proto3,enum=user.Source" json:"external_source,omitempty"`
	Url            string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GenerateExternalTokenRes) Reset() {
	*x = GenerateExternalTokenRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateExternalTokenRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateExternalTokenRes) ProtoMessage() {}

func (x *GenerateExternalTokenRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateExternalTokenRes.ProtoReflect.Descriptor instead.
func (*GenerateExternalTokenRes) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{17}
}

func (x *GenerateExternalTokenRes) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GenerateExternalTokenRes) GetExternalSource() Source {
	if x != nil {
		return x.ExternalSource
	}
	return Source_Source_None
}

func (x *GenerateExternalTokenRes) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type LogoutReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientInfo    *base.ClientInfo `protobuf:"bytes,1,opt,name=client_info,json=clientInfo,proto3" json:"client_info,omitempty"`
	Authorization string           `protobuf:"bytes,2,opt,name=authorization,proto3" json:"authorization,omitempty"`
}

func (x *LogoutReq) Reset() {
	*x = LogoutReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutReq) ProtoMessage() {}

func (x *LogoutReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutReq.ProtoReflect.Descriptor instead.
func (*LogoutReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{18}
}

func (x *LogoutReq) GetClientInfo() *base.ClientInfo {
	if x != nil {
		return x.ClientInfo
	}
	return nil
}

func (x *LogoutReq) GetAuthorization() string {
	if x != nil {
		return x.Authorization
	}
	return ""
}

type GMTModifyEmailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Email  string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *GMTModifyEmailReq) Reset() {
	*x = GMTModifyEmailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GMTModifyEmailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GMTModifyEmailReq) ProtoMessage() {}

func (x *GMTModifyEmailReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GMTModifyEmailReq.ProtoReflect.Descriptor instead.
func (*GMTModifyEmailReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{19}
}

func (x *GMTModifyEmailReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GMTModifyEmailReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type GMTUnbindExternalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *GMTUnbindExternalReq) Reset() {
	*x = GMTUnbindExternalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GMTUnbindExternalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GMTUnbindExternalReq) ProtoMessage() {}

func (x *GMTUnbindExternalReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GMTUnbindExternalReq.ProtoReflect.Descriptor instead.
func (*GMTUnbindExternalReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{20}
}

func (x *GMTUnbindExternalReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GMTUnbindExternalReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GMTUnbindExternalReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type BindExternalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientInfo     *base.ClientInfo `protobuf:"bytes,1,opt,name=client_info,json=clientInfo,proto3" json:"client_info,omitempty"`
	PullToken      string           `protobuf:"bytes,2,opt,name=pull_token,json=pullToken,proto3" json:"pull_token,omitempty"`                                  // 轮询 token 自己生成
	ExternalSource Source           `protobuf:"varint,3,opt,name=external_source,json=externalSource,proto3,enum=user.Source" json:"external_source,omitempty"` //
	ExternalUserId string           `protobuf:"bytes,4,opt,name=external_user_id,json=externalUserId,proto3" json:"external_user_id,omitempty"`                 // 三方user_id
}

func (x *BindExternalReq) Reset() {
	*x = BindExternalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindExternalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindExternalReq) ProtoMessage() {}

func (x *BindExternalReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindExternalReq.ProtoReflect.Descriptor instead.
func (*BindExternalReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{21}
}

func (x *BindExternalReq) GetClientInfo() *base.ClientInfo {
	if x != nil {
		return x.ClientInfo
	}
	return nil
}

func (x *BindExternalReq) GetPullToken() string {
	if x != nil {
		return x.PullToken
	}
	return ""
}

func (x *BindExternalReq) GetExternalSource() Source {
	if x != nil {
		return x.ExternalSource
	}
	return Source_Source_None
}

func (x *BindExternalReq) GetExternalUserId() string {
	if x != nil {
		return x.ExternalUserId
	}
	return ""
}

type BindEmailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientInfo *base.ClientInfo `protobuf:"bytes,1,opt,name=client_info,json=clientInfo,proto3" json:"client_info,omitempty"`
	Email      string           `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Password   string           `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	CheckToken string           `protobuf:"bytes,4,opt,name=check_token,json=checkToken,proto3" json:"check_token,omitempty"`
}

func (x *BindEmailReq) Reset() {
	*x = BindEmailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindEmailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindEmailReq) ProtoMessage() {}

func (x *BindEmailReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindEmailReq.ProtoReflect.Descriptor instead.
func (*BindEmailReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{22}
}

func (x *BindEmailReq) GetClientInfo() *base.ClientInfo {
	if x != nil {
		return x.ClientInfo
	}
	return nil
}

func (x *BindEmailReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *BindEmailReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *BindEmailReq) GetCheckToken() string {
	if x != nil {
		return x.CheckToken
	}
	return ""
}

type PreRegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email     string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	UtmSource string `protobuf:"bytes,2,opt,name=utm_source,json=utmSource,proto3" json:"utm_source,omitempty"`
	DiscordId string `protobuf:"bytes,3,opt,name=discord_id,json=discordId,proto3" json:"discord_id,omitempty"`
	UtmId     string `protobuf:"bytes,4,opt,name=utm_id,json=utmId,proto3" json:"utm_id,omitempty"`
}

func (x *PreRegisterReq) Reset() {
	*x = PreRegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreRegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreRegisterReq) ProtoMessage() {}

func (x *PreRegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreRegisterReq.ProtoReflect.Descriptor instead.
func (*PreRegisterReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{23}
}

func (x *PreRegisterReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *PreRegisterReq) GetUtmSource() string {
	if x != nil {
		return x.UtmSource
	}
	return ""
}

func (x *PreRegisterReq) GetDiscordId() string {
	if x != nil {
		return x.DiscordId
	}
	return ""
}

func (x *PreRegisterReq) GetUtmId() string {
	if x != nil {
		return x.UtmId
	}
	return ""
}

var File_user_proto protoreflect.FileDescriptor

var file_user_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x1a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf9, 0x03, 0x0a, 0x07, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6f,
	0x74, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x74, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4b, 0x65, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x24, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0e, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x36,
	0x0a, 0x17, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x15, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xac, 0x01, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x80, 0x03, 0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x35,
	0x0a, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x6f, 0x70, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x38,
	0x0a, 0x07, 0x4f, 0x70, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x5f, 0x4e, 0x4f,
	0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x69, 0x6e, 0x64, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x10, 0x02, 0x22, 0xfe, 0x01, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x24, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x12, 0x35, 0x0a, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x11, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x31, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x6c, 0x64,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x06, 0x4f, 0x74, 0x70,
	0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x74, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x6f, 0x74, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x23, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x17, 0x0a, 0x07,
	0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x07, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x61, 0x6d,
	0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x0a,
	0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x4f, 0x74, 0x68, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x0b,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x99, 0x02, 0x0a, 0x0b, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x4f, 0x74, 0x70, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x34, 0x0a, 0x08, 0x6f, 0x74, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x4f, 0x74, 0x70, 0x52, 0x65, 0x71, 0x2e, 0x4f, 0x74, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07,
	0x6f, 0x74, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3d, 0x0a, 0x07, 0x4f, 0x74, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x5f, 0x4e, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x10, 0x00, 0x12, 0x12, 0x0a,
	0x0e, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x10,
	0x01, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x10, 0x02, 0x22, 0x32, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4f, 0x74, 0x70,
	0x52, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa3, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x0b, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x65,
	0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xd8,
	0x01, 0x0a, 0x10, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4b, 0x65, 0x79, 0x22, 0x61, 0x0a, 0x10, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a,
	0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x37, 0x0a, 0x10,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xb8, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x35, 0x0a, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x2e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x55, 0x73, 0x65, 0x52, 0x07, 0x75, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x21, 0x0a,
	0x08, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x69, 0x6e, 0x64, 0x10, 0x01,
	0x22, 0x79, 0x0a, 0x18, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x35, 0x0a, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x64, 0x0a, 0x09, 0x4c,
	0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x42, 0x0a, 0x11, 0x47, 0x4d, 0x54, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x61, 0x0a, 0x14, 0x47, 0x4d, 0x54, 0x55, 0x6e, 0x62, 0x69,
	0x6e, 0x64, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xc4, 0x01, 0x0a, 0x0f, 0x42, 0x69, 0x6e,
	0x64, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x0b,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x6c, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x35,
	0x0a, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x94, 0x01, 0x0a, 0x0c, 0x42, 0x69, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x12, 0x31, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x7b, 0x0a, 0x0e, 0x50, 0x72, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x74, 0x6d, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x74, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x75, 0x74, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x74,
	0x6d, 0x49, 0x64, 0x2a, 0xa1, 0x01, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0f,
	0x0a, 0x0b, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12,
	0x12, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x55, 0x47,
	0x43, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x55, 0x73, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x10, 0x01, 0x12,
	0x19, 0x0a, 0x15, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x4d, 0x65, 0x74,
	0x61, 0x10, 0x03, 0x1a, 0x02, 0x10, 0x01, 0x32, 0xf0, 0x0f, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x20, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x0b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x27, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12,
	0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x0b,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x07, 0x53,
	0x65, 0x6e, 0x64, 0x4f, 0x74, 0x70, 0x12, 0x0c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4f, 0x74,
	0x70, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x29, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x0d, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x05,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x29, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x0f,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x1a,
	0x0e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x26, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x10, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x36, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2f, 0x0a, 0x09, 0x48, 0x6f, 0x73,
	0x74, 0x47, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x0e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x36, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x42, 0x12, 0x11, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0c,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x13,
	0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x0b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3d,
	0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x15,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0f, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x1a, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x30, 0x0a, 0x10, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x0f, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x73, 0x1a, 0x0b, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x14, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x4d, 0x61, 0x70,
	0x1a, 0x0b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3b, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x3e, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x79, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x3d, 0x0a, 0x11, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x65, 0x74, 0x12,
	0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x61, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x4d, 0x61, 0x70, 0x1a, 0x0b, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x13, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x12, 0x0f, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x73, 0x1a, 0x0b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x41,
	0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x47, 0x65, 0x74, 0x12, 0x0f, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x64, 0x73, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x4d, 0x61,
	0x70, 0x12, 0x30, 0x0a, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4f, 0x74, 0x70, 0x12, 0x11, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4f, 0x74, 0x70, 0x52, 0x65, 0x71,
	0x1a, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4f, 0x74, 0x70,
	0x52, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x37, 0x0a, 0x0d, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x51, 0x75,
	0x69, 0x63, 0x6b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x0e,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f,
	0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x12,
	0x57, 0x0a, 0x15, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0e, 0x47, 0x4d, 0x54, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x47, 0x4d, 0x54, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x3e, 0x0a, 0x13, 0x47, 0x4d, 0x54, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x4d,
	0x54, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x35, 0x0a, 0x0c, 0x42, 0x69, 0x6e, 0x64, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12,
	0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x0e, 0x55, 0x6e, 0x42, 0x69, 0x6e, 0x64,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x10, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2c, 0x0a, 0x09, 0x42, 0x69, 0x6e, 0x64, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x69, 0x6e, 0x64,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x0b, 0x50, 0x72, 0x65, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x65, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x31, 0x0a, 0x15, 0x50, 0x72, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x65, 0x6e, 0x64,
	0x12, 0x0b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0b, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x13, 0x5a, 0x11, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_proto_rawDescOnce sync.Once
	file_user_proto_rawDescData = file_user_proto_rawDesc
)

func file_user_proto_rawDescGZIP() []byte {
	file_user_proto_rawDescOnce.Do(func() {
		file_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_proto_rawDescData)
	})
	return file_user_proto_rawDescData
}

var file_user_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_user_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_user_proto_goTypes = []interface{}{
	(Source)(0),                            // 0: user.Source
	(ModifyReq_OptType)(0),                 // 1: user.ModifyReq.OptType
	(CheckOtpReq_OtpType)(0),               // 2: user.CheckOtpReq.OtpType
	(GenerateExternalTokenReq_TokenUse)(0), // 3: user.GenerateExternalTokenReq.TokenUse
	(*UserReq)(nil),                        // 4: user.UserReq
	(*UserResp)(nil),                       // 5: user.UserResp
	(*ModifyReq)(nil),                      // 6: user.ModifyReq
	(*UserInfo)(nil),                       // 7: user.UserInfo
	(*ChangePasswordReq)(nil),              // 8: user.ChangePasswordReq
	(*OtpReq)(nil),                         // 9: user.OtpReq
	(*HostResp)(nil),                       // 10: user.HostResp
	(*HostReq)(nil),                        // 11: user.HostReq
	(*PlayerIdReq)(nil),                    // 12: user.PlayerIdReq
	(*GetOtherUserReq)(nil),                // 13: user.GetOtherUserReq
	(*CheckOtpReq)(nil),                    // 14: user.CheckOtpReq
	(*CheckOtpRes)(nil),                    // 15: user.CheckOtpRes
	(*SetPasswordReq)(nil),                 // 16: user.SetPasswordReq
	(*QuickRegisterReq)(nil),               // 17: user.QuickRegisterReq
	(*CheckPasswordReq)(nil),               // 18: user.CheckPasswordReq
	(*CheckPasswordRes)(nil),               // 19: user.CheckPasswordRes
	(*GenerateExternalTokenReq)(nil),       // 20: user.GenerateExternalTokenReq
	(*GenerateExternalTokenRes)(nil),       // 21: user.GenerateExternalTokenRes
	(*LogoutReq)(nil),                      // 22: user.LogoutReq
	(*GMTModifyEmailReq)(nil),              // 23: user.GMTModifyEmailReq
	(*GMTUnbindExternalReq)(nil),           // 24: user.GMTUnbindExternalReq
	(*BindExternalReq)(nil),                // 25: user.BindExternalReq
	(*BindEmailReq)(nil),                   // 26: user.BindEmailReq
	(*PreRegisterReq)(nil),                 // 27: user.PreRegisterReq
	(*base.ClientInfo)(nil),                // 28: base.ClientInfo
	(*base.Empty)(nil),                     // 29: base.Empty
	(*comm.UserLoginReq)(nil),              // 30: comm.UserLoginReq
	(*comm.SetCharacterCreatorReq)(nil),    // 31: comm.SetCharacterCreatorReq
	(*comm.PlayerCreateReq)(nil),           // 32: comm.PlayerCreateReq
	(*base.PlayerIds)(nil),                 // 33: base.PlayerIds
	(*comm.PlayerCacheMap)(nil),            // 34: comm.PlayerCacheMap
	(*comm.PlayerSearchReq)(nil),           // 35: comm.PlayerSearchReq
	(*comm.PlayerMapInfoCacheMap)(nil),     // 36: comm.PlayerMapInfoCacheMap
	(*comm.UserLoginResp)(nil),             // 37: comm.UserLoginResp
	(*comm.Player)(nil),                    // 38: comm.Player
	(*comm.PlayerCreateResp)(nil),          // 39: comm.PlayerCreateResp
	(*comm.PlayerCache)(nil),               // 40: comm.PlayerCache
	(*comm.Players)(nil),                   // 41: comm.Players
}
var file_user_proto_depIdxs = []int32{
	28, // 0: user.UserReq.client_info:type_name -> base.ClientInfo
	0,  // 1: user.UserReq.source:type_name -> user.Source
	0,  // 2: user.UserReq.external_source:type_name -> user.Source
	28, // 3: user.ModifyReq.client_info:type_name -> base.ClientInfo
	0,  // 4: user.ModifyReq.external_source:type_name -> user.Source
	1,  // 5: user.ModifyReq.opt_type:type_name -> user.ModifyReq.OptType
	0,  // 6: user.UserInfo.source:type_name -> user.Source
	0,  // 7: user.UserInfo.external_source:type_name -> user.Source
	28, // 8: user.ChangePasswordReq.client_info:type_name -> base.ClientInfo
	28, // 9: user.OtpReq.client_info:type_name -> base.ClientInfo
	28, // 10: user.HostReq.client_info:type_name -> base.ClientInfo
	28, // 11: user.GetOtherUserReq.client_info:type_name -> base.ClientInfo
	28, // 12: user.CheckOtpReq.client_info:type_name -> base.ClientInfo
	2,  // 13: user.CheckOtpReq.otp_type:type_name -> user.CheckOtpReq.OtpType
	28, // 14: user.SetPasswordReq.client_info:type_name -> base.ClientInfo
	28, // 15: user.QuickRegisterReq.client_info:type_name -> base.ClientInfo
	0,  // 16: user.QuickRegisterReq.source:type_name -> user.Source
	28, // 17: user.CheckPasswordReq.client_info:type_name -> base.ClientInfo
	0,  // 18: user.GenerateExternalTokenReq.external_source:type_name -> user.Source
	3,  // 19: user.GenerateExternalTokenReq.use_type:type_name -> user.GenerateExternalTokenReq.TokenUse
	0,  // 20: user.GenerateExternalTokenRes.external_source:type_name -> user.Source
	28, // 21: user.LogoutReq.client_info:type_name -> base.ClientInfo
	28, // 22: user.BindExternalReq.client_info:type_name -> base.ClientInfo
	0,  // 23: user.BindExternalReq.external_source:type_name -> user.Source
	28, // 24: user.BindEmailReq.client_info:type_name -> base.ClientInfo
	29, // 25: user.User.Ping:input_type -> base.Empty
	4,  // 26: user.User.UserCheck:input_type -> user.UserReq
	9,  // 27: user.User.SendOtp:input_type -> user.OtpReq
	4,  // 28: user.User.Register:input_type -> user.UserReq
	4,  // 29: user.User.Login:input_type -> user.UserReq
	6,  // 30: user.User.Modify:input_type -> user.ModifyReq
	22, // 31: user.User.Logout:input_type -> user.LogoutReq
	28, // 32: user.User.GetUser:input_type -> base.ClientInfo
	4,  // 33: user.User.ResetPassword:input_type -> user.UserReq
	8,  // 34: user.User.ChangePassword:input_type -> user.ChangePasswordReq
	30, // 35: user.User.HostGetId:input_type -> comm.UserLoginReq
	13, // 36: user.User.GetOtherUser:input_type -> user.GetOtherUserReq
	30, // 37: user.User.PlayerLogin:input_type -> comm.UserLoginReq
	12, // 38: user.User.GetPlayerIdByUserId:input_type -> user.PlayerIdReq
	12, // 39: user.User.GetPlayerFromDB:input_type -> user.PlayerIdReq
	31, // 40: user.User.SetCharacterCreator:input_type -> comm.SetCharacterCreatorReq
	32, // 41: user.User.PlayerCreate:input_type -> comm.PlayerCreateReq
	33, // 42: user.User.GetPlayersInfo:input_type -> base.PlayerIds
	33, // 43: user.User.ClearPlayerCache:input_type -> base.PlayerIds
	34, // 44: user.User.SetPlayerCache:input_type -> comm.PlayerCacheMap
	35, // 45: user.User.GetPlayerByName:input_type -> comm.PlayerSearchReq
	35, // 46: user.User.GetPlayerByDisplayName:input_type -> comm.PlayerSearchReq
	36, // 47: user.User.PlayerMapCacheSet:input_type -> comm.PlayerMapInfoCacheMap
	33, // 48: user.User.PlayerMapCacheClear:input_type -> base.PlayerIds
	33, // 49: user.User.PlayerMapCacheGet:input_type -> base.PlayerIds
	14, // 50: user.User.CheckOtp:input_type -> user.CheckOtpReq
	16, // 51: user.User.SetPassword:input_type -> user.SetPasswordReq
	17, // 52: user.User.QuickRegister:input_type -> user.QuickRegisterReq
	18, // 53: user.User.CheckPassword:input_type -> user.CheckPasswordReq
	20, // 54: user.User.GenerateExternalToken:input_type -> user.GenerateExternalTokenReq
	4,  // 55: user.User.PlayerCenter:input_type -> user.UserReq
	23, // 56: user.User.GMTModifyEmail:input_type -> user.GMTModifyEmailReq
	24, // 57: user.User.GMTUnbindExternalId:input_type -> user.GMTUnbindExternalReq
	25, // 58: user.User.BindExternal:input_type -> user.BindExternalReq
	28, // 59: user.User.UnBindExternal:input_type -> base.ClientInfo
	26, // 60: user.User.BindEmail:input_type -> user.BindEmailReq
	27, // 61: user.User.PreRegister:input_type -> user.PreRegisterReq
	29, // 62: user.User.PreRegisterRewardSend:input_type -> base.Empty
	29, // 63: user.User.Ping:output_type -> base.Empty
	29, // 64: user.User.UserCheck:output_type -> base.Empty
	29, // 65: user.User.SendOtp:output_type -> base.Empty
	5,  // 66: user.User.Register:output_type -> user.UserResp
	5,  // 67: user.User.Login:output_type -> user.UserResp
	7,  // 68: user.User.Modify:output_type -> user.UserInfo
	29, // 69: user.User.Logout:output_type -> base.Empty
	7,  // 70: user.User.GetUser:output_type -> user.UserInfo
	29, // 71: user.User.ResetPassword:output_type -> base.Empty
	29, // 72: user.User.ChangePassword:output_type -> base.Empty
	10, // 73: user.User.HostGetId:output_type -> user.HostResp
	7,  // 74: user.User.GetOtherUser:output_type -> user.UserInfo
	37, // 75: user.User.PlayerLogin:output_type -> comm.UserLoginResp
	37, // 76: user.User.GetPlayerIdByUserId:output_type -> comm.UserLoginResp
	38, // 77: user.User.GetPlayerFromDB:output_type -> comm.Player
	29, // 78: user.User.SetCharacterCreator:output_type -> base.Empty
	39, // 79: user.User.PlayerCreate:output_type -> comm.PlayerCreateResp
	34, // 80: user.User.GetPlayersInfo:output_type -> comm.PlayerCacheMap
	29, // 81: user.User.ClearPlayerCache:output_type -> base.Empty
	29, // 82: user.User.SetPlayerCache:output_type -> base.Empty
	40, // 83: user.User.GetPlayerByName:output_type -> comm.PlayerCache
	41, // 84: user.User.GetPlayerByDisplayName:output_type -> comm.Players
	29, // 85: user.User.PlayerMapCacheSet:output_type -> base.Empty
	29, // 86: user.User.PlayerMapCacheClear:output_type -> base.Empty
	36, // 87: user.User.PlayerMapCacheGet:output_type -> comm.PlayerMapInfoCacheMap
	15, // 88: user.User.CheckOtp:output_type -> user.CheckOtpRes
	29, // 89: user.User.SetPassword:output_type -> base.Empty
	5,  // 90: user.User.QuickRegister:output_type -> user.UserResp
	19, // 91: user.User.CheckPassword:output_type -> user.CheckPasswordRes
	21, // 92: user.User.GenerateExternalToken:output_type -> user.GenerateExternalTokenRes
	5,  // 93: user.User.PlayerCenter:output_type -> user.UserResp
	29, // 94: user.User.GMTModifyEmail:output_type -> base.Empty
	29, // 95: user.User.GMTUnbindExternalId:output_type -> base.Empty
	5,  // 96: user.User.BindExternal:output_type -> user.UserResp
	29, // 97: user.User.UnBindExternal:output_type -> base.Empty
	29, // 98: user.User.BindEmail:output_type -> base.Empty
	29, // 99: user.User.PreRegister:output_type -> base.Empty
	29, // 100: user.User.PreRegisterRewardSend:output_type -> base.Empty
	63, // [63:101] is the sub-list for method output_type
	25, // [25:63] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_user_proto_init() }
func file_user_proto_init() {
	if File_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OtpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOtherUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckOtpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckOtpRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuickRegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPasswordRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateExternalTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateExternalTokenRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GMTModifyEmailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GMTUnbindExternalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindExternalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindEmailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreRegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_proto_goTypes,
		DependencyIndexes: file_user_proto_depIdxs,
		EnumInfos:         file_user_proto_enumTypes,
		MessageInfos:      file_user_proto_msgTypes,
	}.Build()
	File_user_proto = out.File
	file_user_proto_rawDesc = nil
	file_user_proto_goTypes = nil
	file_user_proto_depIdxs = nil
}
