// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.17.3
// source: comm.proto

package comm

import (
	base "common/proto/base"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FriendConfirmStatus int32

const (
	FriendConfirmStatus_Pending   FriendConfirmStatus = 0
	FriendConfirmStatus_Confirmed FriendConfirmStatus = 1
)

// Enum value maps for FriendConfirmStatus.
var (
	FriendConfirmStatus_name = map[int32]string{
		0: "Pending",
		1: "Confirmed",
	}
	FriendConfirmStatus_value = map[string]int32{
		"Pending":   0,
		"Confirmed": 1,
	}
)

func (x FriendConfirmStatus) Enum() *FriendConfirmStatus {
	p := new(FriendConfirmStatus)
	*p = x
	return p
}

func (x FriendConfirmStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FriendConfirmStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_comm_proto_enumTypes[0].Descriptor()
}

func (FriendConfirmStatus) Type() protoreflect.EnumType {
	return &file_comm_proto_enumTypes[0]
}

func (x FriendConfirmStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FriendConfirmStatus.Descriptor instead.
func (FriendConfirmStatus) EnumDescriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{0}
}

type FriendOperateType int32

const (
	FriendOperateType_NONE              FriendOperateType = 0
	FriendOperateType_FriendAdd         FriendOperateType = 1 // 添加
	FriendOperateType_FriendDelete      FriendOperateType = 2 // 删除
	FriendOperateType_BlackAdd          FriendOperateType = 3
	FriendOperateType_BlackDelete       FriendOperateType = 4
	FriendOperateType_List              FriendOperateType = 5 // 获取列表
	FriendOperateType_FriendUpdate      FriendOperateType = 6
	FriendOperateType_CacheClear        FriendOperateType = 7
	FriendOperateType_FriendApplyRefuse FriendOperateType = 8
	FriendOperateType_FriendApplyCLear  FriendOperateType = 9
	FriendOperateType_FriendApply       FriendOperateType = 10
)

// Enum value maps for FriendOperateType.
var (
	FriendOperateType_name = map[int32]string{
		0:  "NONE",
		1:  "FriendAdd",
		2:  "FriendDelete",
		3:  "BlackAdd",
		4:  "BlackDelete",
		5:  "List",
		6:  "FriendUpdate",
		7:  "CacheClear",
		8:  "FriendApplyRefuse",
		9:  "FriendApplyCLear",
		10: "FriendApply",
	}
	FriendOperateType_value = map[string]int32{
		"NONE":              0,
		"FriendAdd":         1,
		"FriendDelete":      2,
		"BlackAdd":          3,
		"BlackDelete":       4,
		"List":              5,
		"FriendUpdate":      6,
		"CacheClear":        7,
		"FriendApplyRefuse": 8,
		"FriendApplyCLear":  9,
		"FriendApply":       10,
	}
)

func (x FriendOperateType) Enum() *FriendOperateType {
	p := new(FriendOperateType)
	*p = x
	return p
}

func (x FriendOperateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FriendOperateType) Descriptor() protoreflect.EnumDescriptor {
	return file_comm_proto_enumTypes[1].Descriptor()
}

func (FriendOperateType) Type() protoreflect.EnumType {
	return &file_comm_proto_enumTypes[1]
}

func (x FriendOperateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FriendOperateType.Descriptor instead.
func (FriendOperateType) EnumDescriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{1}
}

type IntimacyType int32

const (
	IntimacyType_None   IntimacyType = 0
	IntimacyType_Call   IntimacyType = 1
	IntimacyType_Follow IntimacyType = 2
	IntimacyType_Chat   IntimacyType = 3
)

// Enum value maps for IntimacyType.
var (
	IntimacyType_name = map[int32]string{
		0: "None",
		1: "Call",
		2: "Follow",
		3: "Chat",
	}
	IntimacyType_value = map[string]int32{
		"None":   0,
		"Call":   1,
		"Follow": 2,
		"Chat":   3,
	}
)

func (x IntimacyType) Enum() *IntimacyType {
	p := new(IntimacyType)
	*p = x
	return p
}

func (x IntimacyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IntimacyType) Descriptor() protoreflect.EnumDescriptor {
	return file_comm_proto_enumTypes[2].Descriptor()
}

func (IntimacyType) Type() protoreflect.EnumType {
	return &file_comm_proto_enumTypes[2]
}

func (x IntimacyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IntimacyType.Descriptor instead.
func (IntimacyType) EnumDescriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{2}
}

type PlayerMapInfoCacheType int32

const (
	PlayerMapInfoCacheType_All       PlayerMapInfoCacheType = 0
	PlayerMapInfoCacheType_HomeStead PlayerMapInfoCacheType = 1
	PlayerMapInfoCacheType_UGC       PlayerMapInfoCacheType = 2
)

// Enum value maps for PlayerMapInfoCacheType.
var (
	PlayerMapInfoCacheType_name = map[int32]string{
		0: "All",
		1: "HomeStead",
		2: "UGC",
	}
	PlayerMapInfoCacheType_value = map[string]int32{
		"All":       0,
		"HomeStead": 1,
		"UGC":       2,
	}
)

func (x PlayerMapInfoCacheType) Enum() *PlayerMapInfoCacheType {
	p := new(PlayerMapInfoCacheType)
	*p = x
	return p
}

func (x PlayerMapInfoCacheType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerMapInfoCacheType) Descriptor() protoreflect.EnumDescriptor {
	return file_comm_proto_enumTypes[3].Descriptor()
}

func (PlayerMapInfoCacheType) Type() protoreflect.EnumType {
	return &file_comm_proto_enumTypes[3]
}

func (x PlayerMapInfoCacheType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerMapInfoCacheType.Descriptor instead.
func (PlayerMapInfoCacheType) EnumDescriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{3}
}

type Player_PlayerCreateStage int32

const (
	Player_CreateStageNone              Player_PlayerCreateStage = 0
	Player_CreateStageUpdateDisplayName Player_PlayerCreateStage = 1
	Player_CreateStageCharacterCreator  Player_PlayerCreateStage = 2
)

// Enum value maps for Player_PlayerCreateStage.
var (
	Player_PlayerCreateStage_name = map[int32]string{
		0: "CreateStageNone",
		1: "CreateStageUpdateDisplayName",
		2: "CreateStageCharacterCreator",
	}
	Player_PlayerCreateStage_value = map[string]int32{
		"CreateStageNone":              0,
		"CreateStageUpdateDisplayName": 1,
		"CreateStageCharacterCreator":  2,
	}
)

func (x Player_PlayerCreateStage) Enum() *Player_PlayerCreateStage {
	p := new(Player_PlayerCreateStage)
	*p = x
	return p
}

func (x Player_PlayerCreateStage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Player_PlayerCreateStage) Descriptor() protoreflect.EnumDescriptor {
	return file_comm_proto_enumTypes[4].Descriptor()
}

func (Player_PlayerCreateStage) Type() protoreflect.EnumType {
	return &file_comm_proto_enumTypes[4]
}

func (x Player_PlayerCreateStage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Player_PlayerCreateStage.Descriptor instead.
func (Player_PlayerCreateStage) EnumDescriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{4, 0}
}

type HouseParts_PartsType int32

const (
	HouseParts_NONE     HouseParts_PartsType = 0
	HouseParts_Wall     HouseParts_PartsType = 1 // 墙
	HouseParts_Roof     HouseParts_PartsType = 2 // 屋顶
	HouseParts_Door     HouseParts_PartsType = 3 // 门
	HouseParts_Window   HouseParts_PartsType = 4 // 窗户
	HouseParts_Ornament HouseParts_PartsType = 5 // 装饰物
)

// Enum value maps for HouseParts_PartsType.
var (
	HouseParts_PartsType_name = map[int32]string{
		0: "NONE",
		1: "Wall",
		2: "Roof",
		3: "Door",
		4: "Window",
		5: "Ornament",
	}
	HouseParts_PartsType_value = map[string]int32{
		"NONE":     0,
		"Wall":     1,
		"Roof":     2,
		"Door":     3,
		"Window":   4,
		"Ornament": 5,
	}
)

func (x HouseParts_PartsType) Enum() *HouseParts_PartsType {
	p := new(HouseParts_PartsType)
	*p = x
	return p
}

func (x HouseParts_PartsType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HouseParts_PartsType) Descriptor() protoreflect.EnumDescriptor {
	return file_comm_proto_enumTypes[5].Descriptor()
}

func (HouseParts_PartsType) Type() protoreflect.EnumType {
	return &file_comm_proto_enumTypes[5]
}

func (x HouseParts_PartsType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HouseParts_PartsType.Descriptor instead.
func (HouseParts_PartsType) EnumDescriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{34, 0}
}

type HouseParts_HouseDirection int32

const (
	HouseParts_Front HouseParts_HouseDirection = 0 // 正前方
	HouseParts_Right HouseParts_HouseDirection = 1 // 右方
	HouseParts_Back  HouseParts_HouseDirection = 2 // 后方
	HouseParts_Left  HouseParts_HouseDirection = 3 // 左方
)

// Enum value maps for HouseParts_HouseDirection.
var (
	HouseParts_HouseDirection_name = map[int32]string{
		0: "Front",
		1: "Right",
		2: "Back",
		3: "Left",
	}
	HouseParts_HouseDirection_value = map[string]int32{
		"Front": 0,
		"Right": 1,
		"Back":  2,
		"Left":  3,
	}
)

func (x HouseParts_HouseDirection) Enum() *HouseParts_HouseDirection {
	p := new(HouseParts_HouseDirection)
	*p = x
	return p
}

func (x HouseParts_HouseDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HouseParts_HouseDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_comm_proto_enumTypes[6].Descriptor()
}

func (HouseParts_HouseDirection) Type() protoreflect.EnumType {
	return &file_comm_proto_enumTypes[6]
}

func (x HouseParts_HouseDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HouseParts_HouseDirection.Descriptor instead.
func (HouseParts_HouseDirection) EnumDescriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{34, 1}
}

type DiyBuilding_DiyMode int32

const (
	DiyBuilding_Free DiyBuilding_DiyMode = 0 // 自由diy
	DiyBuilding_Suit DiyBuilding_DiyMode = 1 // 套装diy
)

// Enum value maps for DiyBuilding_DiyMode.
var (
	DiyBuilding_DiyMode_name = map[int32]string{
		0: "Free",
		1: "Suit",
	}
	DiyBuilding_DiyMode_value = map[string]int32{
		"Free": 0,
		"Suit": 1,
	}
)

func (x DiyBuilding_DiyMode) Enum() *DiyBuilding_DiyMode {
	p := new(DiyBuilding_DiyMode)
	*p = x
	return p
}

func (x DiyBuilding_DiyMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiyBuilding_DiyMode) Descriptor() protoreflect.EnumDescriptor {
	return file_comm_proto_enumTypes[7].Descriptor()
}

func (DiyBuilding_DiyMode) Type() protoreflect.EnumType {
	return &file_comm_proto_enumTypes[7]
}

func (x DiyBuilding_DiyMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiyBuilding_DiyMode.Descriptor instead.
func (DiyBuilding_DiyMode) EnumDescriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{35, 0}
}

type PlayerChangeDisplayNameReq_Source int32

const (
	PlayerChangeDisplayNameReq_None         PlayerChangeDisplayNameReq_Source = 0
	PlayerChangeDisplayNameReq_CreatePlayer PlayerChangeDisplayNameReq_Source = 1
)

// Enum value maps for PlayerChangeDisplayNameReq_Source.
var (
	PlayerChangeDisplayNameReq_Source_name = map[int32]string{
		0: "None",
		1: "CreatePlayer",
	}
	PlayerChangeDisplayNameReq_Source_value = map[string]int32{
		"None":         0,
		"CreatePlayer": 1,
	}
)

func (x PlayerChangeDisplayNameReq_Source) Enum() *PlayerChangeDisplayNameReq_Source {
	p := new(PlayerChangeDisplayNameReq_Source)
	*p = x
	return p
}

func (x PlayerChangeDisplayNameReq_Source) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerChangeDisplayNameReq_Source) Descriptor() protoreflect.EnumDescriptor {
	return file_comm_proto_enumTypes[8].Descriptor()
}

func (PlayerChangeDisplayNameReq_Source) Type() protoreflect.EnumType {
	return &file_comm_proto_enumTypes[8]
}

func (x PlayerChangeDisplayNameReq_Source) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerChangeDisplayNameReq_Source.Descriptor instead.
func (PlayerChangeDisplayNameReq_Source) EnumDescriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{77, 0}
}

type SetCharacterCreatorReq_Source int32

const (
	SetCharacterCreatorReq_None         SetCharacterCreatorReq_Source = 0
	SetCharacterCreatorReq_CreatePlayer SetCharacterCreatorReq_Source = 1
)

// Enum value maps for SetCharacterCreatorReq_Source.
var (
	SetCharacterCreatorReq_Source_name = map[int32]string{
		0: "None",
		1: "CreatePlayer",
	}
	SetCharacterCreatorReq_Source_value = map[string]int32{
		"None":         0,
		"CreatePlayer": 1,
	}
)

func (x SetCharacterCreatorReq_Source) Enum() *SetCharacterCreatorReq_Source {
	p := new(SetCharacterCreatorReq_Source)
	*p = x
	return p
}

func (x SetCharacterCreatorReq_Source) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetCharacterCreatorReq_Source) Descriptor() protoreflect.EnumDescriptor {
	return file_comm_proto_enumTypes[9].Descriptor()
}

func (SetCharacterCreatorReq_Source) Type() protoreflect.EnumType {
	return &file_comm_proto_enumTypes[9]
}

func (x SetCharacterCreatorReq_Source) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetCharacterCreatorReq_Source.Descriptor instead.
func (SetCharacterCreatorReq_Source) EnumDescriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{78, 0}
}

type PlayerCreateStageReq_Stage int32

const (
	PlayerCreateStageReq_None                   PlayerCreateStageReq_Stage = 0
	PlayerCreateStageReq_UpdateName             PlayerCreateStageReq_Stage = 1
	PlayerCreateStageReq_UpdateCharacterCreator PlayerCreateStageReq_Stage = 2
)

// Enum value maps for PlayerCreateStageReq_Stage.
var (
	PlayerCreateStageReq_Stage_name = map[int32]string{
		0: "None",
		1: "UpdateName",
		2: "UpdateCharacterCreator",
	}
	PlayerCreateStageReq_Stage_value = map[string]int32{
		"None":                   0,
		"UpdateName":             1,
		"UpdateCharacterCreator": 2,
	}
)

func (x PlayerCreateStageReq_Stage) Enum() *PlayerCreateStageReq_Stage {
	p := new(PlayerCreateStageReq_Stage)
	*p = x
	return p
}

func (x PlayerCreateStageReq_Stage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerCreateStageReq_Stage) Descriptor() protoreflect.EnumDescriptor {
	return file_comm_proto_enumTypes[10].Descriptor()
}

func (PlayerCreateStageReq_Stage) Type() protoreflect.EnumType {
	return &file_comm_proto_enumTypes[10]
}

func (x PlayerCreateStageReq_Stage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerCreateStageReq_Stage.Descriptor instead.
func (PlayerCreateStageReq_Stage) EnumDescriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{79, 0}
}

type Avatar_Type int32

const (
	Avatar_Default   Avatar_Type = 0 // 创角时默认头像
	Avatar_Customize Avatar_Type = 1 // 自定义头像
	Avatar_Config    Avatar_Type = 2 // 系统自定义
)

// Enum value maps for Avatar_Type.
var (
	Avatar_Type_name = map[int32]string{
		0: "Default",
		1: "Customize",
		2: "Config",
	}
	Avatar_Type_value = map[string]int32{
		"Default":   0,
		"Customize": 1,
		"Config":    2,
	}
)

func (x Avatar_Type) Enum() *Avatar_Type {
	p := new(Avatar_Type)
	*p = x
	return p
}

func (x Avatar_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Avatar_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_comm_proto_enumTypes[11].Descriptor()
}

func (Avatar_Type) Type() protoreflect.EnumType {
	return &file_comm_proto_enumTypes[11]
}

func (x Avatar_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Avatar_Type.Descriptor instead.
func (Avatar_Type) EnumDescriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{80, 0}
}

type AnnounceInfo_AnnounceType int32

const (
	AnnounceInfo_Announce   AnnounceInfo_AnnounceType = 0
	AnnounceInfo_News       AnnounceInfo_AnnounceType = 1
	AnnounceInfo_ServerInfo AnnounceInfo_AnnounceType = 2
)

// Enum value maps for AnnounceInfo_AnnounceType.
var (
	AnnounceInfo_AnnounceType_name = map[int32]string{
		0: "Announce",
		1: "News",
		2: "ServerInfo",
	}
	AnnounceInfo_AnnounceType_value = map[string]int32{
		"Announce":   0,
		"News":       1,
		"ServerInfo": 2,
	}
)

func (x AnnounceInfo_AnnounceType) Enum() *AnnounceInfo_AnnounceType {
	p := new(AnnounceInfo_AnnounceType)
	*p = x
	return p
}

func (x AnnounceInfo_AnnounceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AnnounceInfo_AnnounceType) Descriptor() protoreflect.EnumDescriptor {
	return file_comm_proto_enumTypes[12].Descriptor()
}

func (AnnounceInfo_AnnounceType) Type() protoreflect.EnumType {
	return &file_comm_proto_enumTypes[12]
}

func (x AnnounceInfo_AnnounceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AnnounceInfo_AnnounceType.Descriptor instead.
func (AnnounceInfo_AnnounceType) EnumDescriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{89, 0}
}

type AnnounceInfo_SubType int32

const (
	AnnounceInfo_Normal      AnnounceInfo_SubType = 0 // 常规，普通
	AnnounceInfo_Quality     AnnounceInfo_SubType = 1 // 精选
	AnnounceInfo_Important   AnnounceInfo_SubType = 2 // 重磅
	AnnounceInfo_LimitedTime AnnounceInfo_SubType = 3 // 预告/限时
)

// Enum value maps for AnnounceInfo_SubType.
var (
	AnnounceInfo_SubType_name = map[int32]string{
		0: "Normal",
		1: "Quality",
		2: "Important",
		3: "LimitedTime",
	}
	AnnounceInfo_SubType_value = map[string]int32{
		"Normal":      0,
		"Quality":     1,
		"Important":   2,
		"LimitedTime": 3,
	}
)

func (x AnnounceInfo_SubType) Enum() *AnnounceInfo_SubType {
	p := new(AnnounceInfo_SubType)
	*p = x
	return p
}

func (x AnnounceInfo_SubType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AnnounceInfo_SubType) Descriptor() protoreflect.EnumDescriptor {
	return file_comm_proto_enumTypes[13].Descriptor()
}

func (AnnounceInfo_SubType) Type() protoreflect.EnumType {
	return &file_comm_proto_enumTypes[13]
}

func (x AnnounceInfo_SubType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AnnounceInfo_SubType.Descriptor instead.
func (AnnounceInfo_SubType) EnumDescriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{89, 1}
}

type AnnounceInfo_Platform int32

const (
	AnnounceInfo_None    AnnounceInfo_Platform = 0
	AnnounceInfo_IOS     AnnounceInfo_Platform = 1
	AnnounceInfo_Android AnnounceInfo_Platform = 2
	AnnounceInfo_PC      AnnounceInfo_Platform = 3
)

// Enum value maps for AnnounceInfo_Platform.
var (
	AnnounceInfo_Platform_name = map[int32]string{
		0: "None",
		1: "IOS",
		2: "Android",
		3: "PC",
	}
	AnnounceInfo_Platform_value = map[string]int32{
		"None":    0,
		"IOS":     1,
		"Android": 2,
		"PC":      3,
	}
)

func (x AnnounceInfo_Platform) Enum() *AnnounceInfo_Platform {
	p := new(AnnounceInfo_Platform)
	*p = x
	return p
}

func (x AnnounceInfo_Platform) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AnnounceInfo_Platform) Descriptor() protoreflect.EnumDescriptor {
	return file_comm_proto_enumTypes[14].Descriptor()
}

func (AnnounceInfo_Platform) Type() protoreflect.EnumType {
	return &file_comm_proto_enumTypes[14]
}

func (x AnnounceInfo_Platform) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AnnounceInfo_Platform.Descriptor instead.
func (AnnounceInfo_Platform) EnumDescriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{89, 2}
}

type AnnounceGetResp_PopupPrequency int32

const (
	AnnounceGetResp_Never     AnnounceGetResp_PopupPrequency = 0
	AnnounceGetResp_EveryTime AnnounceGetResp_PopupPrequency = 1
	AnnounceGetResp_EveryDay  AnnounceGetResp_PopupPrequency = 2
	AnnounceGetResp_EveryWeek AnnounceGetResp_PopupPrequency = 3
)

// Enum value maps for AnnounceGetResp_PopupPrequency.
var (
	AnnounceGetResp_PopupPrequency_name = map[int32]string{
		0: "Never",
		1: "EveryTime",
		2: "EveryDay",
		3: "EveryWeek",
	}
	AnnounceGetResp_PopupPrequency_value = map[string]int32{
		"Never":     0,
		"EveryTime": 1,
		"EveryDay":  2,
		"EveryWeek": 3,
	}
)

func (x AnnounceGetResp_PopupPrequency) Enum() *AnnounceGetResp_PopupPrequency {
	p := new(AnnounceGetResp_PopupPrequency)
	*p = x
	return p
}

func (x AnnounceGetResp_PopupPrequency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AnnounceGetResp_PopupPrequency) Descriptor() protoreflect.EnumDescriptor {
	return file_comm_proto_enumTypes[15].Descriptor()
}

func (AnnounceGetResp_PopupPrequency) Type() protoreflect.EnumType {
	return &file_comm_proto_enumTypes[15]
}

func (x AnnounceGetResp_PopupPrequency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AnnounceGetResp_PopupPrequency.Descriptor instead.
func (AnnounceGetResp_PopupPrequency) EnumDescriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{90, 0}
}

type PackageVersionReq_PlatfromType int32

const (
	PackageVersionReq_None    PackageVersionReq_PlatfromType = 0
	PackageVersionReq_Win     PackageVersionReq_PlatfromType = 1
	PackageVersionReq_Mac     PackageVersionReq_PlatfromType = 2
	PackageVersionReq_Android PackageVersionReq_PlatfromType = 3
	PackageVersionReq_Ios     PackageVersionReq_PlatfromType = 4
	PackageVersionReq_Editor  PackageVersionReq_PlatfromType = 5
	PackageVersionReq_Web     PackageVersionReq_PlatfromType = 6
)

// Enum value maps for PackageVersionReq_PlatfromType.
var (
	PackageVersionReq_PlatfromType_name = map[int32]string{
		0: "None",
		1: "Win",
		2: "Mac",
		3: "Android",
		4: "Ios",
		5: "Editor",
		6: "Web",
	}
	PackageVersionReq_PlatfromType_value = map[string]int32{
		"None":    0,
		"Win":     1,
		"Mac":     2,
		"Android": 3,
		"Ios":     4,
		"Editor":  5,
		"Web":     6,
	}
)

func (x PackageVersionReq_PlatfromType) Enum() *PackageVersionReq_PlatfromType {
	p := new(PackageVersionReq_PlatfromType)
	*p = x
	return p
}

func (x PackageVersionReq_PlatfromType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PackageVersionReq_PlatfromType) Descriptor() protoreflect.EnumDescriptor {
	return file_comm_proto_enumTypes[16].Descriptor()
}

func (PackageVersionReq_PlatfromType) Type() protoreflect.EnumType {
	return &file_comm_proto_enumTypes[16]
}

func (x PackageVersionReq_PlatfromType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PackageVersionReq_PlatfromType.Descriptor instead.
func (PackageVersionReq_PlatfromType) EnumDescriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{93, 0}
}

// 浮点Vector3
type Vec3F struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	Z float32 `protobuf:"fixed32,3,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *Vec3F) Reset() {
	*x = Vec3F{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vec3F) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vec3F) ProtoMessage() {}

func (x *Vec3F) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vec3F.ProtoReflect.Descriptor instead.
func (*Vec3F) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{0}
}

func (x *Vec3F) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vec3F) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Vec3F) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

// 定点数Vector3
type Vec3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X int64 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"` // fix64.Fix64(x)
	Y int64 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	Z int64 `protobuf:"varint,3,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *Vec3) Reset() {
	*x = Vec3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vec3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vec3) ProtoMessage() {}

func (x *Vec3) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vec3.ProtoReflect.Descriptor instead.
func (*Vec3) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{1}
}

func (x *Vec3) GetX() int64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vec3) GetY() int64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Vec3) GetZ() int64 {
	if x != nil {
		return x.Z
	}
	return 0
}

type Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq     uint32 `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`
	Latency uint32 `protobuf:"varint,2,opt,name=latency,proto3" json:"latency,omitempty"`
}

func (x *Ping) Reset() {
	*x = Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{2}
}

func (x *Ping) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *Ping) GetLatency() uint32 {
	if x != nil {
		return x.Latency
	}
	return 0
}

type Pong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq uint32 `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`
}

func (x *Pong) Reset() {
	*x = Pong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pong) ProtoMessage() {}

func (x *Pong) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pong.ProtoReflect.Descriptor instead.
func (*Pong) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{3}
}

func (x *Pong) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int64                    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                              // role id
	UserId               int64                    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                        // plat id
	Level                int32                    `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`                                        // 等级==家园房子等级
	Name                 string                   `protobuf:"bytes,8,opt,name=name,json=null_name,proto3" json:"name,omitempty"`                            // 名字
	LastLoginTime        int64                    `protobuf:"varint,9,opt,name=last_login_time,json=lastLoginTime,proto3" json:"last_login_time,omitempty"` // 上次登陆时间
	MidnightTime         int64                    `protobuf:"varint,10,opt,name=midnight_time,json=midnightTime,proto3" json:"midnight_time,omitempty"`     // 午夜时间
	DisplayName          string                   `protobuf:"bytes,11,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Stage                Player_PlayerCreateStage `protobuf:"varint,12,opt,name=stage,proto3,enum=comm.Player_PlayerCreateStage" json:"stage,omitempty"`
	BannedLoginStartTime int64                    `protobuf:"varint,13,opt,name=banned_login_start_time,json=bannedLoginStartTime,proto3" json:"banned_login_start_time,omitempty"`
	BannedLoginEndTime   int64                    `protobuf:"varint,14,opt,name=banned_login_end_time,json=bannedLoginEndTime,proto3" json:"banned_login_end_time,omitempty"`
	CreatedAt            int64                    `protobuf:"varint,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            int64                    `protobuf:"varint,16,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Avatar               string                   `protobuf:"bytes,17,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Description          string                   `protobuf:"bytes,18,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{4}
}

func (x *Player) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Player) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Player) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Player) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Player) GetLastLoginTime() int64 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

func (x *Player) GetMidnightTime() int64 {
	if x != nil {
		return x.MidnightTime
	}
	return 0
}

func (x *Player) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Player) GetStage() Player_PlayerCreateStage {
	if x != nil {
		return x.Stage
	}
	return Player_CreateStageNone
}

func (x *Player) GetBannedLoginStartTime() int64 {
	if x != nil {
		return x.BannedLoginStartTime
	}
	return 0
}

func (x *Player) GetBannedLoginEndTime() int64 {
	if x != nil {
		return x.BannedLoginEndTime
	}
	return 0
}

func (x *Player) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Player) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Player) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Player) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Players struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players []*Player `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
}

func (x *Players) Reset() {
	*x = Players{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Players) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Players) ProtoMessage() {}

func (x *Players) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Players.ProtoReflect.Descriptor instead.
func (*Players) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{5}
}

func (x *Players) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

type AppInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version        int64   `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`                                      // 前端版本号
	Platform       string  `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`                                     // pc,ios,android,... (数数.client_type)
	ClientIp       string  `protobuf:"bytes,3,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`                     // 前端IP(客户端不用填)
	DistinctId     string  `protobuf:"bytes,4,opt,name=distinct_id,json=distinctId,proto3" json:"distinct_id,omitempty"`               // (数数#distinct_id)
	DeviceId       string  `protobuf:"bytes,5,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`                     // 设备id
	VprsCurrent    string  `protobuf:"bytes,6,opt,name=vprs_current,json=vprsCurrent,proto3" json:"vprs_current,omitempty"`            // 数数用 前端当前版本号(数数.vprs_current)
	ExternalSource int32   `protobuf:"varint,7,opt,name=external_source,json=externalSource,proto3" json:"external_source,omitempty"`  // 第三方用户源(客户端不用填)
	ExternalUserId string  `protobuf:"bytes,8,opt,name=external_user_id,json=externalUserId,proto3" json:"external_user_id,omitempty"` // 第三方用户ID(客户端不用填)
	Country        string  `protobuf:"bytes,9,opt,name=country,proto3" json:"country,omitempty"`                                       // 数数.国家
	Timezone       float32 `protobuf:"fixed32,10,opt,name=timezone,proto3" json:"timezone,omitempty"`                                  // 数数.前端时区
}

func (x *AppInfo) Reset() {
	*x = AppInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfo) ProtoMessage() {}

func (x *AppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfo.ProtoReflect.Descriptor instead.
func (*AppInfo) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{6}
}

func (x *AppInfo) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *AppInfo) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *AppInfo) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *AppInfo) GetDistinctId() string {
	if x != nil {
		return x.DistinctId
	}
	return ""
}

func (x *AppInfo) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *AppInfo) GetVprsCurrent() string {
	if x != nil {
		return x.VprsCurrent
	}
	return ""
}

func (x *AppInfo) GetExternalSource() int32 {
	if x != nil {
		return x.ExternalSource
	}
	return 0
}

func (x *AppInfo) GetExternalUserId() string {
	if x != nil {
		return x.ExternalUserId
	}
	return ""
}

func (x *AppInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *AppInfo) GetTimezone() float32 {
	if x != nil {
		return x.Timezone
	}
	return 0
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                   // 道具id
	PlayerId   int64  `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`       // 角色id
	TableId    int32  `protobuf:"varint,3,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`          // 策划表id
	Number     int32  `protobuf:"varint,4,opt,name=number,proto3" json:"number,omitempty"`                           // 数量
	ExpireTime int64  `protobuf:"varint,5,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"` // 过期时间
	Attr       string `protobuf:"bytes,6,opt,name=attr,proto3" json:"attr,omitempty"`                                // 附加属性
	CreatedAt  int64  `protobuf:"varint,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt  int64  `protobuf:"varint,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{7}
}

func (x *Item) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Item) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *Item) GetTableId() int32 {
	if x != nil {
		return x.TableId
	}
	return 0
}

func (x *Item) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Item) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *Item) GetAttr() string {
	if x != nil {
		return x.Attr
	}
	return ""
}

func (x *Item) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Item) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type FrameHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeqId      int32 `protobuf:"varint,1,opt,name=seq_id,json=seqId,proto3" json:"seq_id,omitempty"`                // 帧序列id
	TypeId     int32 `protobuf:"varint,3,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`             // 1:move frame
	ServerTick int64 `protobuf:"varint,2,opt,name=server_tick,json=serverTick,proto3" json:"server_tick,omitempty"` // 服务器时间
	ObjectId   int64 `protobuf:"varint,4,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`       // 对象id
}

func (x *FrameHead) Reset() {
	*x = FrameHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameHead) ProtoMessage() {}

func (x *FrameHead) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameHead.ProtoReflect.Descriptor instead.
func (*FrameHead) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{8}
}

func (x *FrameHead) GetSeqId() int32 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *FrameHead) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *FrameHead) GetServerTick() int64 {
	if x != nil {
		return x.ServerTick
	}
	return 0
}

func (x *FrameHead) GetObjectId() int64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

type MoveFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos      *Vec3F `protobuf:"bytes,1,opt,name=pos,proto3" json:"pos,omitempty"`           // 坐标
	Rot      *Vec3F `protobuf:"bytes,2,opt,name=rot,proto3" json:"rot,omitempty"`           // 转向
	Velocity *Vec3F `protobuf:"bytes,3,opt,name=velocity,proto3" json:"velocity,omitempty"` // 速度
	Dt       int32  `protobuf:"varint,4,opt,name=dt,proto3" json:"dt,omitempty"`
	States   int64  `protobuf:"varint,5,opt,name=states,proto3" json:"states,omitempty"` // 状态位 前端自定义跳游等
	RealPos  *Vec3F `protobuf:"bytes,6,opt,name=real_pos,json=realPos,proto3" json:"real_pos,omitempty"`
}

func (x *MoveFrame) Reset() {
	*x = MoveFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveFrame) ProtoMessage() {}

func (x *MoveFrame) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveFrame.ProtoReflect.Descriptor instead.
func (*MoveFrame) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{9}
}

func (x *MoveFrame) GetPos() *Vec3F {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *MoveFrame) GetRot() *Vec3F {
	if x != nil {
		return x.Rot
	}
	return nil
}

func (x *MoveFrame) GetVelocity() *Vec3F {
	if x != nil {
		return x.Velocity
	}
	return nil
}

func (x *MoveFrame) GetDt() int32 {
	if x != nil {
		return x.Dt
	}
	return 0
}

func (x *MoveFrame) GetStates() int64 {
	if x != nil {
		return x.States
	}
	return 0
}

func (x *MoveFrame) GetRealPos() *Vec3F {
	if x != nil {
		return x.RealPos
	}
	return nil
}

// 帧状态
type StatusFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Head      *FrameHead `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`
	MoveFrame *MoveFrame `protobuf:"bytes,2,opt,name=move_frame,json=moveFrame,proto3" json:"move_frame,omitempty"`
}

func (x *StatusFrame) Reset() {
	*x = StatusFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusFrame) ProtoMessage() {}

func (x *StatusFrame) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusFrame.ProtoReflect.Descriptor instead.
func (*StatusFrame) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{10}
}

func (x *StatusFrame) GetHead() *FrameHead {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *StatusFrame) GetMoveFrame() *MoveFrame {
	if x != nil {
		return x.MoveFrame
	}
	return nil
}

// 任务
type Quest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                   // 任务配置id
	State      int32    `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`                             // 任务状态
	AcceptTime int64    `protobuf:"varint,3,opt,name=accept_time,json=acceptTime,proto3" json:"accept_time,omitempty"` // 接取时间戳
	ExpireTime int64    `protobuf:"varint,4,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"` // 过期时间
	Trace      bool     `protobuf:"varint,5,opt,name=trace,proto3" json:"trace,omitempty"`                             // 是否追踪
	PreState   int32    `protobuf:"varint,6,opt,name=pre_state,json=preState,proto3" json:"pre_state,omitempty"`       // 前一个状态
	Rewards    []*IdNum `protobuf:"bytes,7,rep,name=rewards,proto3" json:"rewards,omitempty"`                          // 奖励
}

func (x *Quest) Reset() {
	*x = Quest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Quest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quest) ProtoMessage() {}

func (x *Quest) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quest.ProtoReflect.Descriptor instead.
func (*Quest) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{11}
}

func (x *Quest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Quest) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Quest) GetAcceptTime() int64 {
	if x != nil {
		return x.AcceptTime
	}
	return 0
}

func (x *Quest) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *Quest) GetTrace() bool {
	if x != nil {
		return x.Trace
	}
	return false
}

func (x *Quest) GetPreState() int32 {
	if x != nil {
		return x.PreState
	}
	return 0
}

func (x *Quest) GetRewards() []*IdNum {
	if x != nil {
		return x.Rewards
	}
	return nil
}

// 任务条件
type QuestCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             // 任务条件配置id
	ReachVal int32 `protobuf:"varint,2,opt,name=reach_val,json=reachVal,proto3" json:"reach_val,omitempty"` // 条件当前达成值
	Reached  bool  `protobuf:"varint,3,opt,name=reached,proto3" json:"reached,omitempty"`                   // 条件是否已达成
}

func (x *QuestCondition) Reset() {
	*x = QuestCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestCondition) ProtoMessage() {}

func (x *QuestCondition) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestCondition.ProtoReflect.Descriptor instead.
func (*QuestCondition) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{12}
}

func (x *QuestCondition) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QuestCondition) GetReachVal() int32 {
	if x != nil {
		return x.ReachVal
	}
	return 0
}

func (x *QuestCondition) GetReached() bool {
	if x != nil {
		return x.Reached
	}
	return false
}

type UserLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host          string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"` // 如果host为空, 使用websocket创建链接是的Host
	Authorization string   `protobuf:"bytes,2,opt,name=authorization,proto3" json:"authorization,omitempty"`
	AppInfo       *AppInfo `protobuf:"bytes,3,opt,name=app_info,json=appInfo,proto3" json:"app_info,omitempty"`
}

func (x *UserLoginReq) Reset() {
	*x = UserLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginReq) ProtoMessage() {}

func (x *UserLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginReq.ProtoReflect.Descriptor instead.
func (*UserLoginReq) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{13}
}

func (x *UserLoginReq) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *UserLoginReq) GetAuthorization() string {
	if x != nil {
		return x.Authorization
	}
	return ""
}

func (x *UserLoginReq) GetAppInfo() *AppInfo {
	if x != nil {
		return x.AppInfo
	}
	return nil
}

type UserLoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostId   int32 `protobuf:"varint,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	PlayerId int64 `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	// ugc
	HostIp         string `protobuf:"bytes,3,opt,name=host_ip,json=hostIp,proto3" json:"host_ip,omitempty"`
	InstId         int64  `protobuf:"varint,5,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"`
	HostPort       int32  `protobuf:"varint,4,opt,name=host_port,json=hostPort,proto3" json:"host_port,omitempty"`
	StageId        int32  `protobuf:"varint,6,opt,name=stage_id,json=stageId,proto3" json:"stage_id,omitempty"`
	ExternalSource int32  `protobuf:"varint,7,opt,name=external_source,json=externalSource,proto3" json:"external_source,omitempty"`
	ExternalUserId string `protobuf:"bytes,8,opt,name=external_user_id,json=externalUserId,proto3" json:"external_user_id,omitempty"`
	UserId         int64  `protobuf:"varint,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 暴露给前端数数用
}

func (x *UserLoginResp) Reset() {
	*x = UserLoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginResp) ProtoMessage() {}

func (x *UserLoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginResp.ProtoReflect.Descriptor instead.
func (*UserLoginResp) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{14}
}

func (x *UserLoginResp) GetHostId() int32 {
	if x != nil {
		return x.HostId
	}
	return 0
}

func (x *UserLoginResp) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *UserLoginResp) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

func (x *UserLoginResp) GetInstId() int64 {
	if x != nil {
		return x.InstId
	}
	return 0
}

func (x *UserLoginResp) GetHostPort() int32 {
	if x != nil {
		return x.HostPort
	}
	return 0
}

func (x *UserLoginResp) GetStageId() int32 {
	if x != nil {
		return x.StageId
	}
	return 0
}

func (x *UserLoginResp) GetExternalSource() int32 {
	if x != nil {
		return x.ExternalSource
	}
	return 0
}

func (x *UserLoginResp) GetExternalUserId() string {
	if x != nil {
		return x.ExternalUserId
	}
	return ""
}

func (x *UserLoginResp) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type PlayerLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId int64    `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"` // 用户id
	AppInfo  *AppInfo `protobuf:"bytes,2,opt,name=app_info,json=appInfo,proto3" json:"app_info,omitempty"`
}

func (x *PlayerLoginReq) Reset() {
	*x = PlayerLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerLoginReq) ProtoMessage() {}

func (x *PlayerLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerLoginReq.ProtoReflect.Descriptor instead.
func (*PlayerLoginReq) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{15}
}

func (x *PlayerLoginReq) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *PlayerLoginReq) GetAppInfo() *AppInfo {
	if x != nil {
		return x.AppInfo
	}
	return nil
}

type PlayerLoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base                *Player         `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`                                                                                                                                           // 玩家信息
	NeedRebuilding      bool            `protobuf:"varint,2,opt,name=need_rebuilding,json=needRebuilding,proto3" json:"need_rebuilding,omitempty"`                                                                                                // 是否断线重连 ? OpcodePlayerRebuilds : OpcodePlayerJoinBattle
	FashionIds          []int32         `protobuf:"varint,3,rep,packed,name=fashion_ids,json=fashionIds,proto3" json:"fashion_ids,omitempty"`                                                                                                     // 穿在身上的时装列表
	Homestead           int32           `protobuf:"varint,4,opt,name=homestead,proto3" json:"homestead,omitempty"`                                                                                                                                // 家园地图ID if 0 OpcodeSelectHome
	ModuleSwitchIds     []int32         `protobuf:"varint,5,rep,packed,name=module_switch_ids,json=moduleSwitchIds,proto3" json:"module_switch_ids,omitempty"`                                                                                    // 开启的功能id列表
	CharacterCreator    map[int32]int32 `protobuf:"bytes,6,rep,name=character_creator,json=characterCreator,proto3" json:"character_creator,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // 捏脸
	EmotionIds          []int32         `protobuf:"varint,7,rep,packed,name=emotion_ids,json=emotionIds,proto3" json:"emotion_ids,omitempty"`                                                                                                     // 解锁的表情动作
	Avatar              *Avatar         `protobuf:"bytes,8,opt,name=avatar,proto3" json:"avatar,omitempty"`
	UnlockVoxelMaterial []int32         `protobuf:"varint,9,rep,packed,name=unlock_voxel_material,json=unlockVoxelMaterial,proto3" json:"unlock_voxel_material,omitempty"`
}

func (x *PlayerLoginResp) Reset() {
	*x = PlayerLoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerLoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerLoginResp) ProtoMessage() {}

func (x *PlayerLoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerLoginResp.ProtoReflect.Descriptor instead.
func (*PlayerLoginResp) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{16}
}

func (x *PlayerLoginResp) GetBase() *Player {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *PlayerLoginResp) GetNeedRebuilding() bool {
	if x != nil {
		return x.NeedRebuilding
	}
	return false
}

func (x *PlayerLoginResp) GetFashionIds() []int32 {
	if x != nil {
		return x.FashionIds
	}
	return nil
}

func (x *PlayerLoginResp) GetHomestead() int32 {
	if x != nil {
		return x.Homestead
	}
	return 0
}

func (x *PlayerLoginResp) GetModuleSwitchIds() []int32 {
	if x != nil {
		return x.ModuleSwitchIds
	}
	return nil
}

func (x *PlayerLoginResp) GetCharacterCreator() map[int32]int32 {
	if x != nil {
		return x.CharacterCreator
	}
	return nil
}

func (x *PlayerLoginResp) GetEmotionIds() []int32 {
	if x != nil {
		return x.EmotionIds
	}
	return nil
}

func (x *PlayerLoginResp) GetAvatar() *Avatar {
	if x != nil {
		return x.Avatar
	}
	return nil
}

func (x *PlayerLoginResp) GetUnlockVoxelMaterial() []int32 {
	if x != nil {
		return x.UnlockVoxelMaterial
	}
	return nil
}

type PlayerInfoBatchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerIds []int64 `protobuf:"varint,1,rep,packed,name=player_ids,json=playerIds,proto3" json:"player_ids,omitempty"` // 用户id
}

func (x *PlayerInfoBatchReq) Reset() {
	*x = PlayerInfoBatchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInfoBatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfoBatchReq) ProtoMessage() {}

func (x *PlayerInfoBatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInfoBatchReq.ProtoReflect.Descriptor instead.
func (*PlayerInfoBatchReq) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{17}
}

func (x *PlayerInfoBatchReq) GetPlayerIds() []int64 {
	if x != nil {
		return x.PlayerIds
	}
	return nil
}

type PlayerIdByUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
	HostId int32 `protobuf:"varint,2,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"` // HostId
}

func (x *PlayerIdByUserReq) Reset() {
	*x = PlayerIdByUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerIdByUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerIdByUserReq) ProtoMessage() {}

func (x *PlayerIdByUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerIdByUserReq.ProtoReflect.Descriptor instead.
func (*PlayerIdByUserReq) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{18}
}

func (x *PlayerIdByUserReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PlayerIdByUserReq) GetHostId() int32 {
	if x != nil {
		return x.HostId
	}
	return 0
}

type PlayerIdByUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId int64 `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"` // 玩家i
}

func (x *PlayerIdByUserResp) Reset() {
	*x = PlayerIdByUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerIdByUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerIdByUserResp) ProtoMessage() {}

func (x *PlayerIdByUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerIdByUserResp.ProtoReflect.Descriptor instead.
func (*PlayerIdByUserResp) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{19}
}

func (x *PlayerIdByUserResp) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

type PlayerCache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        int64   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name          string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Level         int32   `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	LastLoginTime int64   `protobuf:"varint,4,opt,name=last_login_time,json=lastLoginTime,proto3" json:"last_login_time,omitempty"`
	PlayerId      int64   `protobuf:"varint,5,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	DisplayName   string  `protobuf:"bytes,6,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Avatar        *Avatar `protobuf:"bytes,7,opt,name=avatar,proto3" json:"avatar,omitempty"`
	CreateAt      int64   `protobuf:"varint,8,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	Description   string  `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *PlayerCache) Reset() {
	*x = PlayerCache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerCache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerCache) ProtoMessage() {}

func (x *PlayerCache) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerCache.ProtoReflect.Descriptor instead.
func (*PlayerCache) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{20}
}

func (x *PlayerCache) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PlayerCache) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlayerCache) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *PlayerCache) GetLastLoginTime() int64 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

func (x *PlayerCache) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *PlayerCache) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *PlayerCache) GetAvatar() *Avatar {
	if x != nil {
		return x.Avatar
	}
	return nil
}

func (x *PlayerCache) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *PlayerCache) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type PlayerCacheMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheMap map[int64]*PlayerCache `protobuf:"bytes,1,rep,name=cache_map,json=cacheMap,proto3" json:"cache_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PlayerCacheMap) Reset() {
	*x = PlayerCacheMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerCacheMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerCacheMap) ProtoMessage() {}

func (x *PlayerCacheMap) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerCacheMap.ProtoReflect.Descriptor instead.
func (*PlayerCacheMap) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{21}
}

func (x *PlayerCacheMap) GetCacheMap() map[int64]*PlayerCache {
	if x != nil {
		return x.CacheMap
	}
	return nil
}

type CellEnterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleType int32 `protobuf:"varint,1,opt,name=battle_type,json=battleType,proto3" json:"battle_type,omitempty"`
}

func (x *CellEnterResp) Reset() {
	*x = CellEnterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellEnterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellEnterResp) ProtoMessage() {}

func (x *CellEnterResp) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellEnterResp.ProtoReflect.Descriptor instead.
func (*CellEnterResp) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{22}
}

func (x *CellEnterResp) GetBattleType() int32 {
	if x != nil {
		return x.BattleType
	}
	return 0
}

type PlayerJoinBattleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientTick int64 `protobuf:"varint,1,opt,name=client_tick,json=clientTick,proto3" json:"client_tick,omitempty"` // 客户端时间戳
	InstId     int64 `protobuf:"varint,2,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"`             // 客户单不用填写
}

func (x *PlayerJoinBattleReq) Reset() {
	*x = PlayerJoinBattleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerJoinBattleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerJoinBattleReq) ProtoMessage() {}

func (x *PlayerJoinBattleReq) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerJoinBattleReq.ProtoReflect.Descriptor instead.
func (*PlayerJoinBattleReq) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{23}
}

func (x *PlayerJoinBattleReq) GetClientTick() int64 {
	if x != nil {
		return x.ClientTick
	}
	return 0
}

func (x *PlayerJoinBattleReq) GetInstId() int64 {
	if x != nil {
		return x.InstId
	}
	return 0
}

type PlayerRebuildingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientTick int64  `protobuf:"varint,1,opt,name=client_tick,json=clientTick,proto3" json:"client_tick,omitempty"` // 客户端时间戳
	ClientIp   string `protobuf:"bytes,2,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`        // 服务器内部使用
	Platform   string `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`                        // 平台ios,android,pc, web
}

func (x *PlayerRebuildingReq) Reset() {
	*x = PlayerRebuildingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerRebuildingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerRebuildingReq) ProtoMessage() {}

func (x *PlayerRebuildingReq) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerRebuildingReq.ProtoReflect.Descriptor instead.
func (*PlayerRebuildingReq) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{24}
}

func (x *PlayerRebuildingReq) GetClientTick() int64 {
	if x != nil {
		return x.ClientTick
	}
	return 0
}

func (x *PlayerRebuildingReq) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *PlayerRebuildingReq) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

type PlayerInfoByUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Host   string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *PlayerInfoByUserReq) Reset() {
	*x = PlayerInfoByUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInfoByUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfoByUserReq) ProtoMessage() {}

func (x *PlayerInfoByUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInfoByUserReq.ProtoReflect.Descriptor instead.
func (*PlayerInfoByUserReq) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{25}
}

func (x *PlayerInfoByUserReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PlayerInfoByUserReq) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

type PlayerCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PlayerName        string   `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	Host              string   `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Region            string   `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	HostId            int32    `protobuf:"varint,5,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"` // 客户端不用上传,会被填充
	ZoneOffsetMinutes int32    `protobuf:"varint,7,opt,name=zone_offset_minutes,json=zoneOffsetMinutes,proto3" json:"zone_offset_minutes,omitempty"`
	Country           string   `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	AppInfo           *AppInfo `protobuf:"bytes,8,opt,name=app_info,json=appInfo,proto3" json:"app_info,omitempty"`
	DisplayName       string   `protobuf:"bytes,9,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *PlayerCreateReq) Reset() {
	*x = PlayerCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerCreateReq) ProtoMessage() {}

func (x *PlayerCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerCreateReq.ProtoReflect.Descriptor instead.
func (*PlayerCreateReq) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{26}
}

func (x *PlayerCreateReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PlayerCreateReq) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *PlayerCreateReq) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *PlayerCreateReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *PlayerCreateReq) GetHostId() int32 {
	if x != nil {
		return x.HostId
	}
	return 0
}

func (x *PlayerCreateReq) GetZoneOffsetMinutes() int32 {
	if x != nil {
		return x.ZoneOffsetMinutes
	}
	return 0
}

func (x *PlayerCreateReq) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *PlayerCreateReq) GetAppInfo() *AppInfo {
	if x != nil {
		return x.AppInfo
	}
	return nil
}

func (x *PlayerCreateReq) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type PlayerCreateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerInfo *Player `protobuf:"bytes,1,opt,name=player_info,json=playerInfo,proto3" json:"player_info,omitempty"`
}

func (x *PlayerCreateResp) Reset() {
	*x = PlayerCreateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerCreateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerCreateResp) ProtoMessage() {}

func (x *PlayerCreateResp) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerCreateResp.ProtoReflect.Descriptor instead.
func (*PlayerCreateResp) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{27}
}

func (x *PlayerCreateResp) GetPlayerInfo() *Player {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

// <demo>
type NtpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientTick int64 `protobuf:"varint,1,opt,name=client_tick,json=clientTick,proto3" json:"client_tick,omitempty"`
}

func (x *NtpReq) Reset() {
	*x = NtpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtpReq) ProtoMessage() {}

func (x *NtpReq) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtpReq.ProtoReflect.Descriptor instead.
func (*NtpReq) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{28}
}

func (x *NtpReq) GetClientTick() int64 {
	if x != nil {
		return x.ClientTick
	}
	return 0
}

type NtpResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientTick        int64 `protobuf:"varint,1,opt,name=client_tick,json=clientTick,proto3" json:"client_tick,omitempty"`
	ServerHandleTick  int64 `protobuf:"varint,2,opt,name=server_handle_tick,json=serverHandleTick,proto3" json:"server_handle_tick,omitempty"`
	ServerSendTick    int64 `protobuf:"varint,3,opt,name=server_send_tick,json=serverSendTick,proto3" json:"server_send_tick,omitempty"`
	ClientReceiveTick int64 `protobuf:"varint,4,opt,name=client_receive_tick,json=clientReceiveTick,proto3" json:"client_receive_tick,omitempty"`
}

func (x *NtpResp) Reset() {
	*x = NtpResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtpResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtpResp) ProtoMessage() {}

func (x *NtpResp) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtpResp.ProtoReflect.Descriptor instead.
func (*NtpResp) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{29}
}

func (x *NtpResp) GetClientTick() int64 {
	if x != nil {
		return x.ClientTick
	}
	return 0
}

func (x *NtpResp) GetServerHandleTick() int64 {
	if x != nil {
		return x.ServerHandleTick
	}
	return 0
}

func (x *NtpResp) GetServerSendTick() int64 {
	if x != nil {
		return x.ServerSendTick
	}
	return 0
}

func (x *NtpResp) GetClientReceiveTick() int64 {
	if x != nil {
		return x.ClientReceiveTick
	}
	return 0
}

type Strength struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Strength       int64 `protobuf:"varint,1,opt,name=strength,proto3" json:"strength,omitempty"`
	StrengthMax    int64 `protobuf:"varint,2,opt,name=strength_max,json=strengthMax,proto3" json:"strength_max,omitempty"`
	NextUpdateTime int64 `protobuf:"varint,3,opt,name=next_update_time,json=nextUpdateTime,proto3" json:"next_update_time,omitempty"`
	Fatigue        int32 `protobuf:"varint,4,opt,name=fatigue,proto3" json:"fatigue,omitempty"`
}

func (x *Strength) Reset() {
	*x = Strength{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Strength) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Strength) ProtoMessage() {}

func (x *Strength) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Strength.ProtoReflect.Descriptor instead.
func (*Strength) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{30}
}

func (x *Strength) GetStrength() int64 {
	if x != nil {
		return x.Strength
	}
	return 0
}

func (x *Strength) GetStrengthMax() int64 {
	if x != nil {
		return x.StrengthMax
	}
	return 0
}

func (x *Strength) GetNextUpdateTime() int64 {
	if x != nil {
		return x.NextUpdateTime
	}
	return 0
}

func (x *Strength) GetFatigue() int32 {
	if x != nil {
		return x.Fatigue
	}
	return 0
}

type Weather struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weather []int32 `protobuf:"varint,1,rep,packed,name=weather,proto3" json:"weather,omitempty"`
	Season  int32   `protobuf:"varint,2,opt,name=season,proto3" json:"season,omitempty"`
}

func (x *Weather) Reset() {
	*x = Weather{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Weather) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Weather) ProtoMessage() {}

func (x *Weather) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Weather.ProtoReflect.Descriptor instead.
func (*Weather) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{31}
}

func (x *Weather) GetWeather() []int32 {
	if x != nil {
		return x.Weather
	}
	return nil
}

func (x *Weather) GetSeason() int32 {
	if x != nil {
		return x.Season
	}
	return 0
}

type FashionPreset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp  int32   `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Name       string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	TableIdArr []int32 `protobuf:"varint,3,rep,packed,name=table_id_arr,json=tableIdArr,proto3" json:"table_id_arr,omitempty"`
}

func (x *FashionPreset) Reset() {
	*x = FashionPreset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FashionPreset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FashionPreset) ProtoMessage() {}

func (x *FashionPreset) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FashionPreset.ProtoReflect.Descriptor instead.
func (*FashionPreset) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{32}
}

func (x *FashionPreset) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *FashionPreset) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FashionPreset) GetTableIdArr() []int32 {
	if x != nil {
		return x.TableIdArr
	}
	return nil
}

// 通用TabIdNum
type IdNum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Num int32 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *IdNum) Reset() {
	*x = IdNum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdNum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdNum) ProtoMessage() {}

func (x *IdNum) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdNum.ProtoReflect.Descriptor instead.
func (*IdNum) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{33}
}

func (x *IdNum) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IdNum) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

// diy房子的部件
type HouseParts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartsType  HouseParts_PartsType `protobuf:"varint,1,opt,name=parts_type,json=partsType,proto3,enum=comm.HouseParts_PartsType" json:"parts_type,omitempty"` // 部件类型
	TabId      uint32               `protobuf:"varint,2,opt,name=tab_id,json=tabId,proto3" json:"tab_id,omitempty"`                                            // 该类型配置表中的Id
	Pos        *Vec3F               `protobuf:"bytes,3,opt,name=pos,proto3" json:"pos,omitempty"`                                                              // 暂时相对房子的坐标
	Rot        *Vec3F               `protobuf:"bytes,4,opt,name=rot,proto3" json:"rot,omitempty"`                                                              // 转向
	ColorIndex uint32               `protobuf:"varint,5,opt,name=color_index,json=colorIndex,proto3" json:"color_index,omitempty"`                             // 颜色下标(配置几种颜色)
	// 材质或纹理todo...
	TextureId int32                     `protobuf:"varint,6,opt,name=texture_id,json=textureId,proto3" json:"texture_id,omitempty"`                  // 纹理id
	Id        uint32                    `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`                                                 // 部件id
	Housedir  HouseParts_HouseDirection `protobuf:"varint,8,opt,name=housedir,proto3,enum=comm.HouseParts_HouseDirection" json:"housedir,omitempty"` // 在房子中的方向
}

func (x *HouseParts) Reset() {
	*x = HouseParts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HouseParts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HouseParts) ProtoMessage() {}

func (x *HouseParts) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HouseParts.ProtoReflect.Descriptor instead.
func (*HouseParts) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{34}
}

func (x *HouseParts) GetPartsType() HouseParts_PartsType {
	if x != nil {
		return x.PartsType
	}
	return HouseParts_NONE
}

func (x *HouseParts) GetTabId() uint32 {
	if x != nil {
		return x.TabId
	}
	return 0
}

func (x *HouseParts) GetPos() *Vec3F {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *HouseParts) GetRot() *Vec3F {
	if x != nil {
		return x.Rot
	}
	return nil
}

func (x *HouseParts) GetColorIndex() uint32 {
	if x != nil {
		return x.ColorIndex
	}
	return 0
}

func (x *HouseParts) GetTextureId() int32 {
	if x != nil {
		return x.TextureId
	}
	return 0
}

func (x *HouseParts) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HouseParts) GetHousedir() HouseParts_HouseDirection {
	if x != nil {
		return x.Housedir
	}
	return HouseParts_Front
}

// diy房子
type DiyBuilding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HouseId   int64               `protobuf:"varint,1,opt,name=house_id,json=houseId,proto3" json:"house_id,omitempty"`
	CmpList   []*HouseParts       `protobuf:"bytes,2,rep,name=cmp_list,json=cmpList,proto3" json:"cmp_list,omitempty"`
	DiyMode   DiyBuilding_DiyMode `protobuf:"varint,3,opt,name=diy_mode,json=diyMode,proto3,enum=comm.DiyBuilding_DiyMode" json:"diy_mode,omitempty"`
	SuitTabId uint32              `protobuf:"varint,4,opt,name=suit_tabId,json=suitTabId,proto3" json:"suit_tabId,omitempty"` // 套装diy配置表中的id
}

func (x *DiyBuilding) Reset() {
	*x = DiyBuilding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiyBuilding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiyBuilding) ProtoMessage() {}

func (x *DiyBuilding) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiyBuilding.ProtoReflect.Descriptor instead.
func (*DiyBuilding) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{35}
}

func (x *DiyBuilding) GetHouseId() int64 {
	if x != nil {
		return x.HouseId
	}
	return 0
}

func (x *DiyBuilding) GetCmpList() []*HouseParts {
	if x != nil {
		return x.CmpList
	}
	return nil
}

func (x *DiyBuilding) GetDiyMode() DiyBuilding_DiyMode {
	if x != nil {
		return x.DiyMode
	}
	return DiyBuilding_Free
}

func (x *DiyBuilding) GetSuitTabId() uint32 {
	if x != nil {
		return x.SuitTabId
	}
	return 0
}

// 图鉴总览
type IllustratedBookSum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// int32 group_id              = 1 [json_name = "id"];   // 组id 仅用在map里省略用mapK
	Score     int32          `protobuf:"varint,2,opt,name=score,json=sc,proto3" json:"score,omitempty"`                                                                                                     // 总积分(1级目录)
	Unread    int32          `protobuf:"varint,3,opt,name=unread,json=ur,proto3" json:"unread,omitempty"`                                                                                                   // 新 未读条数 >0红点(基级目录)
	RewardGot map[int32]bool `protobuf:"bytes,4,rep,name=reward_got,json=got,proto3" json:"reward_got,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // 奖励已领
	Sum       int32          `protobuf:"varint,5,opt,name=sum,json=nm,proto3" json:"sum,omitempty"`                                                                                                         // 总达成数(基级目录)
}

func (x *IllustratedBookSum) Reset() {
	*x = IllustratedBookSum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IllustratedBookSum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IllustratedBookSum) ProtoMessage() {}

func (x *IllustratedBookSum) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IllustratedBookSum.ProtoReflect.Descriptor instead.
func (*IllustratedBookSum) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{36}
}

func (x *IllustratedBookSum) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *IllustratedBookSum) GetUnread() int32 {
	if x != nil {
		return x.Unread
	}
	return 0
}

func (x *IllustratedBookSum) GetRewardGot() map[int32]bool {
	if x != nil {
		return x.RewardGot
	}
	return nil
}

func (x *IllustratedBookSum) GetSum() int32 {
	if x != nil {
		return x.Sum
	}
	return 0
}

// 图鉴
type IllustratedBook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// int32 tab_id = 1;  // 配置id 仅用在map里省略用mapK
	Stat int32 `protobuf:"varint,2,opt,name=stat,proto3" json:"stat,omitempty"` // 1新未读
}

func (x *IllustratedBook) Reset() {
	*x = IllustratedBook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IllustratedBook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IllustratedBook) ProtoMessage() {}

func (x *IllustratedBook) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IllustratedBook.ProtoReflect.Descriptor instead.
func (*IllustratedBook) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{37}
}

func (x *IllustratedBook) GetStat() int32 {
	if x != nil {
		return x.Stat
	}
	return 0
}

// 商店
type ShopItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PurchasedNum     int32 `protobuf:"varint,2,opt,name=purchased_num,json=purchasedNum,proto3" json:"purchased_num,omitempty"`
	MaxNum           int32 `protobuf:"varint,3,opt,name=max_num,json=maxNum,proto3" json:"max_num,omitempty"`                                 // 剩余购买次数
	PublishLimitArea int32 `protobuf:"varint,4,opt,name=publish_limit_area,json=publishLimitArea,proto3" json:"publish_limit_area,omitempty"` // 限制区域
}

func (x *ShopItem) Reset() {
	*x = ShopItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopItem) ProtoMessage() {}

func (x *ShopItem) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopItem.ProtoReflect.Descriptor instead.
func (*ShopItem) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{38}
}

func (x *ShopItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShopItem) GetPurchasedNum() int32 {
	if x != nil {
		return x.PurchasedNum
	}
	return 0
}

func (x *ShopItem) GetMaxNum() int32 {
	if x != nil {
		return x.MaxNum
	}
	return 0
}

func (x *ShopItem) GetPublishLimitArea() int32 {
	if x != nil {
		return x.PublishLimitArea
	}
	return 0
}

type ShopPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageId          int32               `protobuf:"varint,1,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`                                                                                            // 页签
	ItemMap         map[int32]*ShopItem `protobuf:"bytes,2,rep,name=item_map,json=itemMap,proto3" json:"item_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 所有商品
	RefreshTime     uint32              `protobuf:"varint,3,opt,name=refresh_time,json=refreshTime,proto3" json:"refresh_time,omitempty"`                                                                             // 刷新时间
	NextRefreshTime uint32              `protobuf:"varint,4,opt,name=next_refresh_time,json=nextRefreshTime,proto3" json:"next_refresh_time,omitempty"`                                                               // 刷新时间
}

func (x *ShopPage) Reset() {
	*x = ShopPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopPage) ProtoMessage() {}

func (x *ShopPage) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopPage.ProtoReflect.Descriptor instead.
func (*ShopPage) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{39}
}

func (x *ShopPage) GetPageId() int32 {
	if x != nil {
		return x.PageId
	}
	return 0
}

func (x *ShopPage) GetItemMap() map[int32]*ShopItem {
	if x != nil {
		return x.ItemMap
	}
	return nil
}

func (x *ShopPage) GetRefreshTime() uint32 {
	if x != nil {
		return x.RefreshTime
	}
	return 0
}

func (x *ShopPage) GetNextRefreshTime() uint32 {
	if x != nil {
		return x.NextRefreshTime
	}
	return 0
}

type ShopGoods struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Goods map[int32]*ShopPage `protobuf:"bytes,1,rep,name=goods,proto3" json:"goods,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 货架
}

func (x *ShopGoods) Reset() {
	*x = ShopGoods{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopGoods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopGoods) ProtoMessage() {}

func (x *ShopGoods) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopGoods.ProtoReflect.Descriptor instead.
func (*ShopGoods) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{40}
}

func (x *ShopGoods) GetGoods() map[int32]*ShopPage {
	if x != nil {
		return x.Goods
	}
	return nil
}

type ShopBuyItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopItemId int32 `protobuf:"varint,1,opt,name=shop_item_id,json=shopItemId,proto3" json:"shop_item_id,omitempty"` // 道具id
	Num        int32 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`                                   // 购买次数
	PageId     int32 `protobuf:"varint,3,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
}

func (x *ShopBuyItem) Reset() {
	*x = ShopBuyItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopBuyItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopBuyItem) ProtoMessage() {}

func (x *ShopBuyItem) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopBuyItem.ProtoReflect.Descriptor instead.
func (*ShopBuyItem) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{41}
}

func (x *ShopBuyItem) GetShopItemId() int32 {
	if x != nil {
		return x.ShopItemId
	}
	return 0
}

func (x *ShopBuyItem) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *ShopBuyItem) GetPageId() int32 {
	if x != nil {
		return x.PageId
	}
	return 0
}

// GM指令
type GMReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action   string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	PlayerId int64  `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"` // 内部使用
}

func (x *GMReq) Reset() {
	*x = GMReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GMReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GMReq) ProtoMessage() {}

func (x *GMReq) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GMReq.ProtoReflect.Descriptor instead.
func (*GMReq) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{42}
}

func (x *GMReq) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *GMReq) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

type GMResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GMResp) Reset() {
	*x = GMResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GMResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GMResp) ProtoMessage() {}

func (x *GMResp) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GMResp.ProtoReflect.Descriptor instead.
func (*GMResp) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{43}
}

func (x *GMResp) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type ItemCraft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId   int64   `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	LearnedIds []int32 `protobuf:"varint,2,rep,packed,name=learned_ids,json=learnedIds,proto3" json:"learned_ids,omitempty"`
	UsedIds    []int32 `protobuf:"varint,3,rep,packed,name=used_ids,json=usedIds,proto3" json:"used_ids,omitempty"`
}

func (x *ItemCraft) Reset() {
	*x = ItemCraft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemCraft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemCraft) ProtoMessage() {}

func (x *ItemCraft) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemCraft.ProtoReflect.Descriptor instead.
func (*ItemCraft) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{44}
}

func (x *ItemCraft) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *ItemCraft) GetLearnedIds() []int32 {
	if x != nil {
		return x.LearnedIds
	}
	return nil
}

func (x *ItemCraft) GetUsedIds() []int32 {
	if x != nil {
		return x.UsedIds
	}
	return nil
}

type ItemSell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId        int64   `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	NextRefreshTime int64   `protobuf:"varint,2,opt,name=next_refresh_time,json=nextRefreshTime,proto3" json:"next_refresh_time,omitempty"`
	HighPriceIds    []int32 `protobuf:"varint,3,rep,packed,name=high_price_ids,json=highPriceIds,proto3" json:"high_price_ids,omitempty"`
}

func (x *ItemSell) Reset() {
	*x = ItemSell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemSell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemSell) ProtoMessage() {}

func (x *ItemSell) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemSell.ProtoReflect.Descriptor instead.
func (*ItemSell) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{45}
}

func (x *ItemSell) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *ItemSell) GetNextRefreshTime() int64 {
	if x != nil {
		return x.NextRefreshTime
	}
	return 0
}

func (x *ItemSell) GetHighPriceIds() []int32 {
	if x != nil {
		return x.HighPriceIds
	}
	return nil
}

type Mail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SourceId    int64    `protobuf:"varint,3,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	SourceType  int32    `protobuf:"varint,2,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`
	TableId     int32    `protobuf:"varint,4,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	TemplateId  int32    `protobuf:"varint,5,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	RecipientId int64    `protobuf:"varint,6,opt,name=recipientId,proto3" json:"recipientId,omitempty"`
	SenderName  string   `protobuf:"bytes,7,opt,name=sender_name,json=senderName,proto3" json:"sender_name,omitempty"`
	Subject     string   `protobuf:"bytes,8,opt,name=subject,proto3" json:"subject,omitempty"`
	Content     string   `protobuf:"bytes,9,opt,name=content,proto3" json:"content,omitempty"`
	Attach      []*IdNum `protobuf:"bytes,10,rep,name=attach,proto3" json:"attach,omitempty"`
	State       int32    `protobuf:"varint,11,opt,name=state,proto3" json:"state,omitempty"`
	GmtId       int32    `protobuf:"varint,12,opt,name=gmt_id,json=gmtId,proto3" json:"gmt_id,omitempty"`
	ExpireAt    int64    `protobuf:"varint,14,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`
	CreateAt    int64    `protobuf:"varint,15,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
}

func (x *Mail) Reset() {
	*x = Mail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mail) ProtoMessage() {}

func (x *Mail) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mail.ProtoReflect.Descriptor instead.
func (*Mail) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{46}
}

func (x *Mail) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Mail) GetSourceId() int64 {
	if x != nil {
		return x.SourceId
	}
	return 0
}

func (x *Mail) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *Mail) GetTableId() int32 {
	if x != nil {
		return x.TableId
	}
	return 0
}

func (x *Mail) GetTemplateId() int32 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *Mail) GetRecipientId() int64 {
	if x != nil {
		return x.RecipientId
	}
	return 0
}

func (x *Mail) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *Mail) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Mail) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Mail) GetAttach() []*IdNum {
	if x != nil {
		return x.Attach
	}
	return nil
}

func (x *Mail) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Mail) GetGmtId() int32 {
	if x != nil {
		return x.GmtId
	}
	return 0
}

func (x *Mail) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

func (x *Mail) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

type MailBriefInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	State int32 `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *MailBriefInfo) Reset() {
	*x = MailBriefInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailBriefInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailBriefInfo) ProtoMessage() {}

func (x *MailBriefInfo) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailBriefInfo.ProtoReflect.Descriptor instead.
func (*MailBriefInfo) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{47}
}

func (x *MailBriefInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MailBriefInfo) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

type Pet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                          // 槽位id(1-100)
	TabId      int32   `protobuf:"varint,2,opt,name=tab_id,json=tabId,proto3" json:"tab_id,omitempty"`                       // 配置id
	Exp        int32   `protobuf:"varint,3,opt,name=exp,proto3" json:"exp,omitempty"`                                        // 经验
	Level      int32   `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`                                    // 等级
	State      int32   `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty"`                                    // 状态
	Nature     int32   `protobuf:"varint,6,opt,name=nature,proto3" json:"nature,omitempty"`                                  // 性格
	Name       string  `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`                                       // 名字
	UsedOrders []int32 `protobuf:"varint,8,rep,packed,name=used_orders,json=usedOrders,proto3" json:"used_orders,omitempty"` // 使用过的指令
	Size       int32   `protobuf:"varint,9,opt,name=size,proto3" json:"size,omitempty"`                                      // 缩放比例（除1000）
	Read       bool    `protobuf:"varint,10,opt,name=read,proto3" json:"read,omitempty"`                                     // 是否已读
}

func (x *Pet) Reset() {
	*x = Pet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pet) ProtoMessage() {}

func (x *Pet) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pet.ProtoReflect.Descriptor instead.
func (*Pet) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{48}
}

func (x *Pet) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Pet) GetTabId() int32 {
	if x != nil {
		return x.TabId
	}
	return 0
}

func (x *Pet) GetExp() int32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *Pet) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Pet) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Pet) GetNature() int32 {
	if x != nil {
		return x.Nature
	}
	return 0
}

func (x *Pet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Pet) GetUsedOrders() []int32 {
	if x != nil {
		return x.UsedOrders
	}
	return nil
}

func (x *Pet) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Pet) GetRead() bool {
	if x != nil {
		return x.Read
	}
	return false
}

type TextureDiy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TabId      int32    `protobuf:"varint,3,opt,name=tab_id,json=tb,proto3" json:"tab_id,omitempty"`
	Name       string   `protobuf:"bytes,2,opt,name=name,json=na,proto3" json:"name,omitempty"`
	TextureUrl []string `protobuf:"bytes,4,rep,name=texture_url,json=tu,proto3" json:"texture_url,omitempty"`
	InstId     int32    `protobuf:"varint,5,opt,name=inst_id,json=i,proto3" json:"inst_id,omitempty"` // 实例id，在图纸变更时，找到对应的引用
}

func (x *TextureDiy) Reset() {
	*x = TextureDiy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextureDiy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextureDiy) ProtoMessage() {}

func (x *TextureDiy) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextureDiy.ProtoReflect.Descriptor instead.
func (*TextureDiy) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{49}
}

func (x *TextureDiy) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TextureDiy) GetTabId() int32 {
	if x != nil {
		return x.TabId
	}
	return 0
}

func (x *TextureDiy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TextureDiy) GetTextureUrl() []string {
	if x != nil {
		return x.TextureUrl
	}
	return nil
}

func (x *TextureDiy) GetInstId() int32 {
	if x != nil {
		return x.InstId
	}
	return 0
}

type PlayerGamePlayTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabId         int32 `protobuf:"varint,1,opt,name=tab_id,json=id,proto3" json:"tab_id,omitempty"`
	PeriodCnt     int32 `protobuf:"varint,2,opt,name=period_cnt,json=tc,proto3" json:"period_cnt,omitempty"`
	PrevTimePoint int64 `protobuf:"varint,3,opt,name=prev_time_point,json=pt,proto3" json:"prev_time_point,omitempty"`
	NextTimePoint int64 `protobuf:"varint,4,opt,name=next_time_point,json=nt,proto3" json:"next_time_point,omitempty"`
}

func (x *PlayerGamePlayTrigger) Reset() {
	*x = PlayerGamePlayTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerGamePlayTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerGamePlayTrigger) ProtoMessage() {}

func (x *PlayerGamePlayTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerGamePlayTrigger.ProtoReflect.Descriptor instead.
func (*PlayerGamePlayTrigger) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{50}
}

func (x *PlayerGamePlayTrigger) GetTabId() int32 {
	if x != nil {
		return x.TabId
	}
	return 0
}

func (x *PlayerGamePlayTrigger) GetPeriodCnt() int32 {
	if x != nil {
		return x.PeriodCnt
	}
	return 0
}

func (x *PlayerGamePlayTrigger) GetPrevTimePoint() int64 {
	if x != nil {
		return x.PrevTimePoint
	}
	return 0
}

func (x *PlayerGamePlayTrigger) GetNextTimePoint() int64 {
	if x != nil {
		return x.NextTimePoint
	}
	return 0
}

type PlayerGamePlayActive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabId        int32 `protobuf:"varint,1,opt,name=tab_id,json=id,proto3" json:"tab_id,omitempty"`
	TriggerTabId int32 `protobuf:"varint,2,opt,name=trigger_tab_id,json=td,proto3" json:"trigger_tab_id,omitempty"`
	TriggerTime  int64 `protobuf:"varint,3,opt,name=trigger_time,json=tt,proto3" json:"trigger_time,omitempty"`
	ActiveTime   int64 `protobuf:"varint,4,opt,name=active_time,json=at,proto3" json:"active_time,omitempty"`
}

func (x *PlayerGamePlayActive) Reset() {
	*x = PlayerGamePlayActive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerGamePlayActive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerGamePlayActive) ProtoMessage() {}

func (x *PlayerGamePlayActive) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerGamePlayActive.ProtoReflect.Descriptor instead.
func (*PlayerGamePlayActive) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{51}
}

func (x *PlayerGamePlayActive) GetTabId() int32 {
	if x != nil {
		return x.TabId
	}
	return 0
}

func (x *PlayerGamePlayActive) GetTriggerTabId() int32 {
	if x != nil {
		return x.TriggerTabId
	}
	return 0
}

func (x *PlayerGamePlayActive) GetTriggerTime() int64 {
	if x != nil {
		return x.TriggerTime
	}
	return 0
}

func (x *PlayerGamePlayActive) GetActiveTime() int64 {
	if x != nil {
		return x.ActiveTime
	}
	return 0
}

type PlayerBriefInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 好友id
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Level       int32   `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	DisplayName string  `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Avatar      *Avatar `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *PlayerBriefInfo) Reset() {
	*x = PlayerBriefInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerBriefInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerBriefInfo) ProtoMessage() {}

func (x *PlayerBriefInfo) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerBriefInfo.ProtoReflect.Descriptor instead.
func (*PlayerBriefInfo) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{52}
}

func (x *PlayerBriefInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PlayerBriefInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlayerBriefInfo) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *PlayerBriefInfo) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *PlayerBriefInfo) GetAvatar() *Avatar {
	if x != nil {
		return x.Avatar
	}
	return nil
}

type PlayerBriefInfoMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoMap map[int64]*PlayerBriefInfo `protobuf:"bytes,1,rep,name=info_map,json=infoMap,proto3" json:"info_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PlayerBriefInfoMap) Reset() {
	*x = PlayerBriefInfoMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerBriefInfoMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerBriefInfoMap) ProtoMessage() {}

func (x *PlayerBriefInfoMap) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerBriefInfoMap.ProtoReflect.Descriptor instead.
func (*PlayerBriefInfoMap) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{53}
}

func (x *PlayerBriefInfoMap) GetInfoMap() map[int64]*PlayerBriefInfo {
	if x != nil {
		return x.InfoMap
	}
	return nil
}

type FriendIntimacyEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type             int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	UsedTimes        int32 `protobuf:"varint,2,opt,name=used_times,json=usedTimes,proto3" json:"used_times,omitempty"`
	LastIntimacyTime int64 `protobuf:"varint,3,opt,name=last_intimacy_time,json=lastIntimacyTime,proto3" json:"last_intimacy_time,omitempty"`
}

func (x *FriendIntimacyEntry) Reset() {
	*x = FriendIntimacyEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendIntimacyEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendIntimacyEntry) ProtoMessage() {}

func (x *FriendIntimacyEntry) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendIntimacyEntry.ProtoReflect.Descriptor instead.
func (*FriendIntimacyEntry) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{54}
}

func (x *FriendIntimacyEntry) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *FriendIntimacyEntry) GetUsedTimes() int32 {
	if x != nil {
		return x.UsedTimes
	}
	return 0
}

func (x *FriendIntimacyEntry) GetLastIntimacyTime() int64 {
	if x != nil {
		return x.LastIntimacyTime
	}
	return 0
}

type FriendBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedTime       int64                  `protobuf:"varint,1,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"` // 创建时间
	PlayerId          int64                  `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`          // 好友id
	Remark            string                 `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`                               // 备注
	ConfirmStatus     int32                  `protobuf:"varint,5,opt,name=confirm_status,json=confirmStatus,proto3" json:"confirm_status,omitempty"`
	Intimacy          int32                  `protobuf:"varint,3,opt,name=intimacy,proto3" json:"intimacy,omitempty"` // 亲密度
	LastIntimacyTime  int64                  `protobuf:"varint,6,opt,name=last_intimacy_time,json=lastIntimacyTime,proto3" json:"last_intimacy_time,omitempty"`
	UsedIntimacyTimes int32                  `protobuf:"varint,7,opt,name=used_intimacy_times,json=usedIntimacyTimes,proto3" json:"used_intimacy_times,omitempty"`
	IntimacyList      []*FriendIntimacyEntry `protobuf:"bytes,8,rep,name=intimacy_list,json=intimacyList,proto3" json:"intimacy_list,omitempty"`
}

func (x *FriendBaseInfo) Reset() {
	*x = FriendBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendBaseInfo) ProtoMessage() {}

func (x *FriendBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendBaseInfo.ProtoReflect.Descriptor instead.
func (*FriendBaseInfo) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{55}
}

func (x *FriendBaseInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *FriendBaseInfo) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *FriendBaseInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *FriendBaseInfo) GetConfirmStatus() int32 {
	if x != nil {
		return x.ConfirmStatus
	}
	return 0
}

func (x *FriendBaseInfo) GetIntimacy() int32 {
	if x != nil {
		return x.Intimacy
	}
	return 0
}

func (x *FriendBaseInfo) GetLastIntimacyTime() int64 {
	if x != nil {
		return x.LastIntimacyTime
	}
	return 0
}

func (x *FriendBaseInfo) GetUsedIntimacyTimes() int32 {
	if x != nil {
		return x.UsedIntimacyTimes
	}
	return 0
}

func (x *FriendBaseInfo) GetIntimacyList() []*FriendIntimacyEntry {
	if x != nil {
		return x.IntimacyList
	}
	return nil
}

type FriendInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseInfo       *FriendBaseInfo `protobuf:"bytes,1,opt,name=base_info,json=baseInfo,proto3" json:"base_info,omitempty"`    // 基础信息
	MapTabId       int32           `protobuf:"varint,2,opt,name=map_tab_id,json=mapTabId,proto3" json:"map_tab_id,omitempty"` // 所在地图
	Level          int32           `protobuf:"varint,7,opt,name=level,proto3" json:"level,omitempty"`
	IsOnline       bool            `protobuf:"varint,3,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"` // 是否在线
	UgcMapTabId    int32           `protobuf:"varint,9,opt,name=ugc_map_tab_id,json=ugcMapTabId,proto3" json:"ugc_map_tab_id,omitempty"`
	LastOnlineTime int64           `protobuf:"varint,4,opt,name=last_online_time,json=lastOnlineTime,proto3" json:"last_online_time,omitempty"` // unix time
	Name           string          `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`                                              // 名字
	Signature      string          `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`                                    // 个性签名
	RoomId         int64           `protobuf:"varint,8,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	UgcRoomId      int64           `protobuf:"varint,10,opt,name=ugc_room_id,json=ugcRoomId,proto3" json:"ugc_room_id,omitempty"`
	DisplayName    string          `protobuf:"bytes,11,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	HouseId        int64           `protobuf:"varint,12,opt,name=house_id,json=houseId,proto3" json:"house_id,omitempty"`
	Description    string          `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
	Avatar         *Avatar         `protobuf:"bytes,14,opt,name=avatar,proto3" json:"avatar,omitempty"`
	InfoRefresh    bool            `protobuf:"varint,15,opt,name=info_refresh,json=infoRefresh,proto3" json:"info_refresh,omitempty"` // 是否需要刷新好友信息
}

func (x *FriendInfo) Reset() {
	*x = FriendInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendInfo) ProtoMessage() {}

func (x *FriendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendInfo.ProtoReflect.Descriptor instead.
func (*FriendInfo) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{56}
}

func (x *FriendInfo) GetBaseInfo() *FriendBaseInfo {
	if x != nil {
		return x.BaseInfo
	}
	return nil
}

func (x *FriendInfo) GetMapTabId() int32 {
	if x != nil {
		return x.MapTabId
	}
	return 0
}

func (x *FriendInfo) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *FriendInfo) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *FriendInfo) GetUgcMapTabId() int32 {
	if x != nil {
		return x.UgcMapTabId
	}
	return 0
}

func (x *FriendInfo) GetLastOnlineTime() int64 {
	if x != nil {
		return x.LastOnlineTime
	}
	return 0
}

func (x *FriendInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FriendInfo) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *FriendInfo) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *FriendInfo) GetUgcRoomId() int64 {
	if x != nil {
		return x.UgcRoomId
	}
	return 0
}

func (x *FriendInfo) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *FriendInfo) GetHouseId() int64 {
	if x != nil {
		return x.HouseId
	}
	return 0
}

func (x *FriendInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FriendInfo) GetAvatar() *Avatar {
	if x != nil {
		return x.Avatar
	}
	return nil
}

func (x *FriendInfo) GetInfoRefresh() bool {
	if x != nil {
		return x.InfoRefresh
	}
	return false
}

type FriendApplyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId    int64   `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedTime int64   `protobuf:"varint,3,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	DisplayName string  `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Avatar      *Avatar `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *FriendApplyInfo) Reset() {
	*x = FriendApplyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendApplyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendApplyInfo) ProtoMessage() {}

func (x *FriendApplyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendApplyInfo.ProtoReflect.Descriptor instead.
func (*FriendApplyInfo) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{57}
}

func (x *FriendApplyInfo) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *FriendApplyInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FriendApplyInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *FriendApplyInfo) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *FriendApplyInfo) GetAvatar() *Avatar {
	if x != nil {
		return x.Avatar
	}
	return nil
}

type FriendBlackInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId    int64   `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	CreatedTime int64   `protobuf:"varint,2,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	Avatar      *Avatar `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *FriendBlackInfo) Reset() {
	*x = FriendBlackInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendBlackInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendBlackInfo) ProtoMessage() {}

func (x *FriendBlackInfo) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendBlackInfo.ProtoReflect.Descriptor instead.
func (*FriendBlackInfo) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{58}
}

func (x *FriendBlackInfo) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *FriendBlackInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *FriendBlackInfo) GetAvatar() *Avatar {
	if x != nil {
		return x.Avatar
	}
	return nil
}

type FriendAll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendMap map[int64]*FriendInfo      `protobuf:"bytes,1,rep,name=friend_map,json=friendMap,proto3" json:"friend_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	BlackMap  map[int64]*FriendBlackInfo `protobuf:"bytes,2,rep,name=black_map,json=blackMap,proto3" json:"black_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ApplyMap  map[int64]*FriendApplyInfo `protobuf:"bytes,3,rep,name=apply_map,json=applyMap,proto3" json:"apply_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IsValid   bool                       `protobuf:"varint,4,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Ver       int32                      `protobuf:"varint,5,opt,name=ver,proto3" json:"ver,omitempty"`
}

func (x *FriendAll) Reset() {
	*x = FriendAll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendAll) ProtoMessage() {}

func (x *FriendAll) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendAll.ProtoReflect.Descriptor instead.
func (*FriendAll) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{59}
}

func (x *FriendAll) GetFriendMap() map[int64]*FriendInfo {
	if x != nil {
		return x.FriendMap
	}
	return nil
}

func (x *FriendAll) GetBlackMap() map[int64]*FriendBlackInfo {
	if x != nil {
		return x.BlackMap
	}
	return nil
}

func (x *FriendAll) GetApplyMap() map[int64]*FriendApplyInfo {
	if x != nil {
		return x.ApplyMap
	}
	return nil
}

func (x *FriendAll) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *FriendAll) GetVer() int32 {
	if x != nil {
		return x.Ver
	}
	return 0
}

type FriendOperateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId          int64             `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`      // 请求的玩家id
	RequestName        string            `protobuf:"bytes,2,opt,name=request_name,json=requestName,proto3" json:"request_name,omitempty"` // 请求者名字
	PeerId             int64             `protobuf:"varint,3,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`               // 被操作的id
	PeerName           string            `protobuf:"bytes,4,opt,name=peer_name,json=peerName,proto3" json:"peer_name,omitempty"`
	OpType             FriendOperateType `protobuf:"varint,5,opt,name=op_type,json=opType,proto3,enum=comm.FriendOperateType" json:"op_type,omitempty"`
	RequestDisplayName string            `protobuf:"bytes,6,opt,name=request_display_name,json=requestDisplayName,proto3" json:"request_display_name,omitempty"`
	PeerDisplayName    string            `protobuf:"bytes,7,opt,name=peer_display_name,json=peerDisplayName,proto3" json:"peer_display_name,omitempty"`
}

func (x *FriendOperateReq) Reset() {
	*x = FriendOperateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendOperateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendOperateReq) ProtoMessage() {}

func (x *FriendOperateReq) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendOperateReq.ProtoReflect.Descriptor instead.
func (*FriendOperateReq) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{60}
}

func (x *FriendOperateReq) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *FriendOperateReq) GetRequestName() string {
	if x != nil {
		return x.RequestName
	}
	return ""
}

func (x *FriendOperateReq) GetPeerId() int64 {
	if x != nil {
		return x.PeerId
	}
	return 0
}

func (x *FriendOperateReq) GetPeerName() string {
	if x != nil {
		return x.PeerName
	}
	return ""
}

func (x *FriendOperateReq) GetOpType() FriendOperateType {
	if x != nil {
		return x.OpType
	}
	return FriendOperateType_NONE
}

func (x *FriendOperateReq) GetRequestDisplayName() string {
	if x != nil {
		return x.RequestDisplayName
	}
	return ""
}

func (x *FriendOperateReq) GetPeerDisplayName() string {
	if x != nil {
		return x.PeerDisplayName
	}
	return ""
}

type FriendUpdateRemarkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId int64  `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // 请求的玩家id
	PeerId    int64  `protobuf:"varint,2,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`          // 被操作的id
	Remark    string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *FriendUpdateRemarkReq) Reset() {
	*x = FriendUpdateRemarkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendUpdateRemarkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendUpdateRemarkReq) ProtoMessage() {}

func (x *FriendUpdateRemarkReq) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendUpdateRemarkReq.ProtoReflect.Descriptor instead.
func (*FriendUpdateRemarkReq) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{61}
}

func (x *FriendUpdateRemarkReq) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *FriendUpdateRemarkReq) GetPeerId() int64 {
	if x != nil {
		return x.PeerId
	}
	return 0
}

func (x *FriendUpdateRemarkReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type FriendAddIntimacyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId int64        `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // 请求的玩家id
	PeerId    int64        `protobuf:"varint,2,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`          // 被操作的id
	Val       int32        `protobuf:"varint,3,opt,name=val,proto3" json:"val,omitempty"`
	Type      IntimacyType `protobuf:"varint,4,opt,name=type,proto3,enum=comm.IntimacyType" json:"type,omitempty"`
}

func (x *FriendAddIntimacyReq) Reset() {
	*x = FriendAddIntimacyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendAddIntimacyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendAddIntimacyReq) ProtoMessage() {}

func (x *FriendAddIntimacyReq) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendAddIntimacyReq.ProtoReflect.Descriptor instead.
func (*FriendAddIntimacyReq) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{62}
}

func (x *FriendAddIntimacyReq) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *FriendAddIntimacyReq) GetPeerId() int64 {
	if x != nil {
		return x.PeerId
	}
	return 0
}

func (x *FriendAddIntimacyReq) GetVal() int32 {
	if x != nil {
		return x.Val
	}
	return 0
}

func (x *FriendAddIntimacyReq) GetType() IntimacyType {
	if x != nil {
		return x.Type
	}
	return IntimacyType_None
}

type FriendUpdateIntimacyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId int64                `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // 请求的玩家id
	PeerId    int64                `protobuf:"varint,2,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`          // 被操作的id
	Intimacy  int64                `protobuf:"varint,3,opt,name=intimacy,proto3" json:"intimacy,omitempty"`                    // 当前亲密度
	Entry     *FriendIntimacyEntry `protobuf:"bytes,4,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *FriendUpdateIntimacyResp) Reset() {
	*x = FriendUpdateIntimacyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendUpdateIntimacyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendUpdateIntimacyResp) ProtoMessage() {}

func (x *FriendUpdateIntimacyResp) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendUpdateIntimacyResp.ProtoReflect.Descriptor instead.
func (*FriendUpdateIntimacyResp) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{63}
}

func (x *FriendUpdateIntimacyResp) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *FriendUpdateIntimacyResp) GetPeerId() int64 {
	if x != nil {
		return x.PeerId
	}
	return 0
}

func (x *FriendUpdateIntimacyResp) GetIntimacy() int64 {
	if x != nil {
		return x.Intimacy
	}
	return 0
}

func (x *FriendUpdateIntimacyResp) GetEntry() *FriendIntimacyEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type FriendLoginInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId  int64 `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	LoginTime int64 `protobuf:"varint,2,opt,name=login_time,json=loginTime,proto3" json:"login_time,omitempty"`
	MapTabId  int32 `protobuf:"varint,3,opt,name=map_tab_id,json=mapTabId,proto3" json:"map_tab_id,omitempty"`
	IsUgc     bool  `protobuf:"varint,4,opt,name=is_ugc,json=isUgc,proto3" json:"is_ugc,omitempty"`
}

func (x *FriendLoginInfo) Reset() {
	*x = FriendLoginInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendLoginInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendLoginInfo) ProtoMessage() {}

func (x *FriendLoginInfo) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendLoginInfo.ProtoReflect.Descriptor instead.
func (*FriendLoginInfo) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{64}
}

func (x *FriendLoginInfo) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *FriendLoginInfo) GetLoginTime() int64 {
	if x != nil {
		return x.LoginTime
	}
	return 0
}

func (x *FriendLoginInfo) GetMapTabId() int32 {
	if x != nil {
		return x.MapTabId
	}
	return 0
}

func (x *FriendLoginInfo) GetIsUgc() bool {
	if x != nil {
		return x.IsUgc
	}
	return false
}

type FriendEnterMapInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId int64  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	RoomId   int64  `protobuf:"varint,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	MapTabId int32  `protobuf:"varint,2,opt,name=map_tab_id,json=mapTabId,proto3" json:"map_tab_id,omitempty"`
	IsUgc    bool   `protobuf:"varint,4,opt,name=is_ugc,json=isUgc,proto3" json:"is_ugc,omitempty"`
	HouseId  int32  `protobuf:"varint,5,opt,name=house_id,json=houseId,proto3" json:"house_id,omitempty"`
	HostPort int32  `protobuf:"varint,7,opt,name=host_port,json=hostPort,proto3" json:"host_port,omitempty"`
	HostIp   string `protobuf:"bytes,6,opt,name=host_ip,json=hostIp,proto3" json:"host_ip,omitempty"`
}

func (x *FriendEnterMapInfo) Reset() {
	*x = FriendEnterMapInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendEnterMapInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendEnterMapInfo) ProtoMessage() {}

func (x *FriendEnterMapInfo) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendEnterMapInfo.ProtoReflect.Descriptor instead.
func (*FriendEnterMapInfo) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{65}
}

func (x *FriendEnterMapInfo) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *FriendEnterMapInfo) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *FriendEnterMapInfo) GetMapTabId() int32 {
	if x != nil {
		return x.MapTabId
	}
	return 0
}

func (x *FriendEnterMapInfo) GetIsUgc() bool {
	if x != nil {
		return x.IsUgc
	}
	return false
}

func (x *FriendEnterMapInfo) GetHouseId() int32 {
	if x != nil {
		return x.HouseId
	}
	return 0
}

func (x *FriendEnterMapInfo) GetHostPort() int32 {
	if x != nil {
		return x.HostPort
	}
	return 0
}

func (x *FriendEnterMapInfo) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

type FriendLogoutInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId   int64 `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	LogoutTime int64 `protobuf:"varint,2,opt,name=logout_time,json=logoutTime,proto3" json:"logout_time,omitempty"`
	MapTabId   int32 `protobuf:"varint,3,opt,name=map_tab_id,json=mapTabId,proto3" json:"map_tab_id,omitempty"`
	IsUgc      bool  `protobuf:"varint,4,opt,name=is_ugc,json=isUgc,proto3" json:"is_ugc,omitempty"`
}

func (x *FriendLogoutInfo) Reset() {
	*x = FriendLogoutInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendLogoutInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendLogoutInfo) ProtoMessage() {}

func (x *FriendLogoutInfo) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendLogoutInfo.ProtoReflect.Descriptor instead.
func (*FriendLogoutInfo) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{66}
}

func (x *FriendLogoutInfo) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *FriendLogoutInfo) GetLogoutTime() int64 {
	if x != nil {
		return x.LogoutTime
	}
	return 0
}

func (x *FriendLogoutInfo) GetMapTabId() int32 {
	if x != nil {
		return x.MapTabId
	}
	return 0
}

func (x *FriendLogoutInfo) GetIsUgc() bool {
	if x != nil {
		return x.IsUgc
	}
	return false
}

type FriendDeleteInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerId      int64   `protobuf:"varint,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	DeletedTime int64   `protobuf:"varint,2,opt,name=deleted_time,json=deletedTime,proto3" json:"deleted_time,omitempty"`
	Avatar      *Avatar `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *FriendDeleteInfo) Reset() {
	*x = FriendDeleteInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendDeleteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendDeleteInfo) ProtoMessage() {}

func (x *FriendDeleteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendDeleteInfo.ProtoReflect.Descriptor instead.
func (*FriendDeleteInfo) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{67}
}

func (x *FriendDeleteInfo) GetPeerId() int64 {
	if x != nil {
		return x.PeerId
	}
	return 0
}

func (x *FriendDeleteInfo) GetDeletedTime() int64 {
	if x != nil {
		return x.DeletedTime
	}
	return 0
}

func (x *FriendDeleteInfo) GetAvatar() *Avatar {
	if x != nil {
		return x.Avatar
	}
	return nil
}

type PlayerMapInfoCache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapTabId      int32  `protobuf:"varint,1,opt,name=map_tab_id,json=mapTabId,proto3" json:"map_tab_id,omitempty"`
	RoomId        int64  `protobuf:"varint,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	UgcMapTabId   int32  `protobuf:"varint,3,opt,name=ugc_map_tab_id,json=ugcMapTabId,proto3" json:"ugc_map_tab_id,omitempty"`
	HouseId       int32  `protobuf:"varint,7,opt,name=house_id,json=houseId,proto3" json:"house_id,omitempty"`
	UgcRoomId     int64  `protobuf:"varint,4,opt,name=ugc_room_id,json=ugcRoomId,proto3" json:"ugc_room_id,omitempty"`
	LastLoginTime int64  `protobuf:"varint,6,opt,name=last_login_time,json=lastLoginTime,proto3" json:"last_login_time,omitempty"`
	UgcHostIp     string `protobuf:"bytes,8,opt,name=ugc_host_ip,json=ugcHostIp,proto3" json:"ugc_host_ip,omitempty"`
	IsOnline      bool   `protobuf:"varint,5,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	UgcHostPort   int32  `protobuf:"varint,9,opt,name=ugc_host_port,json=ugcHostPort,proto3" json:"ugc_host_port,omitempty"`
}

func (x *PlayerMapInfoCache) Reset() {
	*x = PlayerMapInfoCache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerMapInfoCache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerMapInfoCache) ProtoMessage() {}

func (x *PlayerMapInfoCache) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerMapInfoCache.ProtoReflect.Descriptor instead.
func (*PlayerMapInfoCache) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{68}
}

func (x *PlayerMapInfoCache) GetMapTabId() int32 {
	if x != nil {
		return x.MapTabId
	}
	return 0
}

func (x *PlayerMapInfoCache) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *PlayerMapInfoCache) GetUgcMapTabId() int32 {
	if x != nil {
		return x.UgcMapTabId
	}
	return 0
}

func (x *PlayerMapInfoCache) GetHouseId() int32 {
	if x != nil {
		return x.HouseId
	}
	return 0
}

func (x *PlayerMapInfoCache) GetUgcRoomId() int64 {
	if x != nil {
		return x.UgcRoomId
	}
	return 0
}

func (x *PlayerMapInfoCache) GetLastLoginTime() int64 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

func (x *PlayerMapInfoCache) GetUgcHostIp() string {
	if x != nil {
		return x.UgcHostIp
	}
	return ""
}

func (x *PlayerMapInfoCache) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *PlayerMapInfoCache) GetUgcHostPort() int32 {
	if x != nil {
		return x.UgcHostPort
	}
	return 0
}

type PlayerMapInfoCacheMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoMap map[int64]*PlayerMapInfoCache `protobuf:"bytes,1,rep,name=info_map,json=infoMap,proto3" json:"info_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Type    PlayerMapInfoCacheType        `protobuf:"varint,2,opt,name=type,proto3,enum=comm.PlayerMapInfoCacheType" json:"type,omitempty"`
}

func (x *PlayerMapInfoCacheMap) Reset() {
	*x = PlayerMapInfoCacheMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerMapInfoCacheMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerMapInfoCacheMap) ProtoMessage() {}

func (x *PlayerMapInfoCacheMap) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerMapInfoCacheMap.ProtoReflect.Descriptor instead.
func (*PlayerMapInfoCacheMap) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{69}
}

func (x *PlayerMapInfoCacheMap) GetInfoMap() map[int64]*PlayerMapInfoCache {
	if x != nil {
		return x.InfoMap
	}
	return nil
}

func (x *PlayerMapInfoCacheMap) GetType() PlayerMapInfoCacheType {
	if x != nil {
		return x.Type
	}
	return PlayerMapInfoCacheType_All
}

type PlayerSearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId int64  `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PeerId    int64  `protobuf:"varint,3,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
}

func (x *PlayerSearchReq) Reset() {
	*x = PlayerSearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerSearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerSearchReq) ProtoMessage() {}

func (x *PlayerSearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerSearchReq.ProtoReflect.Descriptor instead.
func (*PlayerSearchReq) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{70}
}

func (x *PlayerSearchReq) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *PlayerSearchReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlayerSearchReq) GetPeerId() int64 {
	if x != nil {
		return x.PeerId
	}
	return 0
}

type PlayerSearchResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        int64   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name          string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Level         int32   `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	IsOnline      bool    `protobuf:"varint,6,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	LastLoginTime int64   `protobuf:"varint,4,opt,name=last_login_time,json=lastLoginTime,proto3" json:"last_login_time,omitempty"`
	PlayerId      int64   `protobuf:"varint,5,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	DisplayName   string  `protobuf:"bytes,7,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Avatar        *Avatar `protobuf:"bytes,8,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Description   string  `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *PlayerSearchResp) Reset() {
	*x = PlayerSearchResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerSearchResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerSearchResp) ProtoMessage() {}

func (x *PlayerSearchResp) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerSearchResp.ProtoReflect.Descriptor instead.
func (*PlayerSearchResp) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{71}
}

func (x *PlayerSearchResp) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PlayerSearchResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlayerSearchResp) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *PlayerSearchResp) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *PlayerSearchResp) GetLastLoginTime() int64 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

func (x *PlayerSearchResp) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *PlayerSearchResp) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *PlayerSearchResp) GetAvatar() *Avatar {
	if x != nil {
		return x.Avatar
	}
	return nil
}

func (x *PlayerSearchResp) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// 蓝图 体素
type Span struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos      *Vec3        `protobuf:"bytes,1,opt,name=pos,proto3" json:"pos,omitempty"` // 用于蓝图时为相对坐标
	SpanData []*Span_Data `protobuf:"bytes,2,rep,name=span_data,json=spanData,proto3" json:"span_data,omitempty"`
}

func (x *Span) Reset() {
	*x = Span{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Span) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Span) ProtoMessage() {}

func (x *Span) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Span.ProtoReflect.Descriptor instead.
func (*Span) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{72}
}

func (x *Span) GetPos() *Vec3 {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *Span) GetSpanData() []*Span_Data {
	if x != nil {
		return x.SpanData
	}
	return nil
}

// 蓝图 元素
type BuildElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 模板属性
	Idx             int32        `protobuf:"varint,1,opt,name=idx,proto3" json:"idx,omitempty"`                                                 // 元素索引
	ParentIdx       int32        `protobuf:"varint,2,opt,name=parent_idx,json=parentIdx,proto3" json:"parent_idx,omitempty"`                    // 父索引号
	Tp              int32        `protobuf:"varint,3,opt,name=tp,proto3" json:"tp,omitempty"`                                                   // 类型: 5:建筑 7:植物 8:摆放物（家具） 9:桥或坡
	TabId           int32        `protobuf:"varint,4,opt,name=tab_id,json=tabId,proto3" json:"tab_id,omitempty"`                                // 配置表id
	Pos             *Vec3F       `protobuf:"bytes,5,opt,name=pos,proto3" json:"pos,omitempty"`                                                  // 位置(建筑/植物:体素级坐标; 摆放物:相对于蓝图总锚点的浮点坐标)
	FaceTo          int32        `protobuf:"varint,6,opt,name=face_to,json=faceTo,proto3" json:"face_to,omitempty"`                             // 朝向 int16
	Diy             *DiyBuilding `protobuf:"bytes,10,opt,name=diy,proto3" json:"diy,omitempty"`                                                 // 建筑类:diy...
	HorizontalAngle int32        `protobuf:"varint,11,opt,name=horizontal_angle,json=horizontalAngle,proto3" json:"horizontal_angle,omitempty"` // 家具类:挂件 水平角度，延X轴平面旋转
	VerticalAngle   int32        `protobuf:"varint,12,opt,name=vertical_angle,json=verticalAngle,proto3" json:"vertical_angle,omitempty"`       // 家具类:挂件 垂直角度，延Y轴平面旋转
}

func (x *BuildElement) Reset() {
	*x = BuildElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildElement) ProtoMessage() {}

func (x *BuildElement) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildElement.ProtoReflect.Descriptor instead.
func (*BuildElement) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{73}
}

func (x *BuildElement) GetIdx() int32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *BuildElement) GetParentIdx() int32 {
	if x != nil {
		return x.ParentIdx
	}
	return 0
}

func (x *BuildElement) GetTp() int32 {
	if x != nil {
		return x.Tp
	}
	return 0
}

func (x *BuildElement) GetTabId() int32 {
	if x != nil {
		return x.TabId
	}
	return 0
}

func (x *BuildElement) GetPos() *Vec3F {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *BuildElement) GetFaceTo() int32 {
	if x != nil {
		return x.FaceTo
	}
	return 0
}

func (x *BuildElement) GetDiy() *DiyBuilding {
	if x != nil {
		return x.Diy
	}
	return nil
}

func (x *BuildElement) GetHorizontalAngle() int32 {
	if x != nil {
		return x.HorizontalAngle
	}
	return 0
}

func (x *BuildElement) GetVerticalAngle() int32 {
	if x != nil {
		return x.VerticalAngle
	}
	return 0
}

// 蓝图 建造信息
type BlueprintBuild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width  int32   `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`   // 长宽ID 按格数
	Height int32   `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"` // Y最大高差
	Spans  []*Span `protobuf:"bytes,3,rep,name=spans,proto3" json:"spans,omitempty"`    // 地面体素 .pos以相对坐标
	// 矿石,掉落物,NPC不上蓝图
	Element    []*BuildElement                     `protobuf:"bytes,4,rep,name=element,proto3" json:"element,omitempty"`                                                                                                                 // 地物元素 带父子关系的存必须先父后子
	DiyTexture map[string]*BlueprintBuild_ArrayPos `protobuf:"bytes,5,rep,name=diy_texture,json=diyTexture,proto3" json:"diy_texture,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 自定义贴图<URL,体素坐标s>
}

func (x *BlueprintBuild) Reset() {
	*x = BlueprintBuild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlueprintBuild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlueprintBuild) ProtoMessage() {}

func (x *BlueprintBuild) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlueprintBuild.ProtoReflect.Descriptor instead.
func (*BlueprintBuild) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{74}
}

func (x *BlueprintBuild) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *BlueprintBuild) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *BlueprintBuild) GetSpans() []*Span {
	if x != nil {
		return x.Spans
	}
	return nil
}

func (x *BlueprintBuild) GetElement() []*BuildElement {
	if x != nil {
		return x.Element
	}
	return nil
}

func (x *BlueprintBuild) GetDiyTexture() map[string]*BlueprintBuild_ArrayPos {
	if x != nil {
		return x.DiyTexture
	}
	return nil
}

// 蓝图
type Blueprint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                              // 蓝图id(首次自动不可改)
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                           // 蓝图名字
	Width      int32  `protobuf:"varint,3,opt,name=width,json=w,proto3" json:"width,omitempty"`                 // 长宽ID
	Height     int32  `protobuf:"varint,4,opt,name=height,json=h,proto3" json:"height,omitempty"`               // data.height Y(冗余)
	Des        string `protobuf:"bytes,5,opt,name=des,proto3" json:"des,omitempty"`                             // 描述
	CreateTime int64  `protobuf:"varint,6,opt,name=create_time,json=ct,proto3" json:"create_time,omitempty"`    // 创建/发布时间(首次自动不可改)
	DataUrl    string `protobuf:"bytes,8,opt,name=data_url,json=dt,proto3" json:"data_url,omitempty"`           // 详情 云地址
	ShotUrl    string `protobuf:"bytes,9,opt,name=shot_url,json=st,proto3" json:"shot_url,omitempty"`           // 截图 云地址多个逗号分隔
	PlayerId   int64  `protobuf:"varint,10,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"` // 作者ID(发布自动不可改.个人,官方蓝图为0)
	// 用OpcodeQueryPlayersInfo取名字头像
	Tag1      int32  `protobuf:"varint,12,opt,name=tag1,proto3" json:"tag1,omitempty"`                // 搜索标签1
	Tag2      int32  `protobuf:"varint,13,opt,name=tag2,proto3" json:"tag2,omitempty"`                // 搜索标签2
	Tag3      int32  `protobuf:"varint,14,opt,name=tag3,proto3" json:"tag3,omitempty"`                // 搜索标签3
	Supports  int32  `protobuf:"varint,15,opt,name=supports,proto3" json:"supports,omitempty"`        // 点赞++
	Favorites int32  `protobuf:"varint,16,opt,name=favorites,proto3" json:"favorites,omitempty"`      // 收藏++
	SwPass    bool   `protobuf:"varint,17,opt,name=sw_pass,json=swp,proto3" json:"sw_pass,omitempty"` // 密码开关
	Passwd    string `protobuf:"bytes,18,opt,name=passwd,json=pwd,proto3" json:"passwd,omitempty"`    // 明密码 给发布者明文,给非发布者密文(passwd+id).md5()
}

func (x *Blueprint) Reset() {
	*x = Blueprint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Blueprint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blueprint) ProtoMessage() {}

func (x *Blueprint) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blueprint.ProtoReflect.Descriptor instead.
func (*Blueprint) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{75}
}

func (x *Blueprint) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Blueprint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Blueprint) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Blueprint) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Blueprint) GetDes() string {
	if x != nil {
		return x.Des
	}
	return ""
}

func (x *Blueprint) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Blueprint) GetDataUrl() string {
	if x != nil {
		return x.DataUrl
	}
	return ""
}

func (x *Blueprint) GetShotUrl() string {
	if x != nil {
		return x.ShotUrl
	}
	return ""
}

func (x *Blueprint) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *Blueprint) GetTag1() int32 {
	if x != nil {
		return x.Tag1
	}
	return 0
}

func (x *Blueprint) GetTag2() int32 {
	if x != nil {
		return x.Tag2
	}
	return 0
}

func (x *Blueprint) GetTag3() int32 {
	if x != nil {
		return x.Tag3
	}
	return 0
}

func (x *Blueprint) GetSupports() int32 {
	if x != nil {
		return x.Supports
	}
	return 0
}

func (x *Blueprint) GetFavorites() int32 {
	if x != nil {
		return x.Favorites
	}
	return 0
}

func (x *Blueprint) GetSwPass() bool {
	if x != nil {
		return x.SwPass
	}
	return false
}

func (x *Blueprint) GetPasswd() string {
	if x != nil {
		return x.Passwd
	}
	return ""
}

type CharacterCreatorUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SettingId int32 `protobuf:"varint,1,opt,name=setting_id,json=settingId,proto3" json:"setting_id,omitempty"`
	Value     int32 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CharacterCreatorUnit) Reset() {
	*x = CharacterCreatorUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterCreatorUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterCreatorUnit) ProtoMessage() {}

func (x *CharacterCreatorUnit) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterCreatorUnit.ProtoReflect.Descriptor instead.
func (*CharacterCreatorUnit) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{76}
}

func (x *CharacterCreatorUnit) GetSettingId() int32 {
	if x != nil {
		return x.SettingId
	}
	return 0
}

func (x *CharacterCreatorUnit) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type PlayerChangeDisplayNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientInfo *base.ClientInfo                  `protobuf:"bytes,1,opt,name=client_info,json=clientInfo,proto3" json:"client_info,omitempty"`
	PlayerId   int64                             `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Name       string                            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Host       string                            `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"` // 自动
	Source     PlayerChangeDisplayNameReq_Source `protobuf:"varint,5,opt,name=source,proto3,enum=comm.PlayerChangeDisplayNameReq_Source" json:"source,omitempty"`
}

func (x *PlayerChangeDisplayNameReq) Reset() {
	*x = PlayerChangeDisplayNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerChangeDisplayNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerChangeDisplayNameReq) ProtoMessage() {}

func (x *PlayerChangeDisplayNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerChangeDisplayNameReq.ProtoReflect.Descriptor instead.
func (*PlayerChangeDisplayNameReq) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{77}
}

func (x *PlayerChangeDisplayNameReq) GetClientInfo() *base.ClientInfo {
	if x != nil {
		return x.ClientInfo
	}
	return nil
}

func (x *PlayerChangeDisplayNameReq) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *PlayerChangeDisplayNameReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlayerChangeDisplayNameReq) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *PlayerChangeDisplayNameReq) GetSource() PlayerChangeDisplayNameReq_Source {
	if x != nil {
		return x.Source
	}
	return PlayerChangeDisplayNameReq_None
}

type SetCharacterCreatorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId int64                         `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Units    []*CharacterCreatorUnit       `protobuf:"bytes,2,rep,name=units,proto3" json:"units,omitempty"`
	Source   SetCharacterCreatorReq_Source `protobuf:"varint,3,opt,name=source,proto3,enum=comm.SetCharacterCreatorReq_Source" json:"source,omitempty"`
	Host     string                        `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`                    // 自动
	UserId   int64                         `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 自动
}

func (x *SetCharacterCreatorReq) Reset() {
	*x = SetCharacterCreatorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCharacterCreatorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCharacterCreatorReq) ProtoMessage() {}

func (x *SetCharacterCreatorReq) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCharacterCreatorReq.ProtoReflect.Descriptor instead.
func (*SetCharacterCreatorReq) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{78}
}

func (x *SetCharacterCreatorReq) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *SetCharacterCreatorReq) GetUnits() []*CharacterCreatorUnit {
	if x != nil {
		return x.Units
	}
	return nil
}

func (x *SetCharacterCreatorReq) GetSource() SetCharacterCreatorReq_Source {
	if x != nil {
		return x.Source
	}
	return SetCharacterCreatorReq_None
}

func (x *SetCharacterCreatorReq) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *SetCharacterCreatorReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type PlayerCreateStageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId int64                      `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	StageId  PlayerCreateStageReq_Stage `protobuf:"varint,2,opt,name=stage_id,json=stageId,proto3,enum=comm.PlayerCreateStageReq_Stage" json:"stage_id,omitempty"`
}

func (x *PlayerCreateStageReq) Reset() {
	*x = PlayerCreateStageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerCreateStageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerCreateStageReq) ProtoMessage() {}

func (x *PlayerCreateStageReq) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerCreateStageReq.ProtoReflect.Descriptor instead.
func (*PlayerCreateStageReq) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{79}
}

func (x *PlayerCreateStageReq) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *PlayerCreateStageReq) GetStageId() PlayerCreateStageReq_Stage {
	if x != nil {
		return x.StageId
	}
	return PlayerCreateStageReq_None
}

type Avatar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThumbnailUrl          string      `protobuf:"bytes,1,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"` // 缩略图sh
	ImageUrl              string      `protobuf:"bytes,2,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`             // 原图
	AvatarType            Avatar_Type `protobuf:"varint,3,opt,name=avatar_type,json=avatarType,proto3,enum=comm.Avatar_Type" json:"avatar_type,omitempty"`
	CustomizeImageUrl     string      `protobuf:"bytes,4,opt,name=customize_image_url,json=customizeImageUrl,proto3" json:"customize_image_url,omitempty"`             // 自定义头像url
	CustomizeThumbnailUrl string      `protobuf:"bytes,5,opt,name=customize_thumbnail_url,json=customizeThumbnailUrl,proto3" json:"customize_thumbnail_url,omitempty"` // 自定义头像缩略图url
	AvatarTabId           int32       `protobuf:"varint,6,opt,name=avatar_tab_id,json=avatarTabId,proto3" json:"avatar_tab_id,omitempty"`                              // 当前使用官方头像id
	AvatarFrameTabId      int32       `protobuf:"varint,7,opt,name=avatar_frame_tab_id,json=avatarFrameTabId,proto3" json:"avatar_frame_tab_id,omitempty"`             // 当前使用的官方头像框id
	UnlockId              []int32     `protobuf:"varint,9,rep,packed,name=unlock_id,json=unlockId,proto3" json:"unlock_id,omitempty"`                                  // 解锁的头像
	UnlockFrameId         []int32     `protobuf:"varint,10,rep,packed,name=unlock_frame_id,json=unlockFrameId,proto3" json:"unlock_frame_id,omitempty"`                // 解锁的头像框
}

func (x *Avatar) Reset() {
	*x = Avatar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Avatar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Avatar) ProtoMessage() {}

func (x *Avatar) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Avatar.ProtoReflect.Descriptor instead.
func (*Avatar) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{80}
}

func (x *Avatar) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *Avatar) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Avatar) GetAvatarType() Avatar_Type {
	if x != nil {
		return x.AvatarType
	}
	return Avatar_Default
}

func (x *Avatar) GetCustomizeImageUrl() string {
	if x != nil {
		return x.CustomizeImageUrl
	}
	return ""
}

func (x *Avatar) GetCustomizeThumbnailUrl() string {
	if x != nil {
		return x.CustomizeThumbnailUrl
	}
	return ""
}

func (x *Avatar) GetAvatarTabId() int32 {
	if x != nil {
		return x.AvatarTabId
	}
	return 0
}

func (x *Avatar) GetAvatarFrameTabId() int32 {
	if x != nil {
		return x.AvatarFrameTabId
	}
	return 0
}

func (x *Avatar) GetUnlockId() []int32 {
	if x != nil {
		return x.UnlockId
	}
	return nil
}

func (x *Avatar) GetUnlockFrameId() []int32 {
	if x != nil {
		return x.UnlockFrameId
	}
	return nil
}

type AvatarUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar      *Avatar `protobuf:"bytes,1,opt,name=avatar,proto3" json:"avatar,omitempty"`
	PlayerId    int64   `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	MapTabId    int32   `protobuf:"varint,3,opt,name=map_tab_id,json=mapTabId,proto3" json:"map_tab_id,omitempty"`
	MapFriendId int64   `protobuf:"varint,4,opt,name=map_friend_id,json=mapFriendId,proto3" json:"map_friend_id,omitempty"`
}

func (x *AvatarUpdateResp) Reset() {
	*x = AvatarUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarUpdateResp) ProtoMessage() {}

func (x *AvatarUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarUpdateResp.ProtoReflect.Descriptor instead.
func (*AvatarUpdateResp) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{81}
}

func (x *AvatarUpdateResp) GetAvatar() *Avatar {
	if x != nil {
		return x.Avatar
	}
	return nil
}

func (x *AvatarUpdateResp) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *AvatarUpdateResp) GetMapTabId() int32 {
	if x != nil {
		return x.MapTabId
	}
	return 0
}

func (x *AvatarUpdateResp) GetMapFriendId() int64 {
	if x != nil {
		return x.MapFriendId
	}
	return 0
}

type PlayerAvatarUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar   *Avatar `protobuf:"bytes,1,opt,name=avatar,proto3" json:"avatar,omitempty"`
	PlayerId int64   `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
}

func (x *PlayerAvatarUpdateReq) Reset() {
	*x = PlayerAvatarUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerAvatarUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerAvatarUpdateReq) ProtoMessage() {}

func (x *PlayerAvatarUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerAvatarUpdateReq.ProtoReflect.Descriptor instead.
func (*PlayerAvatarUpdateReq) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{82}
}

func (x *PlayerAvatarUpdateReq) GetAvatar() *Avatar {
	if x != nil {
		return x.Avatar
	}
	return nil
}

func (x *PlayerAvatarUpdateReq) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

type NotifyAvatarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentAvatar *Avatar `protobuf:"bytes,1,opt,name=current_avatar,json=currentAvatar,proto3" json:"current_avatar,omitempty"`
	ChangeAvatar  *Avatar `protobuf:"bytes,2,opt,name=change_avatar,json=changeAvatar,proto3" json:"change_avatar,omitempty"`
}

func (x *NotifyAvatarReq) Reset() {
	*x = NotifyAvatarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyAvatarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyAvatarReq) ProtoMessage() {}

func (x *NotifyAvatarReq) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyAvatarReq.ProtoReflect.Descriptor instead.
func (*NotifyAvatarReq) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{83}
}

func (x *NotifyAvatarReq) GetCurrentAvatar() *Avatar {
	if x != nil {
		return x.CurrentAvatar
	}
	return nil
}

func (x *NotifyAvatarReq) GetChangeAvatar() *Avatar {
	if x != nil {
		return x.ChangeAvatar
	}
	return nil
}

type ItemShortCut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabId  int32 `protobuf:"varint,1,opt,name=tab_id,json=t,proto3" json:"tab_id,omitempty"`
	InstId int64 `protobuf:"varint,2,opt,name=inst_id,json=i,proto3" json:"inst_id,omitempty"`
}

func (x *ItemShortCut) Reset() {
	*x = ItemShortCut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemShortCut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemShortCut) ProtoMessage() {}

func (x *ItemShortCut) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemShortCut.ProtoReflect.Descriptor instead.
func (*ItemShortCut) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{84}
}

func (x *ItemShortCut) GetTabId() int32 {
	if x != nil {
		return x.TabId
	}
	return 0
}

func (x *ItemShortCut) GetInstId() int64 {
	if x != nil {
		return x.InstId
	}
	return 0
}

type PlayerUpdateDescReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId    int64  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *PlayerUpdateDescReq) Reset() {
	*x = PlayerUpdateDescReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerUpdateDescReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerUpdateDescReq) ProtoMessage() {}

func (x *PlayerUpdateDescReq) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerUpdateDescReq.ProtoReflect.Descriptor instead.
func (*PlayerUpdateDescReq) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{85}
}

func (x *PlayerUpdateDescReq) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *PlayerUpdateDescReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type PlayerInfoGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptPlayerId    int64 `protobuf:"varint,1,opt,name=opt_player_id,json=optPlayerId,proto3" json:"opt_player_id,omitempty"`          // 操作人id
	TargetPlayerId int64 `protobuf:"varint,2,opt,name=target_player_id,json=targetPlayerId,proto3" json:"target_player_id,omitempty"` // 被查看的玩家id
}

func (x *PlayerInfoGetReq) Reset() {
	*x = PlayerInfoGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInfoGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfoGetReq) ProtoMessage() {}

func (x *PlayerInfoGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInfoGetReq.ProtoReflect.Descriptor instead.
func (*PlayerInfoGetReq) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{86}
}

func (x *PlayerInfoGetReq) GetOptPlayerId() int64 {
	if x != nil {
		return x.OptPlayerId
	}
	return 0
}

func (x *PlayerInfoGetReq) GetTargetPlayerId() int64 {
	if x != nil {
		return x.TargetPlayerId
	}
	return 0
}

type PlayerInfoGetRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerBaseInfo      *Player               `protobuf:"bytes,1,opt,name=player_base_info,json=playerBaseInfo,proto3" json:"player_base_info,omitempty"`
	LikeNum             int32                 `protobuf:"varint,2,opt,name=like_num,json=likeNum,proto3" json:"like_num,omitempty"`    // 点赞数
	CanLike             bool                  `protobuf:"varint,3,opt,name=can_like,json=canLike,proto3" json:"can_like,omitempty"`    // true 可以被点
	IsOnline            bool                  `protobuf:"varint,6,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"` // 是否在线
	Avatar              *Avatar               `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	FashionTabIds       []int32               `protobuf:"varint,5,rep,packed,name=fashion_tab_ids,json=fashionTabIds,proto3" json:"fashion_tab_ids,omitempty"`
	PetTabId            int32                 `protobuf:"varint,7,opt,name=pet_tab_id,json=petTabId,proto3" json:"pet_tab_id,omitempty"` // 宠物id
	PetSize             int32                 `protobuf:"varint,8,opt,name=pet_size,json=petSize,proto3" json:"pet_size,omitempty"`
	MapTabId            int32                 `protobuf:"varint,9,opt,name=map_tab_id,json=mapTabId,proto3" json:"map_tab_id,omitempty"` // 当前所在地图id
	RoomId              int64                 `protobuf:"varint,10,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	HouseId             int32                 `protobuf:"varint,11,opt,name=house_id,json=houseId,proto3" json:"house_id,omitempty"`
	FashionDiyMap       map[int32]*TextureDiy `protobuf:"bytes,12,rep,name=fashion_diy_map,json=fashionDiyMap,proto3" json:"fashion_diy_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`                    // 当前正在应用的时装diy信息
	CharacterCreatorMap map[int32]int32       `protobuf:"bytes,13,rep,name=character_creator_map,json=characterCreatorMap,proto3" json:"character_creator_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // 当前正在应用的捏脸信息
}

func (x *PlayerInfoGetRes) Reset() {
	*x = PlayerInfoGetRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInfoGetRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfoGetRes) ProtoMessage() {}

func (x *PlayerInfoGetRes) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInfoGetRes.ProtoReflect.Descriptor instead.
func (*PlayerInfoGetRes) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{87}
}

func (x *PlayerInfoGetRes) GetPlayerBaseInfo() *Player {
	if x != nil {
		return x.PlayerBaseInfo
	}
	return nil
}

func (x *PlayerInfoGetRes) GetLikeNum() int32 {
	if x != nil {
		return x.LikeNum
	}
	return 0
}

func (x *PlayerInfoGetRes) GetCanLike() bool {
	if x != nil {
		return x.CanLike
	}
	return false
}

func (x *PlayerInfoGetRes) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *PlayerInfoGetRes) GetAvatar() *Avatar {
	if x != nil {
		return x.Avatar
	}
	return nil
}

func (x *PlayerInfoGetRes) GetFashionTabIds() []int32 {
	if x != nil {
		return x.FashionTabIds
	}
	return nil
}

func (x *PlayerInfoGetRes) GetPetTabId() int32 {
	if x != nil {
		return x.PetTabId
	}
	return 0
}

func (x *PlayerInfoGetRes) GetPetSize() int32 {
	if x != nil {
		return x.PetSize
	}
	return 0
}

func (x *PlayerInfoGetRes) GetMapTabId() int32 {
	if x != nil {
		return x.MapTabId
	}
	return 0
}

func (x *PlayerInfoGetRes) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *PlayerInfoGetRes) GetHouseId() int32 {
	if x != nil {
		return x.HouseId
	}
	return 0
}

func (x *PlayerInfoGetRes) GetFashionDiyMap() map[int32]*TextureDiy {
	if x != nil {
		return x.FashionDiyMap
	}
	return nil
}

func (x *PlayerInfoGetRes) GetCharacterCreatorMap() map[int32]int32 {
	if x != nil {
		return x.CharacterCreatorMap
	}
	return nil
}

type AnnounceGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform     int32 `protobuf:"varint,1,opt,name=platform,proto3" json:"platform,omitempty"`
	AnnounceType int32 `protobuf:"varint,2,opt,name=announce_type,json=announceType,proto3" json:"announce_type,omitempty"`
}

func (x *AnnounceGetReq) Reset() {
	*x = AnnounceGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnnounceGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnnounceGetReq) ProtoMessage() {}

func (x *AnnounceGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnnounceGetReq.ProtoReflect.Descriptor instead.
func (*AnnounceGetReq) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{88}
}

func (x *AnnounceGetReq) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *AnnounceGetReq) GetAnnounceType() int32 {
	if x != nil {
		return x.AnnounceType
	}
	return 0
}

type AnnounceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AnnounceType int32                `protobuf:"varint,2,opt,name=announce_type,json=announceType,proto3" json:"announce_type,omitempty"`                 // 公告类型 0:公告，1新闻,2:停服
	SubType      AnnounceInfo_SubType `protobuf:"varint,3,opt,name=sub_type,json=subType,proto3,enum=comm.AnnounceInfo_SubType" json:"sub_type,omitempty"` // 小类 SubType
	IsTop        int32                `protobuf:"varint,4,opt,name=is_top,json=isTop,proto3" json:"is_top,omitempty"`                                      // 是否置顶
	ShowPlatform string               `protobuf:"bytes,5,opt,name=show_platform,json=showPlatform,proto3" json:"show_platform,omitempty"`                  // 平台 Platform
	StartAt      int64                `protobuf:"varint,6,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`                                // 可见开始
	EndAt        int64                `protobuf:"varint,7,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`                                      // 可见结束
	Subject      string               `protobuf:"bytes,8,opt,name=subject,proto3" json:"subject,omitempty"`                                                // 标题
	Content      string               `protobuf:"bytes,9,opt,name=content,proto3" json:"content,omitempty"`                                                // 内容
	State        int32                `protobuf:"varint,10,opt,name=state,proto3" json:"state,omitempty"`                                                  // 是否失效 0:正常
	IsPush       int32                `protobuf:"varint,12,opt,name=is_push,json=isPush,proto3" json:"is_push,omitempty"`                                  // 是否推送拍脸
	Operator     string               `protobuf:"bytes,11,opt,name=operator,proto3" json:"operator,omitempty"`
	PictureUrl   string               `protobuf:"bytes,13,opt,name=picture_url,json=pictureUrl,proto3" json:"picture_url,omitempty"` // 图片地址
	CreatedAt    int64                `protobuf:"varint,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	PresetTop    int32                `protobuf:"varint,15,opt,name=preset_top,json=presetTop,proto3" json:"preset_top,omitempty"` // 预置顶
	UpdatedAt    int64                `protobuf:"varint,16,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *AnnounceInfo) Reset() {
	*x = AnnounceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnnounceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnnounceInfo) ProtoMessage() {}

func (x *AnnounceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnnounceInfo.ProtoReflect.Descriptor instead.
func (*AnnounceInfo) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{89}
}

func (x *AnnounceInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AnnounceInfo) GetAnnounceType() int32 {
	if x != nil {
		return x.AnnounceType
	}
	return 0
}

func (x *AnnounceInfo) GetSubType() AnnounceInfo_SubType {
	if x != nil {
		return x.SubType
	}
	return AnnounceInfo_Normal
}

func (x *AnnounceInfo) GetIsTop() int32 {
	if x != nil {
		return x.IsTop
	}
	return 0
}

func (x *AnnounceInfo) GetShowPlatform() string {
	if x != nil {
		return x.ShowPlatform
	}
	return ""
}

func (x *AnnounceInfo) GetStartAt() int64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *AnnounceInfo) GetEndAt() int64 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *AnnounceInfo) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *AnnounceInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AnnounceInfo) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *AnnounceInfo) GetIsPush() int32 {
	if x != nil {
		return x.IsPush
	}
	return 0
}

func (x *AnnounceInfo) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *AnnounceInfo) GetPictureUrl() string {
	if x != nil {
		return x.PictureUrl
	}
	return ""
}

func (x *AnnounceInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AnnounceInfo) GetPresetTop() int32 {
	if x != nil {
		return x.PresetTop
	}
	return 0
}

func (x *AnnounceInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type AnnounceGetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnnounceList   []*AnnounceInfo `protobuf:"bytes,1,rep,name=announce_list,json=announceList,proto3" json:"announce_list,omitempty"`
	PopupFrequency int32           `protobuf:"varint,2,opt,name=popup_frequency,json=popupFrequency,proto3" json:"popup_frequency,omitempty"`
}

func (x *AnnounceGetResp) Reset() {
	*x = AnnounceGetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnnounceGetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnnounceGetResp) ProtoMessage() {}

func (x *AnnounceGetResp) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnnounceGetResp.ProtoReflect.Descriptor instead.
func (*AnnounceGetResp) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{90}
}

func (x *AnnounceGetResp) GetAnnounceList() []*AnnounceInfo {
	if x != nil {
		return x.AnnounceList
	}
	return nil
}

func (x *AnnounceGetResp) GetPopupFrequency() int32 {
	if x != nil {
		return x.PopupFrequency
	}
	return 0
}

type ApiJoinMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId   int64 `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	InstId     int64 `protobuf:"varint,2,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"`
	FollowId   int64 `protobuf:"varint,3,opt,name=follow_id,json=followId,proto3" json:"follow_id,omitempty"`
	ShardId    int64 `protobuf:"varint,5,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	HouseId    int32 `protobuf:"varint,4,opt,name=house_id,json=houseId,proto3" json:"house_id,omitempty"`
	MapTabId   int32 `protobuf:"varint,6,opt,name=map_tab_id,json=mapTabId,proto3" json:"map_tab_id,omitempty"`
	MapOwnerId int64 `protobuf:"varint,7,opt,name=map_owner_id,json=mapOwnerId,proto3" json:"map_owner_id,omitempty"`
}

func (x *ApiJoinMap) Reset() {
	*x = ApiJoinMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiJoinMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiJoinMap) ProtoMessage() {}

func (x *ApiJoinMap) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiJoinMap.ProtoReflect.Descriptor instead.
func (*ApiJoinMap) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{91}
}

func (x *ApiJoinMap) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *ApiJoinMap) GetInstId() int64 {
	if x != nil {
		return x.InstId
	}
	return 0
}

func (x *ApiJoinMap) GetFollowId() int64 {
	if x != nil {
		return x.FollowId
	}
	return 0
}

func (x *ApiJoinMap) GetShardId() int64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *ApiJoinMap) GetHouseId() int32 {
	if x != nil {
		return x.HouseId
	}
	return 0
}

func (x *ApiJoinMap) GetMapTabId() int32 {
	if x != nil {
		return x.MapTabId
	}
	return 0
}

func (x *ApiJoinMap) GetMapOwnerId() int64 {
	if x != nil {
		return x.MapOwnerId
	}
	return 0
}

type PlayerStringInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId int64  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Info     string `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *PlayerStringInfo) Reset() {
	*x = PlayerStringInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerStringInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStringInfo) ProtoMessage() {}

func (x *PlayerStringInfo) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStringInfo.ProtoReflect.Descriptor instead.
func (*PlayerStringInfo) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{92}
}

func (x *PlayerStringInfo) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *PlayerStringInfo) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type PackageVersionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageVersion int32                          `protobuf:"varint,1,opt,name=package_version,json=packageVersion,proto3" json:"package_version,omitempty"`
	Platform       PackageVersionReq_PlatfromType `protobuf:"varint,2,opt,name=platform,proto3,enum=comm.PackageVersionReq_PlatfromType" json:"platform,omitempty"`
}

func (x *PackageVersionReq) Reset() {
	*x = PackageVersionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageVersionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageVersionReq) ProtoMessage() {}

func (x *PackageVersionReq) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageVersionReq.ProtoReflect.Descriptor instead.
func (*PackageVersionReq) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{93}
}

func (x *PackageVersionReq) GetPackageVersion() int32 {
	if x != nil {
		return x.PackageVersion
	}
	return 0
}

func (x *PackageVersionReq) GetPlatform() PackageVersionReq_PlatfromType {
	if x != nil {
		return x.Platform
	}
	return PackageVersionReq_None
}

type PackageVersionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version         string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	ResVersion      string `protobuf:"bytes,2,opt,name=res_version,json=resVersion,proto3" json:"res_version,omitempty"`
	ForceUpdate     bool   `protobuf:"varint,3,opt,name=force_update,json=forceUpdate,proto3" json:"force_update,omitempty"`
	UpdateUrl       string `protobuf:"bytes,4,opt,name=update_url,json=updateUrl,proto3" json:"update_url,omitempty"`
	PublishVersion  string `protobuf:"bytes,5,opt,name=publish_version,json=publishVersion,proto3" json:"publish_version,omitempty"`
	LauncherVersion string `protobuf:"bytes,6,opt,name=launcher_version,json=launcherVersion,proto3" json:"launcher_version,omitempty"`
	PublishExe      string `protobuf:"bytes,7,opt,name=publish_exe,json=publishExe,proto3" json:"publish_exe,omitempty"`
	CdnUrl          string `protobuf:"bytes,8,opt,name=cdn_url,json=cdnUrl,proto3" json:"cdn_url,omitempty"`
}

func (x *PackageVersionResp) Reset() {
	*x = PackageVersionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageVersionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageVersionResp) ProtoMessage() {}

func (x *PackageVersionResp) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageVersionResp.ProtoReflect.Descriptor instead.
func (*PackageVersionResp) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{94}
}

func (x *PackageVersionResp) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PackageVersionResp) GetResVersion() string {
	if x != nil {
		return x.ResVersion
	}
	return ""
}

func (x *PackageVersionResp) GetForceUpdate() bool {
	if x != nil {
		return x.ForceUpdate
	}
	return false
}

func (x *PackageVersionResp) GetUpdateUrl() string {
	if x != nil {
		return x.UpdateUrl
	}
	return ""
}

func (x *PackageVersionResp) GetPublishVersion() string {
	if x != nil {
		return x.PublishVersion
	}
	return ""
}

func (x *PackageVersionResp) GetLauncherVersion() string {
	if x != nil {
		return x.LauncherVersion
	}
	return ""
}

func (x *PackageVersionResp) GetPublishExe() string {
	if x != nil {
		return x.PublishExe
	}
	return ""
}

func (x *PackageVersionResp) GetCdnUrl() string {
	if x != nil {
		return x.CdnUrl
	}
	return ""
}

type ReceiveBoxByUgcLobbyScoreReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId int64   `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	BoxIds   []int32 `protobuf:"varint,2,rep,packed,name=box_ids,json=boxIds,proto3" json:"box_ids,omitempty"` // 要领取的宝箱id
}

func (x *ReceiveBoxByUgcLobbyScoreReq) Reset() {
	*x = ReceiveBoxByUgcLobbyScoreReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveBoxByUgcLobbyScoreReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveBoxByUgcLobbyScoreReq) ProtoMessage() {}

func (x *ReceiveBoxByUgcLobbyScoreReq) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveBoxByUgcLobbyScoreReq.ProtoReflect.Descriptor instead.
func (*ReceiveBoxByUgcLobbyScoreReq) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{95}
}

func (x *ReceiveBoxByUgcLobbyScoreReq) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *ReceiveBoxByUgcLobbyScoreReq) GetBoxIds() []int32 {
	if x != nil {
		return x.BoxIds
	}
	return nil
}

type ServerListInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	State         int32    `protobuf:"varint,3,opt,name=state,proto3" json:"state,omitempty"`
	ServerAddress []string `protobuf:"bytes,4,rep,name=server_address,json=serverAddress,proto3" json:"server_address,omitempty"`
}

func (x *ServerListInfo) Reset() {
	*x = ServerListInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerListInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerListInfo) ProtoMessage() {}

func (x *ServerListInfo) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerListInfo.ProtoReflect.Descriptor instead.
func (*ServerListInfo) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{96}
}

func (x *ServerListInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ServerListInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServerListInfo) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *ServerListInfo) GetServerAddress() []string {
	if x != nil {
		return x.ServerAddress
	}
	return nil
}

type ServerListInfoGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip       string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	DeviceId string `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Version  string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Platform string `protobuf:"bytes,4,opt,name=platform,proto3" json:"platform,omitempty"`
}

func (x *ServerListInfoGetReq) Reset() {
	*x = ServerListInfoGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerListInfoGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerListInfoGetReq) ProtoMessage() {}

func (x *ServerListInfoGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerListInfoGetReq.ProtoReflect.Descriptor instead.
func (*ServerListInfoGetReq) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{97}
}

func (x *ServerListInfoGetReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ServerListInfoGetReq) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ServerListInfoGetReq) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ServerListInfoGetReq) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

type ServerListInfoGetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ServerListInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ServerListInfoGetResp) Reset() {
	*x = ServerListInfoGetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerListInfoGetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerListInfoGetResp) ProtoMessage() {}

func (x *ServerListInfoGetResp) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerListInfoGetResp.ProtoReflect.Descriptor instead.
func (*ServerListInfoGetResp) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{98}
}

func (x *ServerListInfoGetResp) GetList() []*ServerListInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type ServerTimeStamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeStamp int64 `protobuf:"varint,1,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"` // 毫秒
}

func (x *ServerTimeStamp) Reset() {
	*x = ServerTimeStamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerTimeStamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerTimeStamp) ProtoMessage() {}

func (x *ServerTimeStamp) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerTimeStamp.ProtoReflect.Descriptor instead.
func (*ServerTimeStamp) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{99}
}

func (x *ServerTimeStamp) GetTimeStamp() int64 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

type Span_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bottom int32  `protobuf:"varint,1,opt,name=bottom,proto3" json:"bottom,omitempty"`
	Top    int32  `protobuf:"varint,2,opt,name=top,proto3" json:"top,omitempty"`
	Flag   uint32 `protobuf:"varint,3,opt,name=flag,proto3" json:"flag,omitempty"`
}

func (x *Span_Data) Reset() {
	*x = Span_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Span_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Span_Data) ProtoMessage() {}

func (x *Span_Data) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Span_Data.ProtoReflect.Descriptor instead.
func (*Span_Data) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{72, 0}
}

func (x *Span_Data) GetBottom() int32 {
	if x != nil {
		return x.Bottom
	}
	return 0
}

func (x *Span_Data) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *Span_Data) GetFlag() uint32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

type BlueprintBuild_ArrayPos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos []int32 `protobuf:"varint,1,rep,packed,name=pos,proto3" json:"pos,omitempty"` // vx<<16+vz
}

func (x *BlueprintBuild_ArrayPos) Reset() {
	*x = BlueprintBuild_ArrayPos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlueprintBuild_ArrayPos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlueprintBuild_ArrayPos) ProtoMessage() {}

func (x *BlueprintBuild_ArrayPos) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlueprintBuild_ArrayPos.ProtoReflect.Descriptor instead.
func (*BlueprintBuild_ArrayPos) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{74, 0}
}

func (x *BlueprintBuild_ArrayPos) GetPos() []int32 {
	if x != nil {
		return x.Pos
	}
	return nil
}

var File_comm_proto protoreflect.FileDescriptor

var file_comm_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x6f,
	0x6d, 0x6d, 0x1a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x31,
	0x0a, 0x05, 0x56, 0x65, 0x63, 0x33, 0x66, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01,
	0x7a, 0x22, 0x30, 0x0a, 0x04, 0x56, 0x65, 0x63, 0x33, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x01, 0x7a, 0x22, 0x32, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x18, 0x0a, 0x04, 0x50, 0x6f, 0x6e, 0x67, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65,
	0x71, 0x22, 0xd5, 0x04, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x17, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x75, 0x6c, 0x6c, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c,
	0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x6d, 0x69, 0x64, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x69, 0x64, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x62, 0x61,
	0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x62, 0x61, 0x6e,
	0x6e, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x31, 0x0a, 0x15, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x12, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6b, 0x0a, 0x11,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x10, 0x02, 0x22, 0x31, 0x0a, 0x07, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0xc6, 0x02, 0x0a,
	0x07, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x69, 0x73, 0x74, 0x69, 0x6e, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x70, 0x72,
	0x73, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x76, 0x70, 0x72, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0xd9, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61,
	0x74, 0x74, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x79, 0x0a, 0x09, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x48, 0x65, 0x61, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x73, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x73, 0x65, 0x71, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x12,
	0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0xc2, 0x01, 0x0a,
	0x09, 0x4d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x03, 0x70, 0x6f,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x56,
	0x65, 0x63, 0x33, 0x66, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x1d, 0x0a, 0x03, 0x72, 0x6f, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x56, 0x65,
	0x63, 0x33, 0x66, 0x52, 0x03, 0x72, 0x6f, 0x74, 0x12, 0x27, 0x0a, 0x08, 0x76, 0x65, 0x6c, 0x6f,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x2e, 0x56, 0x65, 0x63, 0x33, 0x66, 0x52, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x64,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x08, 0x72, 0x65, 0x61,
	0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x2e, 0x56, 0x65, 0x63, 0x33, 0x66, 0x52, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x50, 0x6f,
	0x73, 0x22, 0x62, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x12, 0x23, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x48, 0x65, 0x61, 0x64, 0x52,
	0x04, 0x68, 0x65, 0x61, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x6d, 0x6f, 0x76, 0x65,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x22, 0xc9, 0x01, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x72, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x2e, 0x49, 0x64, 0x4e, 0x75, 0x6d, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x22, 0x57, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x63, 0x68, 0x5f, 0x76, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x61, 0x63, 0x68, 0x56, 0x61, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x63, 0x68, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x72, 0x65, 0x61, 0x63, 0x68, 0x65, 0x64, 0x22, 0x72, 0x0a, 0x0c, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x41, 0x70,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9b,
	0x02, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74,
	0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x68, 0x6f, 0x73,
	0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x0e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x08, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x70,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xe1, 0x03, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6e,
	0x65, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6e, 0x65, 0x65, 0x64, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x73, 0x68, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x61, 0x73, 0x68, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x65,
	0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x61, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0f,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x49, 0x64, 0x73, 0x12,
	0x58, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a,
	0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x12, 0x32, 0x0a, 0x15, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x76, 0x6f, 0x78, 0x65, 0x6c,
	0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x13, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x56, 0x6f, 0x78, 0x65, 0x6c, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x1a, 0x43, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x33, 0x0a, 0x12, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x45,
	0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x12, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9d, 0x02, 0x0a, 0x0b, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa1, 0x01, 0x0a, 0x0e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x3f, 0x0a, 0x09, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x4d, 0x61, 0x70, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x63, 0x68, 0x65, 0x4d, 0x61, 0x70, 0x1a, 0x4e, 0x0a, 0x0d,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x30, 0x0a, 0x0d,
	0x43, 0x65, 0x6c, 0x6c, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a,
	0x0b, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4f,
	0x0a, 0x13, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x22,
	0x6f, 0x0a, 0x13, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x22, 0x42, 0x0a, 0x13, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x22, 0xa7, 0x02, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x17,
	0x0a, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x7a, 0x6f, 0x6e, 0x65, 0x5f,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x7a, 0x6f, 0x6e, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x28, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x07, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x41,
	0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x2d, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x29, 0x0a, 0x06, 0x4e, 0x74, 0x70, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x22, 0xb2, 0x01, 0x0a,
	0x07, 0x4e, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x63,
	0x6b, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x54, 0x69, 0x63,
	0x6b, 0x22, 0x8d, 0x01, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74,
	0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x4d, 0x61, 0x78, 0x12, 0x28, 0x0a,
	0x10, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x74, 0x69, 0x67,
	0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x66, 0x61, 0x74, 0x69, 0x67, 0x75,
	0x65, 0x22, 0x3b, 0x0a, 0x07, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x77,
	0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x63,
	0x0a, 0x0d, 0x46, 0x61, 0x73, 0x68, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x61, 0x72,
	0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64,
	0x41, 0x72, 0x72, 0x22, 0x29, 0x0a, 0x05, 0x49, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0xb4,
	0x03, 0x0a, 0x0a, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x50, 0x61, 0x72, 0x74, 0x73, 0x12, 0x39, 0x0a,
	0x0a, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x70,
	0x61, 0x72, 0x74, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x61, 0x62, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x2e, 0x56, 0x65, 0x63, 0x33, 0x66, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x1d,
	0x0a, 0x03, 0x72, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x2e, 0x56, 0x65, 0x63, 0x33, 0x66, 0x52, 0x03, 0x72, 0x6f, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3b, 0x0a,
	0x08, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x64, 0x69, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x50, 0x61, 0x72, 0x74,
	0x73, 0x2e, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x64, 0x69, 0x72, 0x22, 0x4d, 0x0a, 0x09, 0x50, 0x61,
	0x72, 0x74, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x61, 0x6c, 0x6c, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x52,
	0x6f, 0x6f, 0x66, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x6f, 0x6f, 0x72, 0x10, 0x03, 0x12,
	0x0a, 0x0a, 0x06, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x4f,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0x05, 0x22, 0x3a, 0x0a, 0x0e, 0x48, 0x6f, 0x75,
	0x73, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x09, 0x0a, 0x05, 0x46,
	0x72, 0x6f, 0x6e, 0x74, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x69, 0x67, 0x68, 0x74, 0x10,
	0x01, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x61, 0x63, 0x6b, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x4c,
	0x65, 0x66, 0x74, 0x10, 0x03, 0x22, 0xc9, 0x01, 0x0a, 0x0b, 0x44, 0x69, 0x79, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x2b, 0x0a, 0x08, 0x63, 0x6d, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x50,
	0x61, 0x72, 0x74, 0x73, 0x52, 0x07, 0x63, 0x6d, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x0a,
	0x08, 0x64, 0x69, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x44, 0x69, 0x79, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x2e, 0x44, 0x69, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x64, 0x69, 0x79, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x69, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x75, 0x69, 0x74, 0x54, 0x61, 0x62,
	0x49, 0x64, 0x22, 0x1d, 0x0a, 0x07, 0x44, 0x69, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x46, 0x72, 0x65, 0x65, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x75, 0x69, 0x74, 0x10,
	0x01, 0x22, 0xcc, 0x01, 0x0a, 0x12, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x53, 0x75, 0x6d, 0x12, 0x11, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x06, 0x75,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x75, 0x72, 0x12,
	0x40, 0x0a, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x67, 0x6f, 0x74, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x49, 0x6c, 0x6c, 0x75, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x53, 0x75, 0x6d, 0x2e, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x47, 0x6f, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x67, 0x6f,
	0x74, 0x12, 0x0f, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x6e, 0x6d, 0x1a, 0x3c, 0x0a, 0x0e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x47, 0x6f, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x25, 0x0a, 0x0f, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x6f, 0x6f, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x08, 0x53, 0x68, 0x6f, 0x70,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x4e,
	0x75, 0x6d, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x41, 0x72, 0x65, 0x61,
	0x22, 0xf6, 0x01, 0x0a, 0x08, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6d,
	0x61, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e,
	0x53, 0x68, 0x6f, 0x70, 0x50, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x70, 0x12, 0x21,
	0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6e, 0x65,
	0x78, 0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x4a, 0x0a,
	0x0c, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x87, 0x01, 0x0a, 0x09, 0x53, 0x68,
	0x6f, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x53, 0x68,
	0x6f, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x1a, 0x48, 0x0a, 0x0a, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e,
	0x53, 0x68, 0x6f, 0x70, 0x50, 0x61, 0x67, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x5a, 0x0a, 0x0b, 0x53, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22,
	0x3c, 0x0a, 0x05, 0x47, 0x4d, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x20, 0x0a,
	0x06, 0x47, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x64, 0x0a, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x72, 0x61, 0x66, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a,
	0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x49, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x75, 0x73,
	0x65, 0x64, 0x49, 0x64, 0x73, 0x22, 0x79, 0x0a, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x6c,
	0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x11, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x69,
	0x67, 0x68, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x0c, 0x68, 0x69, 0x67, 0x68, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73,
	0x22, 0x93, 0x03, 0x0a, 0x04, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x06, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x2e, 0x49, 0x64, 0x4e, 0x75, 0x6d, 0x52, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x67, 0x6d, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x6d, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x35, 0x0a, 0x0d, 0x4d, 0x61, 0x69, 0x6c, 0x42, 0x72,
	0x69, 0x65, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xdf, 0x01,
	0x0a, 0x03, 0x50, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x61, 0x62, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x73, 0x65,
	0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x65, 0x61, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x72, 0x65, 0x61, 0x64, 0x22,
	0x6f, 0x0a, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x44, 0x69, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x06, 0x74, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74,
	0x62, 0x12, 0x10, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x6e, 0x61, 0x12, 0x17, 0x0a, 0x0b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x74, 0x75, 0x12, 0x12, 0x0a, 0x07,
	0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x69,
	0x22, 0x7d, 0x0a, 0x15, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6c,
	0x61, 0x79, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x06, 0x74, 0x61, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x74, 0x63, 0x12, 0x1b, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x70, 0x74, 0x12, 0x1b, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x6e, 0x74, 0x22,
	0x79, 0x0a, 0x14, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x0e, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x74, 0x64, 0x12, 0x18, 0x0a, 0x0c, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74,
	0x74, 0x12, 0x17, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x61, 0x74, 0x22, 0x94, 0x01, 0x0a, 0x0f, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x72, 0x69, 0x65, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x22, 0xa9, 0x01, 0x0a, 0x12, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x72, 0x69, 0x65,
	0x66, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x12, 0x40, 0x0a, 0x08, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x72, 0x69, 0x65, 0x66, 0x49, 0x6e, 0x66,
	0x6f, 0x4d, 0x61, 0x70, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x69, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x1a, 0x51, 0x0a, 0x0c, 0x49, 0x6e,
	0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x72, 0x69, 0x65, 0x66, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x76, 0x0a,
	0x13, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x74, 0x69, 0x6d, 0x61, 0x63, 0x79, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x69, 0x6e, 0x74, 0x69, 0x6d, 0x61, 0x63, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x69, 0x6d, 0x61, 0x63,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xc9, 0x02, 0x0a, 0x0e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x69, 0x6d,
	0x61, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x69, 0x6d,
	0x61, 0x63, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x69,
	0x6d, 0x61, 0x63, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x69, 0x6d, 0x61, 0x63, 0x79, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x2e, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x69, 0x6d, 0x61,
	0x63, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11,
	0x75, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x69, 0x6d, 0x61, 0x63, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x12, 0x3e, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x69, 0x6d, 0x61, 0x63, 0x79, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x74, 0x69, 0x6d, 0x61, 0x63, 0x79, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x69, 0x6d, 0x61, 0x63, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0xf3, 0x03, 0x0a, 0x0a, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x31, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x0a, 0x6d, 0x61, 0x70, 0x5f, 0x74, 0x61, 0x62, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x70, 0x54, 0x61, 0x62, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x23, 0x0a, 0x0e, 0x75, 0x67, 0x63, 0x5f, 0x6d, 0x61, 0x70, 0x5f,
	0x74, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x75, 0x67,
	0x63, 0x4d, 0x61, 0x70, 0x54, 0x61, 0x62, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0b, 0x75, 0x67, 0x63, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x67, 0x63, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x22, 0xae, 0x01, 0x0a, 0x0f, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x77, 0x0a, 0x0f, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x22, 0xe7, 0x03, 0x0a, 0x09, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x12,
	0x3d, 0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x41, 0x6c, 0x6c, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x70, 0x12, 0x3a,
	0x0a, 0x09, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41,
	0x6c, 0x6c, 0x2e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x08, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x4d, 0x61, 0x70, 0x12, 0x3a, 0x0a, 0x09, 0x61, 0x70,
	0x70, 0x6c, 0x79, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x2e, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x61, 0x70,
	0x70, 0x6c, 0x79, 0x4d, 0x61, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x76, 0x65, 0x72, 0x1a, 0x4e, 0x0a, 0x0e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x52, 0x0a, 0x0d, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x52, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9a, 0x02, 0x0a, 0x10,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x65, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x65, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11,
	0x70, 0x65, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x65, 0x65, 0x72, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x67, 0x0a, 0x15, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65,
	0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x22, 0x88, 0x01, 0x0a, 0x14, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x49,
	0x6e, 0x74, 0x69, 0x6d, 0x61, 0x63, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x76, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x49, 0x6e, 0x74, 0x69, 0x6d, 0x61,
	0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x9f, 0x01, 0x0a,
	0x18, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74,
	0x69, 0x6d, 0x61, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x69, 0x6d, 0x61, 0x63, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x69, 0x6d, 0x61, 0x63, 0x79, 0x12, 0x2f, 0x0a,
	0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x74, 0x69, 0x6d, 0x61,
	0x63, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x82,
	0x01, 0x0a, 0x0f, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x0a, 0x6d, 0x61, 0x70, 0x5f, 0x74, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x70, 0x54, 0x61, 0x62, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x69, 0x73, 0x5f, 0x75, 0x67, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73,
	0x55, 0x67, 0x63, 0x22, 0xd0, 0x01, 0x0a, 0x12, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x45, 0x6e,
	0x74, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x0a, 0x6d, 0x61, 0x70, 0x5f, 0x74, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x70, 0x54, 0x61, 0x62, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x69, 0x73, 0x5f, 0x75, 0x67, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x69, 0x73, 0x55, 0x67, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x22, 0x85, 0x01, 0x0a, 0x10, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x6f,
	0x75, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c,
	0x6f, 0x67, 0x6f, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x6d, 0x61, 0x70,
	0x5f, 0x74, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d,
	0x61, 0x70, 0x54, 0x61, 0x62, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x75, 0x67,
	0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x55, 0x67, 0x63, 0x22, 0x74,
	0x0a, 0x10, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x22, 0xb4, 0x02, 0x0a, 0x12, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d,
	0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x6d,
	0x61, 0x70, 0x5f, 0x74, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x6d, 0x61, 0x70, 0x54, 0x61, 0x62, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x0e, 0x75, 0x67, 0x63, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x74, 0x61,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x75, 0x67, 0x63, 0x4d,
	0x61, 0x70, 0x54, 0x61, 0x62, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x75, 0x67, 0x63, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x67, 0x63, 0x52, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x75, 0x67,
	0x63, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x67, 0x63, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x67, 0x63, 0x5f, 0x68,
	0x6f, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x75, 0x67, 0x63, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x22, 0xe4, 0x01, 0x0a, 0x15,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x43, 0x0a, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6d, 0x61,
	0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x4d, 0x61, 0x70, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x69, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x1a, 0x54, 0x0a, 0x0c,
	0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x5d, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49,
	0x64, 0x22, 0xa2, 0x02, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x98, 0x01, 0x0a, 0x04, 0x53, 0x70, 0x61, 0x6e, 0x12,
	0x1c, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x2e, 0x56, 0x65, 0x63, 0x33, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x2c, 0x0a,
	0x09, 0x73, 0x70, 0x61, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x73, 0x70, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x44, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x74,
	0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x6c, 0x61,
	0x67, 0x22, 0x95, 0x02, 0x0a, 0x0c, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x69, 0x64, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x74, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x61, 0x62, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x03, 0x70, 0x6f,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x56,
	0x65, 0x63, 0x33, 0x66, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x61, 0x63,
	0x65, 0x5f, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x61, 0x63, 0x65,
	0x54, 0x6f, 0x12, 0x23, 0x0a, 0x03, 0x64, 0x69, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x44, 0x69, 0x79, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x03, 0x64, 0x69, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x41, 0x6e, 0x67,
	0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x61,
	0x6e, 0x67, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x22, 0xd1, 0x02, 0x0a, 0x0e, 0x42, 0x6c,
	0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x73, 0x70,
	0x61, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x2e, 0x53, 0x70, 0x61, 0x6e, 0x52, 0x05, 0x73, 0x70, 0x61, 0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x07,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x0b, 0x64, 0x69,
	0x79, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x44, 0x69, 0x79, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x64, 0x69, 0x79, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72,
	0x65, 0x1a, 0x1c, 0x0a, 0x08, 0x41, 0x72, 0x72, 0x61, 0x79, 0x50, 0x6f, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x1a,
	0x5c, 0x0a, 0x0f, 0x44, 0x69, 0x79, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x42, 0x6c, 0x75, 0x65, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x50,
	0x6f, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe9, 0x02,
	0x0a, 0x09, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01,
	0x77, 0x12, 0x11, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x01, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x64, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x63, 0x74, 0x12,
	0x14, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x64, 0x74, 0x12, 0x14, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x31,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x61, 0x67, 0x31, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x32, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x61, 0x67, 0x32,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x33, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x33, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x07, 0x73, 0x77, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x03, 0x73, 0x77, 0x70, 0x12, 0x13, 0x0a, 0x06, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x77, 0x64, 0x22, 0x4b, 0x0a, 0x14, 0x43, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x6e, 0x69,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xfb, 0x01, 0x0a, 0x1a, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x3f, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x2e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x24,
	0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65,
	0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x10, 0x01, 0x22, 0xf7, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x05,
	0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x3b,
	0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x2e, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x24, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x10, 0x01, 0x22, 0xaf,
	0x01, 0x0a, 0x14, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x07, 0x73, 0x74, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x22, 0x3d, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f,
	0x6e, 0x65, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x10, 0x02,
	0x22, 0xae, 0x03, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x32, 0x0a,
	0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x5f, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x54, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x5f, 0x74, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x61, 0x62, 0x49, 0x64, 0x12, 0x2d, 0x0a,
	0x13, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x61,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x0d, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x49,
	0x64, 0x22, 0x2e, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x69, 0x7a, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x10,
	0x02, 0x22, 0x97, 0x01, 0x0a, 0x10, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x6d, 0x61, 0x70,
	0x5f, 0x74, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d,
	0x61, 0x70, 0x54, 0x61, 0x62, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x70, 0x5f, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x6d, 0x61, 0x70, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x15, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x0f, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x12, 0x33, 0x0a, 0x0e, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x52, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x31, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x22, 0x35, 0x0a, 0x0c, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x43,
	0x75, 0x74, 0x12, 0x11, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x01, 0x74, 0x12, 0x12, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x69, 0x22, 0x54, 0x0a, 0x13, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x52, 0x65, 0x71,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x60, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x70, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x70, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x22, 0xca, 0x05, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19,
	0x0a, 0x08, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x6c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6e,
	0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61, 0x6e,
	0x4c, 0x69, 0x6b, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x12, 0x24, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x61, 0x73, 0x68, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x0d, 0x66, 0x61, 0x73, 0x68, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x62, 0x49, 0x64, 0x73, 0x12,
	0x1c, 0x0a, 0x0a, 0x70, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x65, 0x74, 0x54, 0x61, 0x62, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x65, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x70, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x6d, 0x61, 0x70, 0x5f,
	0x74, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61,
	0x70, 0x54, 0x61, 0x62, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x0f, 0x66, 0x61,
	0x73, 0x68, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x69, 0x79, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x2e, 0x46, 0x61, 0x73, 0x68,
	0x69, 0x6f, 0x6e, 0x44, 0x69, 0x79, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d,
	0x66, 0x61, 0x73, 0x68, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x79, 0x4d, 0x61, 0x70, 0x12, 0x63, 0x0a,
	0x15, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4d,
	0x61, 0x70, 0x1a, 0x52, 0x0a, 0x12, 0x46, 0x61, 0x73, 0x68, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x79,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x2e, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x44, 0x69, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x46, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x51,
	0x0a, 0x0e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x23, 0x0a, 0x0d,
	0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x95, 0x05, 0x0a, 0x0c, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x75,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15,
	0x0a, 0x06, 0x69, 0x73, 0x5f, 0x74, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x69, 0x73, 0x54, 0x6f, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x68,
	0x6f, 0x77, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x73,
	0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x73, 0x50, 0x75, 0x73, 0x68, 0x12,
	0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x6f, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x36, 0x0a, 0x0c, 0x41, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x65, 0x77, 0x73, 0x10,
	0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x10,
	0x02, 0x22, 0x42, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06,
	0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x51, 0x75, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61,
	0x6e, 0x74, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x10, 0x03, 0x22, 0x32, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x49,
	0x4f, 0x53, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x10,
	0x02, 0x12, 0x06, 0x0a, 0x02, 0x50, 0x43, 0x10, 0x03, 0x22, 0xbc, 0x01, 0x0a, 0x0f, 0x41, 0x6e,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a,
	0x0d, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x41, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x6f, 0x70, 0x75, 0x70, 0x5f,
	0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x70, 0x6f, 0x70, 0x75, 0x70, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x22,
	0x47, 0x0a, 0x0e, 0x50, 0x6f, 0x70, 0x75, 0x70, 0x50, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x65, 0x76, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09,
	0x45, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x45,
	0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x79, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x76, 0x65,
	0x72, 0x79, 0x57, 0x65, 0x65, 0x6b, 0x10, 0x03, 0x22, 0xd5, 0x01, 0x0a, 0x0a, 0x41, 0x70, 0x69,
	0x4a, 0x6f, 0x69, 0x6e, 0x4d, 0x61, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x68,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x0a, 0x6d, 0x61, 0x70, 0x5f, 0x74, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x70, 0x54, 0x61, 0x62, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0c, 0x6d, 0x61, 0x70, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x70, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x43, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xd5, 0x01, 0x0a, 0x11, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x0f, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x2e,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x55, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x72,
	0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00,
	0x12, 0x07, 0x0a, 0x03, 0x57, 0x69, 0x6e, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x61, 0x63,
	0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x10, 0x03, 0x12,
	0x07, 0x0a, 0x03, 0x49, 0x6f, 0x73, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x64, 0x69, 0x74,
	0x6f, 0x72, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x57, 0x65, 0x62, 0x10, 0x06, 0x22, 0x9f, 0x02,
	0x0a, 0x12, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x21, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x6c, 0x61,
	0x75, 0x6e, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x72, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x5f, 0x65, 0x78, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x45, 0x78, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x64, 0x6e, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x64, 0x6e, 0x55, 0x72, 0x6c, 0x22,
	0x54, 0x0a, 0x1c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x42, 0x6f, 0x78, 0x42, 0x79, 0x55,
	0x67, 0x63, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x62,
	0x6f, 0x78, 0x49, 0x64, 0x73, 0x22, 0x71, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x79, 0x0a, 0x14, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x22, 0x41, 0x0a, 0x15, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x30, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x2a, 0x31, 0x0a, 0x13, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0b, 0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x10, 0x01, 0x2a, 0xc7, 0x01, 0x0a, 0x11,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x10, 0x07, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x66, 0x75, 0x73, 0x65, 0x10, 0x08, 0x12, 0x14,
	0x0a, 0x10, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x43, 0x4c, 0x65,
	0x61, 0x72, 0x10, 0x09, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x10, 0x0a, 0x2a, 0x38, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x69, 0x6d, 0x61, 0x63,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x43, 0x61, 0x6c, 0x6c, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x74, 0x10, 0x03, 0x2a,
	0x39, 0x0a, 0x16, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x6c, 0x6c,
	0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x74, 0x65, 0x61, 0x64, 0x10,
	0x01, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x47, 0x43, 0x10, 0x02, 0x42, 0x13, 0x5a, 0x11, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_comm_proto_rawDescOnce sync.Once
	file_comm_proto_rawDescData = file_comm_proto_rawDesc
)

func file_comm_proto_rawDescGZIP() []byte {
	file_comm_proto_rawDescOnce.Do(func() {
		file_comm_proto_rawDescData = protoimpl.X.CompressGZIP(file_comm_proto_rawDescData)
	})
	return file_comm_proto_rawDescData
}

var file_comm_proto_enumTypes = make([]protoimpl.EnumInfo, 17)
var file_comm_proto_msgTypes = make([]protoimpl.MessageInfo, 115)
var file_comm_proto_goTypes = []interface{}{
	(FriendConfirmStatus)(0),               // 0: comm.FriendConfirmStatus
	(FriendOperateType)(0),                 // 1: comm.FriendOperateType
	(IntimacyType)(0),                      // 2: comm.IntimacyType
	(PlayerMapInfoCacheType)(0),            // 3: comm.PlayerMapInfoCacheType
	(Player_PlayerCreateStage)(0),          // 4: comm.Player.PlayerCreateStage
	(HouseParts_PartsType)(0),              // 5: comm.HouseParts.PartsType
	(HouseParts_HouseDirection)(0),         // 6: comm.HouseParts.HouseDirection
	(DiyBuilding_DiyMode)(0),               // 7: comm.DiyBuilding.DiyMode
	(PlayerChangeDisplayNameReq_Source)(0), // 8: comm.PlayerChangeDisplayNameReq.Source
	(SetCharacterCreatorReq_Source)(0),     // 9: comm.SetCharacterCreatorReq.Source
	(PlayerCreateStageReq_Stage)(0),        // 10: comm.PlayerCreateStageReq.Stage
	(Avatar_Type)(0),                       // 11: comm.Avatar.Type
	(AnnounceInfo_AnnounceType)(0),         // 12: comm.AnnounceInfo.AnnounceType
	(AnnounceInfo_SubType)(0),              // 13: comm.AnnounceInfo.SubType
	(AnnounceInfo_Platform)(0),             // 14: comm.AnnounceInfo.Platform
	(AnnounceGetResp_PopupPrequency)(0),    // 15: comm.AnnounceGetResp.PopupPrequency
	(PackageVersionReq_PlatfromType)(0),    // 16: comm.PackageVersionReq.PlatfromType
	(*Vec3F)(nil),                          // 17: comm.Vec3f
	(*Vec3)(nil),                           // 18: comm.Vec3
	(*Ping)(nil),                           // 19: comm.Ping
	(*Pong)(nil),                           // 20: comm.Pong
	(*Player)(nil),                         // 21: comm.Player
	(*Players)(nil),                        // 22: comm.Players
	(*AppInfo)(nil),                        // 23: comm.AppInfo
	(*Item)(nil),                           // 24: comm.Item
	(*FrameHead)(nil),                      // 25: comm.FrameHead
	(*MoveFrame)(nil),                      // 26: comm.MoveFrame
	(*StatusFrame)(nil),                    // 27: comm.StatusFrame
	(*Quest)(nil),                          // 28: comm.Quest
	(*QuestCondition)(nil),                 // 29: comm.QuestCondition
	(*UserLoginReq)(nil),                   // 30: comm.UserLoginReq
	(*UserLoginResp)(nil),                  // 31: comm.UserLoginResp
	(*PlayerLoginReq)(nil),                 // 32: comm.PlayerLoginReq
	(*PlayerLoginResp)(nil),                // 33: comm.PlayerLoginResp
	(*PlayerInfoBatchReq)(nil),             // 34: comm.PlayerInfoBatchReq
	(*PlayerIdByUserReq)(nil),              // 35: comm.PlayerIdByUserReq
	(*PlayerIdByUserResp)(nil),             // 36: comm.PlayerIdByUserResp
	(*PlayerCache)(nil),                    // 37: comm.PlayerCache
	(*PlayerCacheMap)(nil),                 // 38: comm.PlayerCacheMap
	(*CellEnterResp)(nil),                  // 39: comm.CellEnterResp
	(*PlayerJoinBattleReq)(nil),            // 40: comm.PlayerJoinBattleReq
	(*PlayerRebuildingReq)(nil),            // 41: comm.PlayerRebuildingReq
	(*PlayerInfoByUserReq)(nil),            // 42: comm.PlayerInfoByUserReq
	(*PlayerCreateReq)(nil),                // 43: comm.PlayerCreateReq
	(*PlayerCreateResp)(nil),               // 44: comm.PlayerCreateResp
	(*NtpReq)(nil),                         // 45: comm.NtpReq
	(*NtpResp)(nil),                        // 46: comm.NtpResp
	(*Strength)(nil),                       // 47: comm.Strength
	(*Weather)(nil),                        // 48: comm.Weather
	(*FashionPreset)(nil),                  // 49: comm.FashionPreset
	(*IdNum)(nil),                          // 50: comm.IdNum
	(*HouseParts)(nil),                     // 51: comm.HouseParts
	(*DiyBuilding)(nil),                    // 52: comm.DiyBuilding
	(*IllustratedBookSum)(nil),             // 53: comm.IllustratedBookSum
	(*IllustratedBook)(nil),                // 54: comm.IllustratedBook
	(*ShopItem)(nil),                       // 55: comm.ShopItem
	(*ShopPage)(nil),                       // 56: comm.ShopPage
	(*ShopGoods)(nil),                      // 57: comm.ShopGoods
	(*ShopBuyItem)(nil),                    // 58: comm.ShopBuyItem
	(*GMReq)(nil),                          // 59: comm.GMReq
	(*GMResp)(nil),                         // 60: comm.GMResp
	(*ItemCraft)(nil),                      // 61: comm.ItemCraft
	(*ItemSell)(nil),                       // 62: comm.ItemSell
	(*Mail)(nil),                           // 63: comm.Mail
	(*MailBriefInfo)(nil),                  // 64: comm.MailBriefInfo
	(*Pet)(nil),                            // 65: comm.Pet
	(*TextureDiy)(nil),                     // 66: comm.TextureDiy
	(*PlayerGamePlayTrigger)(nil),          // 67: comm.PlayerGamePlayTrigger
	(*PlayerGamePlayActive)(nil),           // 68: comm.PlayerGamePlayActive
	(*PlayerBriefInfo)(nil),                // 69: comm.PlayerBriefInfo
	(*PlayerBriefInfoMap)(nil),             // 70: comm.PlayerBriefInfoMap
	(*FriendIntimacyEntry)(nil),            // 71: comm.FriendIntimacyEntry
	(*FriendBaseInfo)(nil),                 // 72: comm.FriendBaseInfo
	(*FriendInfo)(nil),                     // 73: comm.FriendInfo
	(*FriendApplyInfo)(nil),                // 74: comm.FriendApplyInfo
	(*FriendBlackInfo)(nil),                // 75: comm.FriendBlackInfo
	(*FriendAll)(nil),                      // 76: comm.FriendAll
	(*FriendOperateReq)(nil),               // 77: comm.FriendOperateReq
	(*FriendUpdateRemarkReq)(nil),          // 78: comm.FriendUpdateRemarkReq
	(*FriendAddIntimacyReq)(nil),           // 79: comm.FriendAddIntimacyReq
	(*FriendUpdateIntimacyResp)(nil),       // 80: comm.FriendUpdateIntimacyResp
	(*FriendLoginInfo)(nil),                // 81: comm.FriendLoginInfo
	(*FriendEnterMapInfo)(nil),             // 82: comm.FriendEnterMapInfo
	(*FriendLogoutInfo)(nil),               // 83: comm.FriendLogoutInfo
	(*FriendDeleteInfo)(nil),               // 84: comm.FriendDeleteInfo
	(*PlayerMapInfoCache)(nil),             // 85: comm.PlayerMapInfoCache
	(*PlayerMapInfoCacheMap)(nil),          // 86: comm.PlayerMapInfoCacheMap
	(*PlayerSearchReq)(nil),                // 87: comm.PlayerSearchReq
	(*PlayerSearchResp)(nil),               // 88: comm.PlayerSearchResp
	(*Span)(nil),                           // 89: comm.Span
	(*BuildElement)(nil),                   // 90: comm.BuildElement
	(*BlueprintBuild)(nil),                 // 91: comm.BlueprintBuild
	(*Blueprint)(nil),                      // 92: comm.Blueprint
	(*CharacterCreatorUnit)(nil),           // 93: comm.CharacterCreatorUnit
	(*PlayerChangeDisplayNameReq)(nil),     // 94: comm.PlayerChangeDisplayNameReq
	(*SetCharacterCreatorReq)(nil),         // 95: comm.SetCharacterCreatorReq
	(*PlayerCreateStageReq)(nil),           // 96: comm.PlayerCreateStageReq
	(*Avatar)(nil),                         // 97: comm.Avatar
	(*AvatarUpdateResp)(nil),               // 98: comm.AvatarUpdateResp
	(*PlayerAvatarUpdateReq)(nil),          // 99: comm.PlayerAvatarUpdateReq
	(*NotifyAvatarReq)(nil),                // 100: comm.NotifyAvatarReq
	(*ItemShortCut)(nil),                   // 101: comm.ItemShortCut
	(*PlayerUpdateDescReq)(nil),            // 102: comm.PlayerUpdateDescReq
	(*PlayerInfoGetReq)(nil),               // 103: comm.PlayerInfoGetReq
	(*PlayerInfoGetRes)(nil),               // 104: comm.PlayerInfoGetRes
	(*AnnounceGetReq)(nil),                 // 105: comm.AnnounceGetReq
	(*AnnounceInfo)(nil),                   // 106: comm.AnnounceInfo
	(*AnnounceGetResp)(nil),                // 107: comm.AnnounceGetResp
	(*ApiJoinMap)(nil),                     // 108: comm.ApiJoinMap
	(*PlayerStringInfo)(nil),               // 109: comm.PlayerStringInfo
	(*PackageVersionReq)(nil),              // 110: comm.PackageVersionReq
	(*PackageVersionResp)(nil),             // 111: comm.PackageVersionResp
	(*ReceiveBoxByUgcLobbyScoreReq)(nil),   // 112: comm.ReceiveBoxByUgcLobbyScoreReq
	(*ServerListInfo)(nil),                 // 113: comm.ServerListInfo
	(*ServerListInfoGetReq)(nil),           // 114: comm.ServerListInfoGetReq
	(*ServerListInfoGetResp)(nil),          // 115: comm.ServerListInfoGetResp
	(*ServerTimeStamp)(nil),                // 116: comm.ServerTimeStamp
	nil,                                    // 117: comm.PlayerLoginResp.CharacterCreatorEntry
	nil,                                    // 118: comm.PlayerCacheMap.CacheMapEntry
	nil,                                    // 119: comm.IllustratedBookSum.RewardGotEntry
	nil,                                    // 120: comm.ShopPage.ItemMapEntry
	nil,                                    // 121: comm.ShopGoods.GoodsEntry
	nil,                                    // 122: comm.PlayerBriefInfoMap.InfoMapEntry
	nil,                                    // 123: comm.FriendAll.FriendMapEntry
	nil,                                    // 124: comm.FriendAll.BlackMapEntry
	nil,                                    // 125: comm.FriendAll.ApplyMapEntry
	nil,                                    // 126: comm.PlayerMapInfoCacheMap.InfoMapEntry
	(*Span_Data)(nil),                      // 127: comm.Span.Data
	(*BlueprintBuild_ArrayPos)(nil),        // 128: comm.BlueprintBuild.ArrayPos
	nil,                                    // 129: comm.BlueprintBuild.DiyTextureEntry
	nil,                                    // 130: comm.PlayerInfoGetRes.FashionDiyMapEntry
	nil,                                    // 131: comm.PlayerInfoGetRes.CharacterCreatorMapEntry
	(*base.ClientInfo)(nil),                // 132: base.ClientInfo
}
var file_comm_proto_depIdxs = []int32{
	4,   // 0: comm.Player.stage:type_name -> comm.Player.PlayerCreateStage
	21,  // 1: comm.Players.players:type_name -> comm.Player
	17,  // 2: comm.MoveFrame.pos:type_name -> comm.Vec3f
	17,  // 3: comm.MoveFrame.rot:type_name -> comm.Vec3f
	17,  // 4: comm.MoveFrame.velocity:type_name -> comm.Vec3f
	17,  // 5: comm.MoveFrame.real_pos:type_name -> comm.Vec3f
	25,  // 6: comm.StatusFrame.head:type_name -> comm.FrameHead
	26,  // 7: comm.StatusFrame.move_frame:type_name -> comm.MoveFrame
	50,  // 8: comm.Quest.rewards:type_name -> comm.IdNum
	23,  // 9: comm.UserLoginReq.app_info:type_name -> comm.AppInfo
	23,  // 10: comm.PlayerLoginReq.app_info:type_name -> comm.AppInfo
	21,  // 11: comm.PlayerLoginResp.base:type_name -> comm.Player
	117, // 12: comm.PlayerLoginResp.character_creator:type_name -> comm.PlayerLoginResp.CharacterCreatorEntry
	97,  // 13: comm.PlayerLoginResp.avatar:type_name -> comm.Avatar
	97,  // 14: comm.PlayerCache.avatar:type_name -> comm.Avatar
	118, // 15: comm.PlayerCacheMap.cache_map:type_name -> comm.PlayerCacheMap.CacheMapEntry
	23,  // 16: comm.PlayerCreateReq.app_info:type_name -> comm.AppInfo
	21,  // 17: comm.PlayerCreateResp.player_info:type_name -> comm.Player
	5,   // 18: comm.HouseParts.parts_type:type_name -> comm.HouseParts.PartsType
	17,  // 19: comm.HouseParts.pos:type_name -> comm.Vec3f
	17,  // 20: comm.HouseParts.rot:type_name -> comm.Vec3f
	6,   // 21: comm.HouseParts.housedir:type_name -> comm.HouseParts.HouseDirection
	51,  // 22: comm.DiyBuilding.cmp_list:type_name -> comm.HouseParts
	7,   // 23: comm.DiyBuilding.diy_mode:type_name -> comm.DiyBuilding.DiyMode
	119, // 24: comm.IllustratedBookSum.reward_got:type_name -> comm.IllustratedBookSum.RewardGotEntry
	120, // 25: comm.ShopPage.item_map:type_name -> comm.ShopPage.ItemMapEntry
	121, // 26: comm.ShopGoods.goods:type_name -> comm.ShopGoods.GoodsEntry
	50,  // 27: comm.Mail.attach:type_name -> comm.IdNum
	97,  // 28: comm.PlayerBriefInfo.avatar:type_name -> comm.Avatar
	122, // 29: comm.PlayerBriefInfoMap.info_map:type_name -> comm.PlayerBriefInfoMap.InfoMapEntry
	71,  // 30: comm.FriendBaseInfo.intimacy_list:type_name -> comm.FriendIntimacyEntry
	72,  // 31: comm.FriendInfo.base_info:type_name -> comm.FriendBaseInfo
	97,  // 32: comm.FriendInfo.avatar:type_name -> comm.Avatar
	97,  // 33: comm.FriendApplyInfo.avatar:type_name -> comm.Avatar
	97,  // 34: comm.FriendBlackInfo.avatar:type_name -> comm.Avatar
	123, // 35: comm.FriendAll.friend_map:type_name -> comm.FriendAll.FriendMapEntry
	124, // 36: comm.FriendAll.black_map:type_name -> comm.FriendAll.BlackMapEntry
	125, // 37: comm.FriendAll.apply_map:type_name -> comm.FriendAll.ApplyMapEntry
	1,   // 38: comm.FriendOperateReq.op_type:type_name -> comm.FriendOperateType
	2,   // 39: comm.FriendAddIntimacyReq.type:type_name -> comm.IntimacyType
	71,  // 40: comm.FriendUpdateIntimacyResp.entry:type_name -> comm.FriendIntimacyEntry
	97,  // 41: comm.FriendDeleteInfo.avatar:type_name -> comm.Avatar
	126, // 42: comm.PlayerMapInfoCacheMap.info_map:type_name -> comm.PlayerMapInfoCacheMap.InfoMapEntry
	3,   // 43: comm.PlayerMapInfoCacheMap.type:type_name -> comm.PlayerMapInfoCacheType
	97,  // 44: comm.PlayerSearchResp.avatar:type_name -> comm.Avatar
	18,  // 45: comm.Span.pos:type_name -> comm.Vec3
	127, // 46: comm.Span.span_data:type_name -> comm.Span.Data
	17,  // 47: comm.BuildElement.pos:type_name -> comm.Vec3f
	52,  // 48: comm.BuildElement.diy:type_name -> comm.DiyBuilding
	89,  // 49: comm.BlueprintBuild.spans:type_name -> comm.Span
	90,  // 50: comm.BlueprintBuild.element:type_name -> comm.BuildElement
	129, // 51: comm.BlueprintBuild.diy_texture:type_name -> comm.BlueprintBuild.DiyTextureEntry
	132, // 52: comm.PlayerChangeDisplayNameReq.client_info:type_name -> base.ClientInfo
	8,   // 53: comm.PlayerChangeDisplayNameReq.source:type_name -> comm.PlayerChangeDisplayNameReq.Source
	93,  // 54: comm.SetCharacterCreatorReq.units:type_name -> comm.CharacterCreatorUnit
	9,   // 55: comm.SetCharacterCreatorReq.source:type_name -> comm.SetCharacterCreatorReq.Source
	10,  // 56: comm.PlayerCreateStageReq.stage_id:type_name -> comm.PlayerCreateStageReq.Stage
	11,  // 57: comm.Avatar.avatar_type:type_name -> comm.Avatar.Type
	97,  // 58: comm.AvatarUpdateResp.avatar:type_name -> comm.Avatar
	97,  // 59: comm.PlayerAvatarUpdateReq.avatar:type_name -> comm.Avatar
	97,  // 60: comm.NotifyAvatarReq.current_avatar:type_name -> comm.Avatar
	97,  // 61: comm.NotifyAvatarReq.change_avatar:type_name -> comm.Avatar
	21,  // 62: comm.PlayerInfoGetRes.player_base_info:type_name -> comm.Player
	97,  // 63: comm.PlayerInfoGetRes.avatar:type_name -> comm.Avatar
	130, // 64: comm.PlayerInfoGetRes.fashion_diy_map:type_name -> comm.PlayerInfoGetRes.FashionDiyMapEntry
	131, // 65: comm.PlayerInfoGetRes.character_creator_map:type_name -> comm.PlayerInfoGetRes.CharacterCreatorMapEntry
	13,  // 66: comm.AnnounceInfo.sub_type:type_name -> comm.AnnounceInfo.SubType
	106, // 67: comm.AnnounceGetResp.announce_list:type_name -> comm.AnnounceInfo
	16,  // 68: comm.PackageVersionReq.platform:type_name -> comm.PackageVersionReq.PlatfromType
	113, // 69: comm.ServerListInfoGetResp.list:type_name -> comm.ServerListInfo
	37,  // 70: comm.PlayerCacheMap.CacheMapEntry.value:type_name -> comm.PlayerCache
	55,  // 71: comm.ShopPage.ItemMapEntry.value:type_name -> comm.ShopItem
	56,  // 72: comm.ShopGoods.GoodsEntry.value:type_name -> comm.ShopPage
	69,  // 73: comm.PlayerBriefInfoMap.InfoMapEntry.value:type_name -> comm.PlayerBriefInfo
	73,  // 74: comm.FriendAll.FriendMapEntry.value:type_name -> comm.FriendInfo
	75,  // 75: comm.FriendAll.BlackMapEntry.value:type_name -> comm.FriendBlackInfo
	74,  // 76: comm.FriendAll.ApplyMapEntry.value:type_name -> comm.FriendApplyInfo
	85,  // 77: comm.PlayerMapInfoCacheMap.InfoMapEntry.value:type_name -> comm.PlayerMapInfoCache
	128, // 78: comm.BlueprintBuild.DiyTextureEntry.value:type_name -> comm.BlueprintBuild.ArrayPos
	66,  // 79: comm.PlayerInfoGetRes.FashionDiyMapEntry.value:type_name -> comm.TextureDiy
	80,  // [80:80] is the sub-list for method output_type
	80,  // [80:80] is the sub-list for method input_type
	80,  // [80:80] is the sub-list for extension type_name
	80,  // [80:80] is the sub-list for extension extendee
	0,   // [0:80] is the sub-list for field type_name
}

func init() { file_comm_proto_init() }
func file_comm_proto_init() {
	if File_comm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_comm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vec3F); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vec3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Players); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Quest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerLoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerInfoBatchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerIdByUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerIdByUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerCache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerCacheMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellEnterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerJoinBattleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerRebuildingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerInfoByUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerCreateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NtpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NtpResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Strength); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Weather); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FashionPreset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdNum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HouseParts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiyBuilding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IllustratedBookSum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IllustratedBook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopGoods); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopBuyItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GMReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GMResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemCraft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemSell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailBriefInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextureDiy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerGamePlayTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerGamePlayActive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerBriefInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerBriefInfoMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendIntimacyEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendApplyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendBlackInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendAll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendOperateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendUpdateRemarkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendAddIntimacyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendUpdateIntimacyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendLoginInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendEnterMapInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendLogoutInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendDeleteInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerMapInfoCache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerMapInfoCacheMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerSearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerSearchResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Span); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlueprintBuild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Blueprint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacterCreatorUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerChangeDisplayNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCharacterCreatorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerCreateStageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Avatar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerAvatarUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyAvatarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemShortCut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerUpdateDescReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerInfoGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerInfoGetRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnnounceGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnnounceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnnounceGetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiJoinMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerStringInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageVersionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageVersionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveBoxByUgcLobbyScoreReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerListInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerListInfoGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerListInfoGetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerTimeStamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Span_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlueprintBuild_ArrayPos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_comm_proto_rawDesc,
			NumEnums:      17,
			NumMessages:   115,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_comm_proto_goTypes,
		DependencyIndexes: file_comm_proto_depIdxs,
		EnumInfos:         file_comm_proto_enumTypes,
		MessageInfos:      file_comm_proto_msgTypes,
	}.Build()
	File_comm_proto = out.File
	file_comm_proto_rawDesc = nil
	file_comm_proto_goTypes = nil
	file_comm_proto_depIdxs = nil
}
