// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.proto

package protos

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TestEnum int32

const (
	TestEnum_MONDAY TestEnum = 0
	TestEnum_SUNDAY TestEnum = 1
)

var TestEnum_name = map[int32]string{
	0: "MONDAY",
	1: "SUNDAY",
}

var TestEnum_value = map[string]int32{
	"MONDAY": 0,
	"SUNDAY": 1,
}

func (x TestEnum) String() string {
	return proto.EnumName(TestEnum_name, int32(x))
}

func (TestEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{0}
}

//99调试指令
//item cid num加道具
//res cid num加资源
//unit tp lv num加兵
//wounded tp lv num加伤兵
//hero cid lv step加英雄
//triggerUserTask type count id任务进度变化
//triggerDayTask type count id日常任务进度变化
type Cmd_C struct {
	ProtoId              int32    `protobuf:"varint,1,opt,name=protoId,proto3" json:"protoId,omitempty"`
	Args                 []string `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cmd_C) Reset()         { *m = Cmd_C{} }
func (m *Cmd_C) String() string { return proto.CompactTextString(m) }
func (*Cmd_C) ProtoMessage()    {}
func (*Cmd_C) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{0}
}

func (m *Cmd_C) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cmd_C.Unmarshal(m, b)
}
func (m *Cmd_C) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cmd_C.Marshal(b, m, deterministic)
}
func (m *Cmd_C) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cmd_C.Merge(m, src)
}
func (m *Cmd_C) XXX_Size() int {
	return xxx_messageInfo_Cmd_C.Size(m)
}
func (m *Cmd_C) XXX_DiscardUnknown() {
	xxx_messageInfo_Cmd_C.DiscardUnknown(m)
}

var xxx_messageInfo_Cmd_C proto.InternalMessageInfo

func (m *Cmd_C) GetProtoId() int32 {
	if m != nil {
		return m.ProtoId
	}
	return 0
}

func (m *Cmd_C) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

type TestType struct {
	Fint32               int32                 `protobuf:"varint,1,opt,name=Fint32,proto3" json:"Fint32,omitempty"`
	Fint64               int64                 `protobuf:"varint,2,opt,name=Fint64,proto3" json:"Fint64,omitempty"`
	Fuint32              uint32                `protobuf:"varint,3,opt,name=Fuint32,proto3" json:"Fuint32,omitempty"`
	Fuint64              uint64                `protobuf:"varint,4,opt,name=Fuint64,proto3" json:"Fuint64,omitempty"`
	Fsint32              int32                 `protobuf:"zigzag32,5,opt,name=Fsint32,proto3" json:"Fsint32,omitempty"`
	Fsint64              int64                 `protobuf:"zigzag64,6,opt,name=Fsint64,proto3" json:"Fsint64,omitempty"`
	Ffixed32             uint32                `protobuf:"fixed32,7,opt,name=Ffixed32,proto3" json:"Ffixed32,omitempty"`
	Ffixed64             uint64                `protobuf:"fixed64,8,opt,name=Ffixed64,proto3" json:"Ffixed64,omitempty"`
	Fdouble              float64               `protobuf:"fixed64,9,opt,name=Fdouble,proto3" json:"Fdouble,omitempty"`
	Ffloat               float32               `protobuf:"fixed32,10,opt,name=Ffloat,proto3" json:"Ffloat,omitempty"`
	Fbool                bool                  `protobuf:"varint,11,opt,name=Fbool,proto3" json:"Fbool,omitempty"`
	Fenum                TestEnum              `protobuf:"varint,12,opt,name=Fenum,proto3,enum=protos.TestEnum" json:"Fenum,omitempty"`
	Fmap                 map[int64]int32       `protobuf:"bytes,14,rep,name=Fmap,proto3" json:"Fmap,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Frepeatbool          []bool                `protobuf:"varint,15,rep,packed,name=Frepeatbool,proto3" json:"Frepeatbool,omitempty"`
	Fstring              string                `protobuf:"bytes,16,opt,name=Fstring,proto3" json:"Fstring,omitempty"`
	Fbytes               []byte                `protobuf:"bytes,17,opt,name=Fbytes,proto3" json:"Fbytes,omitempty"`
	Fsfixed32            int32                 `protobuf:"fixed32,18,opt,name=Fsfixed32,proto3" json:"Fsfixed32,omitempty"`
	Fsfixed64            int64                 `protobuf:"fixed64,19,opt,name=Fsfixed64,proto3" json:"Fsfixed64,omitempty"`
	Frepeatint           []int32               `protobuf:"varint,20,rep,packed,name=Frepeatint,proto3" json:"Frepeatint,omitempty"`
	Frepeatbool2         []bool                `protobuf:"varint,21,rep,packed,name=Frepeatbool2,proto3" json:"Frepeatbool2,omitempty"`
	Frepeatint2          []int32               `protobuf:"varint,22,rep,packed,name=Frepeatint2,proto3" json:"Frepeatint2,omitempty"`
	Fstring2             []string              `protobuf:"bytes,23,rep,name=Fstring2,proto3" json:"Fstring2,omitempty"`
	Fmessage             *TestType_TestChild   `protobuf:"bytes,24,opt,name=Fmessage,proto3" json:"Fmessage,omitempty"`
	Frepc                []*TestType_TestChild `protobuf:"bytes,25,rep,name=Frepc,proto3" json:"Frepc,omitempty"`
	Fzzz                 *TestType_TestChild   `protobuf:"bytes,26,opt,name=Fzzz,proto3" json:"Fzzz,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TestType) Reset()         { *m = TestType{} }
func (m *TestType) String() string { return proto.CompactTextString(m) }
func (*TestType) ProtoMessage()    {}
func (*TestType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{1}
}

func (m *TestType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestType.Unmarshal(m, b)
}
func (m *TestType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestType.Marshal(b, m, deterministic)
}
func (m *TestType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestType.Merge(m, src)
}
func (m *TestType) XXX_Size() int {
	return xxx_messageInfo_TestType.Size(m)
}
func (m *TestType) XXX_DiscardUnknown() {
	xxx_messageInfo_TestType.DiscardUnknown(m)
}

var xxx_messageInfo_TestType proto.InternalMessageInfo

func (m *TestType) GetFint32() int32 {
	if m != nil {
		return m.Fint32
	}
	return 0
}

func (m *TestType) GetFint64() int64 {
	if m != nil {
		return m.Fint64
	}
	return 0
}

func (m *TestType) GetFuint32() uint32 {
	if m != nil {
		return m.Fuint32
	}
	return 0
}

func (m *TestType) GetFuint64() uint64 {
	if m != nil {
		return m.Fuint64
	}
	return 0
}

func (m *TestType) GetFsint32() int32 {
	if m != nil {
		return m.Fsint32
	}
	return 0
}

func (m *TestType) GetFsint64() int64 {
	if m != nil {
		return m.Fsint64
	}
	return 0
}

func (m *TestType) GetFfixed32() uint32 {
	if m != nil {
		return m.Ffixed32
	}
	return 0
}

func (m *TestType) GetFfixed64() uint64 {
	if m != nil {
		return m.Ffixed64
	}
	return 0
}

func (m *TestType) GetFdouble() float64 {
	if m != nil {
		return m.Fdouble
	}
	return 0
}

func (m *TestType) GetFfloat() float32 {
	if m != nil {
		return m.Ffloat
	}
	return 0
}

func (m *TestType) GetFbool() bool {
	if m != nil {
		return m.Fbool
	}
	return false
}

func (m *TestType) GetFenum() TestEnum {
	if m != nil {
		return m.Fenum
	}
	return TestEnum_MONDAY
}

func (m *TestType) GetFmap() map[int64]int32 {
	if m != nil {
		return m.Fmap
	}
	return nil
}

func (m *TestType) GetFrepeatbool() []bool {
	if m != nil {
		return m.Frepeatbool
	}
	return nil
}

func (m *TestType) GetFstring() string {
	if m != nil {
		return m.Fstring
	}
	return ""
}

func (m *TestType) GetFbytes() []byte {
	if m != nil {
		return m.Fbytes
	}
	return nil
}

func (m *TestType) GetFsfixed32() int32 {
	if m != nil {
		return m.Fsfixed32
	}
	return 0
}

func (m *TestType) GetFsfixed64() int64 {
	if m != nil {
		return m.Fsfixed64
	}
	return 0
}

func (m *TestType) GetFrepeatint() []int32 {
	if m != nil {
		return m.Frepeatint
	}
	return nil
}

func (m *TestType) GetFrepeatbool2() []bool {
	if m != nil {
		return m.Frepeatbool2
	}
	return nil
}

func (m *TestType) GetFrepeatint2() []int32 {
	if m != nil {
		return m.Frepeatint2
	}
	return nil
}

func (m *TestType) GetFstring2() []string {
	if m != nil {
		return m.Fstring2
	}
	return nil
}

func (m *TestType) GetFmessage() *TestType_TestChild {
	if m != nil {
		return m.Fmessage
	}
	return nil
}

func (m *TestType) GetFrepc() []*TestType_TestChild {
	if m != nil {
		return m.Frepc
	}
	return nil
}

func (m *TestType) GetFzzz() *TestType_TestChild {
	if m != nil {
		return m.Fzzz
	}
	return nil
}

type TestType_TestChild struct {
	Fsint64              int64    `protobuf:"zigzag64,1,opt,name=fsint64,proto3" json:"fsint64,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestType_TestChild) Reset()         { *m = TestType_TestChild{} }
func (m *TestType_TestChild) String() string { return proto.CompactTextString(m) }
func (*TestType_TestChild) ProtoMessage()    {}
func (*TestType_TestChild) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{1, 1}
}

func (m *TestType_TestChild) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestType_TestChild.Unmarshal(m, b)
}
func (m *TestType_TestChild) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestType_TestChild.Marshal(b, m, deterministic)
}
func (m *TestType_TestChild) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestType_TestChild.Merge(m, src)
}
func (m *TestType_TestChild) XXX_Size() int {
	return xxx_messageInfo_TestType_TestChild.Size(m)
}
func (m *TestType_TestChild) XXX_DiscardUnknown() {
	xxx_messageInfo_TestType_TestChild.DiscardUnknown(m)
}

var xxx_messageInfo_TestType_TestChild proto.InternalMessageInfo

func (m *TestType_TestChild) GetFsint64() int64 {
	if m != nil {
		return m.Fsint64
	}
	return 0
}

type TestType_TTT struct {
	Fsint64              int64             `protobuf:"zigzag64,1,opt,name=fsint64,proto3" json:"fsint64,omitempty"`
	Fzzz                 *TestType_TTT_TT2 `protobuf:"bytes,2,opt,name=Fzzz,proto3" json:"Fzzz,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TestType_TTT) Reset()         { *m = TestType_TTT{} }
func (m *TestType_TTT) String() string { return proto.CompactTextString(m) }
func (*TestType_TTT) ProtoMessage()    {}
func (*TestType_TTT) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{1, 2}
}

func (m *TestType_TTT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestType_TTT.Unmarshal(m, b)
}
func (m *TestType_TTT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestType_TTT.Marshal(b, m, deterministic)
}
func (m *TestType_TTT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestType_TTT.Merge(m, src)
}
func (m *TestType_TTT) XXX_Size() int {
	return xxx_messageInfo_TestType_TTT.Size(m)
}
func (m *TestType_TTT) XXX_DiscardUnknown() {
	xxx_messageInfo_TestType_TTT.DiscardUnknown(m)
}

var xxx_messageInfo_TestType_TTT proto.InternalMessageInfo

func (m *TestType_TTT) GetFsint64() int64 {
	if m != nil {
		return m.Fsint64
	}
	return 0
}

func (m *TestType_TTT) GetFzzz() *TestType_TTT_TT2 {
	if m != nil {
		return m.Fzzz
	}
	return nil
}

type TestType_TTT_TT2 struct {
	Fsint64              int64    `protobuf:"zigzag64,1,opt,name=Fsint64,proto3" json:"Fsint64,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestType_TTT_TT2) Reset()         { *m = TestType_TTT_TT2{} }
func (m *TestType_TTT_TT2) String() string { return proto.CompactTextString(m) }
func (*TestType_TTT_TT2) ProtoMessage()    {}
func (*TestType_TTT_TT2) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{1, 2, 0}
}

func (m *TestType_TTT_TT2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestType_TTT_TT2.Unmarshal(m, b)
}
func (m *TestType_TTT_TT2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestType_TTT_TT2.Marshal(b, m, deterministic)
}
func (m *TestType_TTT_TT2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestType_TTT_TT2.Merge(m, src)
}
func (m *TestType_TTT_TT2) XXX_Size() int {
	return xxx_messageInfo_TestType_TTT_TT2.Size(m)
}
func (m *TestType_TTT_TT2) XXX_DiscardUnknown() {
	xxx_messageInfo_TestType_TTT_TT2.DiscardUnknown(m)
}

var xxx_messageInfo_TestType_TTT_TT2 proto.InternalMessageInfo

func (m *TestType_TTT_TT2) GetFsint64() int64 {
	if m != nil {
		return m.Fsint64
	}
	return 0
}

type TTT struct {
	Fsint64              int64    `protobuf:"zigzag64,1,opt,name=fsint64,proto3" json:"fsint64,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TTT) Reset()         { *m = TTT{} }
func (m *TTT) String() string { return proto.CompactTextString(m) }
func (*TTT) ProtoMessage()    {}
func (*TTT) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{2}
}

func (m *TTT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TTT.Unmarshal(m, b)
}
func (m *TTT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TTT.Marshal(b, m, deterministic)
}
func (m *TTT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TTT.Merge(m, src)
}
func (m *TTT) XXX_Size() int {
	return xxx_messageInfo_TTT.Size(m)
}
func (m *TTT) XXX_DiscardUnknown() {
	xxx_messageInfo_TTT.DiscardUnknown(m)
}

var xxx_messageInfo_TTT proto.InternalMessageInfo

func (m *TTT) GetFsint64() int64 {
	if m != nil {
		return m.Fsint64
	}
	return 0
}

func init() {
	proto.RegisterEnum("protos.TestEnum", TestEnum_name, TestEnum_value)
	proto.RegisterType((*Cmd_C)(nil), "protos.Cmd_C")
	proto.RegisterType((*TestType)(nil), "protos.TestType")
	proto.RegisterMapType((map[int64]int32)(nil), "protos.TestType.FmapEntry")
	proto.RegisterType((*TestType_TestChild)(nil), "protos.TestType.TestChild")
	proto.RegisterType((*TestType_TTT)(nil), "protos.TestType.TTT")
	proto.RegisterType((*TestType_TTT_TT2)(nil), "protos.TestType.TTT.TT2")
	proto.RegisterType((*TTT)(nil), "protos.TTT")
}

func init() { proto.RegisterFile("test.proto", fileDescriptor_c161fcfdc0c3ff1e) }

var fileDescriptor_c161fcfdc0c3ff1e = []byte{
	// 573 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x94, 0x51, 0x6f, 0xd3, 0x30,
	0x10, 0xc7, 0x71, 0xd3, 0xb4, 0xc9, 0x6d, 0x6c, 0x9d, 0x19, 0xe3, 0x88, 0x10, 0xb3, 0x2a, 0x81,
	0x2c, 0x84, 0x2a, 0x94, 0x95, 0x80, 0x78, 0x43, 0x63, 0x91, 0x78, 0x00, 0x24, 0x13, 0x1e, 0x78,
	0x42, 0x29, 0xf5, 0x4a, 0x44, 0x9b, 0x54, 0x8d, 0x8b, 0x68, 0x3f, 0x38, 0xcf, 0xc8, 0x76, 0x92,
	0xa6, 0x82, 0x69, 0x4f, 0xb9, 0xdf, 0xff, 0xce, 0xbe, 0xf3, 0xf9, 0x1c, 0x00, 0x25, 0x4b, 0x35,
	0x5a, 0xae, 0x0a, 0x55, 0xd0, 0x9e, 0xf9, 0x94, 0xc3, 0x97, 0xe0, 0x5e, 0x2e, 0xa6, 0xdf, 0x2e,
	0x29, 0x42, 0xdf, 0x48, 0xef, 0xa7, 0x48, 0x18, 0xe1, 0xae, 0xa8, 0x91, 0x52, 0xe8, 0xa6, 0xab,
	0x59, 0x89, 0x1d, 0xe6, 0x70, 0x5f, 0x18, 0x7b, 0xf8, 0xa7, 0x0f, 0x5e, 0x22, 0x4b, 0x95, 0x6c,
	0x96, 0x92, 0x9e, 0x41, 0x2f, 0xce, 0x72, 0x75, 0x11, 0x56, 0x2b, 0x2b, 0xaa, 0xf5, 0x68, 0x8c,
	0x1d, 0x46, 0xb8, 0x23, 0x2a, 0xd2, 0xa9, 0xe2, 0xb5, 0x5d, 0xe0, 0x30, 0xc2, 0xef, 0x8a, 0x1a,
	0x1b, 0x4f, 0x34, 0xc6, 0x2e, 0x23, 0xbc, 0x2b, 0x6a, 0x34, 0x9e, 0xd2, 0xae, 0x71, 0x19, 0xe1,
	0x27, 0xa2, 0xc6, 0xc6, 0x13, 0x8d, 0xb1, 0xc7, 0x08, 0xa7, 0xa2, 0x46, 0x1a, 0x80, 0x17, 0x5f,
	0x67, 0xbf, 0xe5, 0xf4, 0x22, 0xc4, 0x3e, 0x23, 0xbc, 0x2f, 0x1a, 0xde, 0xf9, 0xa2, 0x31, 0x7a,
	0x8c, 0xf0, 0x9e, 0x68, 0xd8, 0xec, 0x38, 0x2d, 0xd6, 0x93, 0xb9, 0x44, 0x9f, 0x11, 0x4e, 0x44,
	0x8d, 0xe6, 0x44, 0xd7, 0xf3, 0x22, 0x55, 0x08, 0x8c, 0xf0, 0x8e, 0xa8, 0x88, 0x9e, 0x82, 0x1b,
	0x4f, 0x8a, 0x62, 0x8e, 0x07, 0x8c, 0x70, 0x4f, 0x58, 0xa0, 0x4f, 0xc1, 0x8d, 0x65, 0xbe, 0x5e,
	0xe0, 0x21, 0x23, 0xfc, 0x28, 0x1c, 0xd8, 0xd6, 0x97, 0x23, 0xdd, 0xb8, 0xab, 0x7c, 0xbd, 0x10,
	0xd6, 0x4d, 0x47, 0xd0, 0x8d, 0x17, 0xe9, 0x12, 0x8f, 0x98, 0xc3, 0x0f, 0xc2, 0xa0, 0x1d, 0xa6,
	0xfb, 0x3b, 0xd2, 0xce, 0xab, 0x5c, 0xad, 0x36, 0xc2, 0xc4, 0x51, 0x06, 0x07, 0xf1, 0x4a, 0x2e,
	0x65, 0xaa, 0x4c, 0xce, 0x63, 0xe6, 0x70, 0x4f, 0xb4, 0x25, 0xdb, 0x13, 0xb5, 0xca, 0xf2, 0x19,
	0x0e, 0x18, 0xe1, 0xbe, 0xa8, 0xd1, 0x9c, 0x60, 0xb2, 0x51, 0xb2, 0xc4, 0x13, 0x46, 0xf8, 0xa1,
	0xa8, 0x88, 0x3e, 0x02, 0x3f, 0x2e, 0xeb, 0x66, 0x51, 0x46, 0xf8, 0xb1, 0xd8, 0x09, 0x2d, 0x6f,
	0x34, 0xc6, 0x7b, 0x8c, 0xf0, 0x81, 0xd8, 0x09, 0xf4, 0x31, 0x40, 0x95, 0x3c, 0xcb, 0x15, 0x9e,
	0x32, 0x87, 0xbb, 0xa2, 0xa5, 0xd0, 0x21, 0x1c, 0xb6, 0x8a, 0x0b, 0xf1, 0xbe, 0x29, 0x78, 0x4f,
	0x6b, 0x9d, 0x29, 0xcb, 0x55, 0x88, 0x67, 0x66, 0x93, 0xb6, 0x64, 0x6e, 0xcc, 0x1e, 0x22, 0xc4,
	0x07, 0x66, 0x14, 0x1b, 0xa6, 0x11, 0x78, 0xf1, 0x42, 0x96, 0x65, 0x3a, 0x93, 0x88, 0x8c, 0xfc,
	0xb7, 0x8b, 0xda, 0xb8, 0xfc, 0x91, 0xcd, 0xa7, 0xa2, 0x89, 0xa5, 0x2f, 0xc0, 0xd5, 0x29, 0xbe,
	0xe3, 0xc3, 0x1b, 0x5a, 0xbf, 0x5b, 0x64, 0x03, 0xcd, 0x5d, 0x6d, 0xb7, 0x5b, 0x0c, 0x6e, 0xcd,
	0x62, 0xe2, 0x82, 0x57, 0xe0, 0x37, 0xd7, 0x47, 0x07, 0xe0, 0xfc, 0x94, 0x1b, 0xf3, 0x4a, 0x1c,
	0xa1, 0x4d, 0x3d, 0x38, 0xbf, 0xd2, 0xf9, 0x5a, 0x9a, 0x17, 0xe2, 0x0a, 0x0b, 0x6f, 0x3a, 0xaf,
	0x49, 0xf0, 0x04, 0xfc, 0x66, 0x2f, 0x7d, 0x9f, 0xd7, 0xd5, 0x8c, 0x13, 0x3b, 0xe3, 0x15, 0x06,
	0x39, 0x38, 0x49, 0x92, 0xdc, 0x1c, 0x40, 0x9f, 0x57, 0x05, 0x77, 0x4c, 0xc1, 0xf8, 0x6f, 0xc1,
	0x49, 0x32, 0x4a, 0x92, 0xb0, 0x2a, 0xf7, 0x5c, 0x6f, 0xb7, 0xf7, 0xa6, 0xc8, 0xde, 0x9b, 0x1a,
	0x9e, 0xdf, 0x92, 0xef, 0xd9, 0xd0, 0xfe, 0x18, 0xf4, 0x7c, 0x53, 0x80, 0xde, 0x87, 0x4f, 0x1f,
	0xdf, 0xbd, 0xfd, 0x3a, 0xb8, 0xa3, 0xed, 0xcf, 0x5f, 0x8c, 0x4d, 0x26, 0xf6, 0xe7, 0x73, 0xf1,
	0x37, 0x00, 0x00, 0xff, 0xff, 0x12, 0x66, 0x53, 0x20, 0x91, 0x04, 0x00, 0x00,
}
