// Code generated by protoc-gen-go. DO NOT EDIT.
// source: response.proto

package protos

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//更新
type Updates struct {
	User      []*User      `protobuf:"bytes,1,rep,name=user,proto3" json:"user,omitempty"`
	UserEx    []*UserEx    `protobuf:"bytes,2,rep,name=userEx,proto3" json:"userEx,omitempty"`
	Item      []*Item      `protobuf:"bytes,3,rep,name=item,proto3" json:"item,omitempty"`
	Res       []*Res       `protobuf:"bytes,4,rep,name=res,proto3" json:"res,omitempty"`
	Buff      []*Buff      `protobuf:"bytes,5,rep,name=buff,proto3" json:"buff,omitempty"`
	Unit      []*Unit      `protobuf:"bytes,6,rep,name=unit,proto3" json:"unit,omitempty"`
	Wounded   []*Unit      `protobuf:"bytes,7,rep,name=wounded,proto3" json:"wounded,omitempty"`
	Job       []*Job       `protobuf:"bytes,8,rep,name=job,proto3" json:"job,omitempty"`
	UserTick  []*UserTick  `protobuf:"bytes,9,rep,name=userTick,proto3" json:"userTick,omitempty"`
	UserCount []*UserCount `protobuf:"bytes,10,rep,name=userCount,proto3" json:"userCount,omitempty"`
	Troop     []*Troop     `protobuf:"bytes,11,rep,name=troop,proto3" json:"troop,omitempty"`
	Tile      []*Tile      `protobuf:"bytes,12,rep,name=tile,proto3" json:"tile,omitempty"`
	Task      []*Task      `protobuf:"bytes,13,rep,name=task,proto3" json:"task,omitempty"`
	VipChest  []*VipChest  `protobuf:"bytes,14,rep,name=vipChest,proto3" json:"vipChest,omitempty"`
	Building  []*Building  `protobuf:"bytes,15,rep,name=building,proto3" json:"building,omitempty"`
	//以上15以上放常用
	Tech                 []*Tech              `protobuf:"bytes,16,rep,name=tech,proto3" json:"tech,omitempty"`
	Mail                 []*Mail              `protobuf:"bytes,17,rep,name=mail,proto3" json:"mail,omitempty"`
	MailNum              []*MailNum           `protobuf:"bytes,18,rep,name=mailNum,proto3" json:"mailNum,omitempty"`
	Box                  []*ActicityReward    `protobuf:"bytes,19,rep,name=box,proto3" json:"box,omitempty"`
	ResOut               []*ResOut            `protobuf:"bytes,20,rep,name=resOut,proto3" json:"resOut,omitempty"`
	Hero                 []*Hero              `protobuf:"bytes,21,rep,name=hero,proto3" json:"hero,omitempty"`
	Recruit              []*Recruit           `protobuf:"bytes,22,rep,name=recruit,proto3" json:"recruit,omitempty"`
	Rally                []*Rally             `protobuf:"bytes,23,rep,name=rally,proto3" json:"rally,omitempty"`
	HeadIcon             []*HeadIcon          `protobuf:"bytes,24,rep,name=headIcon,proto3" json:"headIcon,omitempty"`
	HeadIconB            []*HeadIconB         `protobuf:"bytes,25,rep,name=headIconB,proto3" json:"headIconB,omitempty"`
	CityArea             []*CityArea          `protobuf:"bytes,26,rep,name=cityArea,proto3" json:"cityArea,omitempty"`
	UserDaily            []*UserDaily         `protobuf:"bytes,27,rep,name=userDaily,proto3" json:"userDaily,omitempty"`
	UserMark             []*UserMark          `protobuf:"bytes,28,rep,name=userMark,proto3" json:"userMark,omitempty"`
	MysteryShopFlush     []*ShopFlush         `protobuf:"bytes,29,rep,name=mysteryShopFlush,proto3" json:"mysteryShopFlush,omitempty"`
	MysteryShopGoods     []*ShopGoods         `protobuf:"bytes,30,rep,name=mysteryShopGoods,proto3" json:"mysteryShopGoods,omitempty"`
	UserAllianceApply    []*UserAllianceApply `protobuf:"bytes,31,rep,name=userAllianceApply,proto3" json:"userAllianceApply,omitempty"`
	Alliance             []*Alliance          `protobuf:"bytes,32,rep,name=alliance,proto3" json:"alliance,omitempty"`
	AllianceMember       []*AllianceMember    `protobuf:"bytes,33,rep,name=allianceMember,proto3" json:"allianceMember,omitempty"`
	AllianceApply        []*AllianceApply     `protobuf:"bytes,34,rep,name=allianceApply,proto3" json:"allianceApply,omitempty"`
	AllianceHelp         []*AllianceHelp      `protobuf:"bytes,35,rep,name=allianceHelp,proto3" json:"allianceHelp,omitempty"`
	AllianceTech         []*AllianceTech      `protobuf:"bytes,36,rep,name=allianceTech,proto3" json:"allianceTech,omitempty"`
	AllianceBuff         []*AllianceBuff      `protobuf:"bytes,37,rep,name=allianceBuff,proto3" json:"allianceBuff,omitempty"`
	AllianceGift         []*AllianceGift      `protobuf:"bytes,38,rep,name=allianceGift,proto3" json:"allianceGift,omitempty"`
	AllianceSuperGift    []*AllianceSuperGift `protobuf:"bytes,39,rep,name=allianceSuperGift,proto3" json:"allianceSuperGift,omitempty"`
	ReinforceLog         []*ReinforceLog      `protobuf:"bytes,40,rep,name=reinforceLog,proto3" json:"reinforceLog,omitempty"`
	City                 []*City              `protobuf:"bytes,41,rep,name=city,proto3" json:"city,omitempty"`
	Activity             []*DataActivity      `protobuf:"bytes,42,rep,name=activity,proto3" json:"activity,omitempty"`
	Throne               []*Throne            `protobuf:"bytes,43,rep,name=throne,proto3" json:"throne,omitempty"`
	Explored             []*Explored          `protobuf:"bytes,44,rep,name=explored,proto3" json:"explored,omitempty"`
	ExploreEvent         []*ExploreEvent      `protobuf:"bytes,45,rep,name=exploreEvent,proto3" json:"exploreEvent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Updates) Reset()         { *m = Updates{} }
func (m *Updates) String() string { return proto.CompactTextString(m) }
func (*Updates) ProtoMessage()    {}
func (*Updates) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fbc901015fa5021, []int{0}
}

func (m *Updates) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Updates.Unmarshal(m, b)
}
func (m *Updates) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Updates.Marshal(b, m, deterministic)
}
func (m *Updates) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Updates.Merge(m, src)
}
func (m *Updates) XXX_Size() int {
	return xxx_messageInfo_Updates.Size(m)
}
func (m *Updates) XXX_DiscardUnknown() {
	xxx_messageInfo_Updates.DiscardUnknown(m)
}

var xxx_messageInfo_Updates proto.InternalMessageInfo

func (m *Updates) GetUser() []*User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Updates) GetUserEx() []*UserEx {
	if m != nil {
		return m.UserEx
	}
	return nil
}

func (m *Updates) GetItem() []*Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *Updates) GetRes() []*Res {
	if m != nil {
		return m.Res
	}
	return nil
}

func (m *Updates) GetBuff() []*Buff {
	if m != nil {
		return m.Buff
	}
	return nil
}

func (m *Updates) GetUnit() []*Unit {
	if m != nil {
		return m.Unit
	}
	return nil
}

func (m *Updates) GetWounded() []*Unit {
	if m != nil {
		return m.Wounded
	}
	return nil
}

func (m *Updates) GetJob() []*Job {
	if m != nil {
		return m.Job
	}
	return nil
}

func (m *Updates) GetUserTick() []*UserTick {
	if m != nil {
		return m.UserTick
	}
	return nil
}

func (m *Updates) GetUserCount() []*UserCount {
	if m != nil {
		return m.UserCount
	}
	return nil
}

func (m *Updates) GetTroop() []*Troop {
	if m != nil {
		return m.Troop
	}
	return nil
}

func (m *Updates) GetTile() []*Tile {
	if m != nil {
		return m.Tile
	}
	return nil
}

func (m *Updates) GetTask() []*Task {
	if m != nil {
		return m.Task
	}
	return nil
}

func (m *Updates) GetVipChest() []*VipChest {
	if m != nil {
		return m.VipChest
	}
	return nil
}

func (m *Updates) GetBuilding() []*Building {
	if m != nil {
		return m.Building
	}
	return nil
}

func (m *Updates) GetTech() []*Tech {
	if m != nil {
		return m.Tech
	}
	return nil
}

func (m *Updates) GetMail() []*Mail {
	if m != nil {
		return m.Mail
	}
	return nil
}

func (m *Updates) GetMailNum() []*MailNum {
	if m != nil {
		return m.MailNum
	}
	return nil
}

func (m *Updates) GetBox() []*ActicityReward {
	if m != nil {
		return m.Box
	}
	return nil
}

func (m *Updates) GetResOut() []*ResOut {
	if m != nil {
		return m.ResOut
	}
	return nil
}

func (m *Updates) GetHero() []*Hero {
	if m != nil {
		return m.Hero
	}
	return nil
}

func (m *Updates) GetRecruit() []*Recruit {
	if m != nil {
		return m.Recruit
	}
	return nil
}

func (m *Updates) GetRally() []*Rally {
	if m != nil {
		return m.Rally
	}
	return nil
}

func (m *Updates) GetHeadIcon() []*HeadIcon {
	if m != nil {
		return m.HeadIcon
	}
	return nil
}

func (m *Updates) GetHeadIconB() []*HeadIconB {
	if m != nil {
		return m.HeadIconB
	}
	return nil
}

func (m *Updates) GetCityArea() []*CityArea {
	if m != nil {
		return m.CityArea
	}
	return nil
}

func (m *Updates) GetUserDaily() []*UserDaily {
	if m != nil {
		return m.UserDaily
	}
	return nil
}

func (m *Updates) GetUserMark() []*UserMark {
	if m != nil {
		return m.UserMark
	}
	return nil
}

func (m *Updates) GetMysteryShopFlush() []*ShopFlush {
	if m != nil {
		return m.MysteryShopFlush
	}
	return nil
}

func (m *Updates) GetMysteryShopGoods() []*ShopGoods {
	if m != nil {
		return m.MysteryShopGoods
	}
	return nil
}

func (m *Updates) GetUserAllianceApply() []*UserAllianceApply {
	if m != nil {
		return m.UserAllianceApply
	}
	return nil
}

func (m *Updates) GetAlliance() []*Alliance {
	if m != nil {
		return m.Alliance
	}
	return nil
}

func (m *Updates) GetAllianceMember() []*AllianceMember {
	if m != nil {
		return m.AllianceMember
	}
	return nil
}

func (m *Updates) GetAllianceApply() []*AllianceApply {
	if m != nil {
		return m.AllianceApply
	}
	return nil
}

func (m *Updates) GetAllianceHelp() []*AllianceHelp {
	if m != nil {
		return m.AllianceHelp
	}
	return nil
}

func (m *Updates) GetAllianceTech() []*AllianceTech {
	if m != nil {
		return m.AllianceTech
	}
	return nil
}

func (m *Updates) GetAllianceBuff() []*AllianceBuff {
	if m != nil {
		return m.AllianceBuff
	}
	return nil
}

func (m *Updates) GetAllianceGift() []*AllianceGift {
	if m != nil {
		return m.AllianceGift
	}
	return nil
}

func (m *Updates) GetAllianceSuperGift() []*AllianceSuperGift {
	if m != nil {
		return m.AllianceSuperGift
	}
	return nil
}

func (m *Updates) GetReinforceLog() []*ReinforceLog {
	if m != nil {
		return m.ReinforceLog
	}
	return nil
}

func (m *Updates) GetCity() []*City {
	if m != nil {
		return m.City
	}
	return nil
}

func (m *Updates) GetActivity() []*DataActivity {
	if m != nil {
		return m.Activity
	}
	return nil
}

func (m *Updates) GetThrone() []*Throne {
	if m != nil {
		return m.Throne
	}
	return nil
}

func (m *Updates) GetExplored() []*Explored {
	if m != nil {
		return m.Explored
	}
	return nil
}

func (m *Updates) GetExploreEvent() []*ExploreEvent {
	if m != nil {
		return m.ExploreEvent
	}
	return nil
}

//删除(主键)
type Removes struct {
	Item      []*ItemPK      `protobuf:"bytes,1,rep,name=item,proto3" json:"item,omitempty"`
	Res       []*ResPK       `protobuf:"bytes,2,rep,name=res,proto3" json:"res,omitempty"`
	Buff      []*BuffPK      `protobuf:"bytes,3,rep,name=buff,proto3" json:"buff,omitempty"`
	Job       []*JobPK       `protobuf:"bytes,4,rep,name=job,proto3" json:"job,omitempty"`
	UserTick  []*UserTickPK  `protobuf:"bytes,5,rep,name=userTick,proto3" json:"userTick,omitempty"`
	UserCount []*UserCountPK `protobuf:"bytes,6,rep,name=userCount,proto3" json:"userCount,omitempty"`
	Troop     []*TroopPK     `protobuf:"bytes,7,rep,name=troop,proto3" json:"troop,omitempty"`
	Tile      []*TilePK      `protobuf:"bytes,8,rep,name=tile,proto3" json:"tile,omitempty"`
	Task      []*TaskPK      `protobuf:"bytes,9,rep,name=task,proto3" json:"task,omitempty"`
	Unit      []*UnitPK      `protobuf:"bytes,10,rep,name=unit,proto3" json:"unit,omitempty"`
	Wounded   []*UnitPK      `protobuf:"bytes,11,rep,name=wounded,proto3" json:"wounded,omitempty"`
	Tech      []*TechPK      `protobuf:"bytes,12,rep,name=tech,proto3" json:"tech,omitempty"`
	Rally     []*RallyPK     `protobuf:"bytes,13,rep,name=rally,proto3" json:"rally,omitempty"`
	Building  []*BuildingPK  `protobuf:"bytes,14,rep,name=building,proto3" json:"building,omitempty"`
	Mail      []*MailPK      `protobuf:"bytes,15,rep,name=mail,proto3" json:"mail,omitempty"`
	//以上15以上放常用
	Hero                 []*HeroPK              `protobuf:"bytes,16,rep,name=hero,proto3" json:"hero,omitempty"`
	HeadIcon             []*HeadIconBPK         `protobuf:"bytes,17,rep,name=headIcon,proto3" json:"headIcon,omitempty"`
	UserDaily            []*UserDailyPK         `protobuf:"bytes,18,rep,name=userDaily,proto3" json:"userDaily,omitempty"`
	UserMark             []*UserMarkPK          `protobuf:"bytes,19,rep,name=userMark,proto3" json:"userMark,omitempty"`
	AllianceGift         []*AllianceGiftPK      `protobuf:"bytes,20,rep,name=allianceGift,proto3" json:"allianceGift,omitempty"`
	MysteryShopGoods     []*ShopGoodsPK         `protobuf:"bytes,21,rep,name=mysteryShopGoods,proto3" json:"mysteryShopGoods,omitempty"`
	UserAllianceApply    []*UserAllianceApplyPK `protobuf:"bytes,22,rep,name=userAllianceApply,proto3" json:"userAllianceApply,omitempty"`
	AllianceApply        []*AllianceApplyPK     `protobuf:"bytes,23,rep,name=allianceApply,proto3" json:"allianceApply,omitempty"`
	AllianceMember       []*AllianceMemberPK    `protobuf:"bytes,24,rep,name=allianceMember,proto3" json:"allianceMember,omitempty"`
	AllianceHelp         []*AllianceHelpPK      `protobuf:"bytes,25,rep,name=allianceHelp,proto3" json:"allianceHelp,omitempty"`
	AllianceTech         []*AllianceTechPK      `protobuf:"bytes,26,rep,name=allianceTech,proto3" json:"allianceTech,omitempty"`
	AllianceBuff         []*AllianceBuffPK      `protobuf:"bytes,27,rep,name=allianceBuff,proto3" json:"allianceBuff,omitempty"`
	AllianceSuperGift    []*AllianceSuperGiftPK `protobuf:"bytes,28,rep,name=allianceSuperGift,proto3" json:"allianceSuperGift,omitempty"`
	Activity             []*DataActivityPK      `protobuf:"bytes,29,rep,name=activity,proto3" json:"activity,omitempty"`
	Explored             []*ExploredPK          `protobuf:"bytes,44,rep,name=explored,proto3" json:"explored,omitempty"`
	ExploreEvent         []*ExploreEventPK      `protobuf:"bytes,45,rep,name=exploreEvent,proto3" json:"exploreEvent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Removes) Reset()         { *m = Removes{} }
func (m *Removes) String() string { return proto.CompactTextString(m) }
func (*Removes) ProtoMessage()    {}
func (*Removes) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fbc901015fa5021, []int{1}
}

func (m *Removes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Removes.Unmarshal(m, b)
}
func (m *Removes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Removes.Marshal(b, m, deterministic)
}
func (m *Removes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Removes.Merge(m, src)
}
func (m *Removes) XXX_Size() int {
	return xxx_messageInfo_Removes.Size(m)
}
func (m *Removes) XXX_DiscardUnknown() {
	xxx_messageInfo_Removes.DiscardUnknown(m)
}

var xxx_messageInfo_Removes proto.InternalMessageInfo

func (m *Removes) GetItem() []*ItemPK {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *Removes) GetRes() []*ResPK {
	if m != nil {
		return m.Res
	}
	return nil
}

func (m *Removes) GetBuff() []*BuffPK {
	if m != nil {
		return m.Buff
	}
	return nil
}

func (m *Removes) GetJob() []*JobPK {
	if m != nil {
		return m.Job
	}
	return nil
}

func (m *Removes) GetUserTick() []*UserTickPK {
	if m != nil {
		return m.UserTick
	}
	return nil
}

func (m *Removes) GetUserCount() []*UserCountPK {
	if m != nil {
		return m.UserCount
	}
	return nil
}

func (m *Removes) GetTroop() []*TroopPK {
	if m != nil {
		return m.Troop
	}
	return nil
}

func (m *Removes) GetTile() []*TilePK {
	if m != nil {
		return m.Tile
	}
	return nil
}

func (m *Removes) GetTask() []*TaskPK {
	if m != nil {
		return m.Task
	}
	return nil
}

func (m *Removes) GetUnit() []*UnitPK {
	if m != nil {
		return m.Unit
	}
	return nil
}

func (m *Removes) GetWounded() []*UnitPK {
	if m != nil {
		return m.Wounded
	}
	return nil
}

func (m *Removes) GetTech() []*TechPK {
	if m != nil {
		return m.Tech
	}
	return nil
}

func (m *Removes) GetRally() []*RallyPK {
	if m != nil {
		return m.Rally
	}
	return nil
}

func (m *Removes) GetBuilding() []*BuildingPK {
	if m != nil {
		return m.Building
	}
	return nil
}

func (m *Removes) GetMail() []*MailPK {
	if m != nil {
		return m.Mail
	}
	return nil
}

func (m *Removes) GetHero() []*HeroPK {
	if m != nil {
		return m.Hero
	}
	return nil
}

func (m *Removes) GetHeadIcon() []*HeadIconBPK {
	if m != nil {
		return m.HeadIcon
	}
	return nil
}

func (m *Removes) GetUserDaily() []*UserDailyPK {
	if m != nil {
		return m.UserDaily
	}
	return nil
}

func (m *Removes) GetUserMark() []*UserMarkPK {
	if m != nil {
		return m.UserMark
	}
	return nil
}

func (m *Removes) GetAllianceGift() []*AllianceGiftPK {
	if m != nil {
		return m.AllianceGift
	}
	return nil
}

func (m *Removes) GetMysteryShopGoods() []*ShopGoodsPK {
	if m != nil {
		return m.MysteryShopGoods
	}
	return nil
}

func (m *Removes) GetUserAllianceApply() []*UserAllianceApplyPK {
	if m != nil {
		return m.UserAllianceApply
	}
	return nil
}

func (m *Removes) GetAllianceApply() []*AllianceApplyPK {
	if m != nil {
		return m.AllianceApply
	}
	return nil
}

func (m *Removes) GetAllianceMember() []*AllianceMemberPK {
	if m != nil {
		return m.AllianceMember
	}
	return nil
}

func (m *Removes) GetAllianceHelp() []*AllianceHelpPK {
	if m != nil {
		return m.AllianceHelp
	}
	return nil
}

func (m *Removes) GetAllianceTech() []*AllianceTechPK {
	if m != nil {
		return m.AllianceTech
	}
	return nil
}

func (m *Removes) GetAllianceBuff() []*AllianceBuffPK {
	if m != nil {
		return m.AllianceBuff
	}
	return nil
}

func (m *Removes) GetAllianceSuperGift() []*AllianceSuperGiftPK {
	if m != nil {
		return m.AllianceSuperGift
	}
	return nil
}

func (m *Removes) GetActivity() []*DataActivityPK {
	if m != nil {
		return m.Activity
	}
	return nil
}

func (m *Removes) GetExplored() []*ExploredPK {
	if m != nil {
		return m.Explored
	}
	return nil
}

func (m *Removes) GetExploreEvent() []*ExploreEventPK {
	if m != nil {
		return m.ExploreEvent
	}
	return nil
}

//*_C+1通用回应
//12主动推送
type Response_S struct {
	ProtoId              int32    `protobuf:"varint,1,opt,name=protoId,proto3" json:"protoId,omitempty"`
	Updates              *Updates `protobuf:"bytes,2,opt,name=updates,proto3" json:"updates,omitempty"`
	Removes              *Removes `protobuf:"bytes,3,opt,name=removes,proto3" json:"removes,omitempty"`
	Props                *Updates `protobuf:"bytes,4,opt,name=props,proto3" json:"props,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response_S) Reset()         { *m = Response_S{} }
func (m *Response_S) String() string { return proto.CompactTextString(m) }
func (*Response_S) ProtoMessage()    {}
func (*Response_S) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fbc901015fa5021, []int{2}
}

func (m *Response_S) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response_S.Unmarshal(m, b)
}
func (m *Response_S) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response_S.Marshal(b, m, deterministic)
}
func (m *Response_S) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response_S.Merge(m, src)
}
func (m *Response_S) XXX_Size() int {
	return xxx_messageInfo_Response_S.Size(m)
}
func (m *Response_S) XXX_DiscardUnknown() {
	xxx_messageInfo_Response_S.DiscardUnknown(m)
}

var xxx_messageInfo_Response_S proto.InternalMessageInfo

func (m *Response_S) GetProtoId() int32 {
	if m != nil {
		return m.ProtoId
	}
	return 0
}

func (m *Response_S) GetUpdates() *Updates {
	if m != nil {
		return m.Updates
	}
	return nil
}

func (m *Response_S) GetRemoves() *Removes {
	if m != nil {
		return m.Removes
	}
	return nil
}

func (m *Response_S) GetProps() *Updates {
	if m != nil {
		return m.Props
	}
	return nil
}

//14通用错误
type Error_S struct {
	ProtoId              int32    `protobuf:"varint,1,opt,name=protoId,proto3" json:"protoId,omitempty"`
	Code                 int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Params               []string `protobuf:"bytes,4,rep,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error_S) Reset()         { *m = Error_S{} }
func (m *Error_S) String() string { return proto.CompactTextString(m) }
func (*Error_S) ProtoMessage()    {}
func (*Error_S) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fbc901015fa5021, []int{3}
}

func (m *Error_S) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error_S.Unmarshal(m, b)
}
func (m *Error_S) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error_S.Marshal(b, m, deterministic)
}
func (m *Error_S) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error_S.Merge(m, src)
}
func (m *Error_S) XXX_Size() int {
	return xxx_messageInfo_Error_S.Size(m)
}
func (m *Error_S) XXX_DiscardUnknown() {
	xxx_messageInfo_Error_S.DiscardUnknown(m)
}

var xxx_messageInfo_Error_S proto.InternalMessageInfo

func (m *Error_S) GetProtoId() int32 {
	if m != nil {
		return m.ProtoId
	}
	return 0
}

func (m *Error_S) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error_S) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *Error_S) GetParams() []string {
	if m != nil {
		return m.Params
	}
	return nil
}

//16跨天了跨天了
type NewDay_S struct {
	ProtoId              int32    `protobuf:"varint,1,opt,name=protoId,proto3" json:"protoId,omitempty"`
	Time                 int64    `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewDay_S) Reset()         { *m = NewDay_S{} }
func (m *NewDay_S) String() string { return proto.CompactTextString(m) }
func (*NewDay_S) ProtoMessage()    {}
func (*NewDay_S) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fbc901015fa5021, []int{4}
}

func (m *NewDay_S) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewDay_S.Unmarshal(m, b)
}
func (m *NewDay_S) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewDay_S.Marshal(b, m, deterministic)
}
func (m *NewDay_S) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewDay_S.Merge(m, src)
}
func (m *NewDay_S) XXX_Size() int {
	return xxx_messageInfo_NewDay_S.Size(m)
}
func (m *NewDay_S) XXX_DiscardUnknown() {
	xxx_messageInfo_NewDay_S.DiscardUnknown(m)
}

var xxx_messageInfo_NewDay_S proto.InternalMessageInfo

func (m *NewDay_S) GetProtoId() int32 {
	if m != nil {
		return m.ProtoId
	}
	return 0
}

func (m *NewDay_S) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

//1不存在
type Ping struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fbc901015fa5021, []int{5}
}

func (m *Ping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ping.Unmarshal(m, b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
}
func (m *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(m, src)
}
func (m *Ping) XXX_Size() int {
	return xxx_messageInfo_Ping.Size(m)
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

//2不存在
type Pong struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pong) Reset()         { *m = Pong{} }
func (m *Pong) String() string { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()    {}
func (*Pong) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fbc901015fa5021, []int{6}
}

func (m *Pong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pong.Unmarshal(m, b)
}
func (m *Pong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pong.Marshal(b, m, deterministic)
}
func (m *Pong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pong.Merge(m, src)
}
func (m *Pong) XXX_Size() int {
	return xxx_messageInfo_Pong.Size(m)
}
func (m *Pong) XXX_DiscardUnknown() {
	xxx_messageInfo_Pong.DiscardUnknown(m)
}

var xxx_messageInfo_Pong proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Updates)(nil), "protos.Updates")
	proto.RegisterType((*Removes)(nil), "protos.Removes")
	proto.RegisterType((*Response_S)(nil), "protos.Response_S")
	proto.RegisterType((*Error_S)(nil), "protos.Error_S")
	proto.RegisterType((*NewDay_S)(nil), "protos.NewDay_S")
	proto.RegisterType((*Ping)(nil), "protos.Ping")
	proto.RegisterType((*Pong)(nil), "protos.Pong")
}

func init() { proto.RegisterFile("response.proto", fileDescriptor_0fbc901015fa5021) }

var fileDescriptor_0fbc901015fa5021 = []byte{
	// 1400 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x98, 0x6d, 0x57, 0xdc, 0xb6,
	0x12, 0xc7, 0x0f, 0x59, 0x60, 0x41, 0x3c, 0x9b, 0x84, 0x28, 0x4f, 0x37, 0x5c, 0xe7, 0x26, 0x97,
	0xb4, 0x29, 0x69, 0xd2, 0x37, 0x39, 0xf4, 0xa4, 0x2d, 0x10, 0x9a, 0x90, 0x6d, 0xd2, 0x3d, 0x13,
	0xd2, 0xb7, 0x3d, 0x5e, 0xaf, 0x60, 0x5d, 0x6c, 0xcb, 0x47, 0xb6, 0x81, 0xfd, 0x3c, 0xf9, 0x86,
	0xfd, 0x04, 0x3d, 0x33, 0x96, 0x8d, 0xc7, 0x76, 0xdb, 0x57, 0xf6, 0xce, 0xff, 0x2f, 0x69, 0x24,
	0xcb, 0xf3, 0x93, 0x57, 0xac, 0x1a, 0x95, 0x26, 0x3a, 0x4e, 0xd5, 0x6e, 0x62, 0x74, 0xa6, 0x9d,
	0x79, 0xba, 0xa4, 0x77, 0xd7, 0xe8, 0xfa, 0x39, 0x55, 0xa6, 0x10, 0x6c, 0xe0, 0x9d, 0x32, 0x9a,
	0x05, 0x8e, 0x33, 0x15, 0xd9, 0xc0, 0x26, 0x5d, 0xf6, 0xc3, 0x30, 0xf0, 0x62, 0x5f, 0x31, 0xd7,
	0x61, 0x90, 0x4d, 0x6d, 0x60, 0xe9, 0x52, 0x9b, 0x70, 0xcc, 0xd4, 0x0f, 0x5e, 0x10, 0xda, 0xc0,
	0xaa, 0xe7, 0x67, 0xc1, 0xc5, 0xb5, 0x7b, 0xd9, 0xd7, 0x51, 0xa4, 0xe3, 0xe2, 0x97, 0xfb, 0x65,
	0x5d, 0xf4, 0x3f, 0x27, 0x63, 0x2f, 0x53, 0xa9, 0xb3, 0x2d, 0x66, 0xf3, 0x54, 0x19, 0x39, 0xb3,
	0xdd, 0xdb, 0x59, 0x7a, 0xb9, 0x5c, 0x38, 0xd2, 0x5d, 0xcc, 0x18, 0x48, 0x71, 0x9e, 0x88, 0x79,
	0xbc, 0x1e, 0x5d, 0xc9, 0x1b, 0xe4, 0x59, 0xad, 0x7b, 0x8e, 0xae, 0xc0, 0xaa, 0xd8, 0x53, 0x90,
	0xa9, 0x48, 0xf6, 0x78, 0x4f, 0x38, 0x33, 0x20, 0xc5, 0x79, 0x20, 0x7a, 0x46, 0xa5, 0x72, 0x96,
	0x0c, 0x4b, 0xa5, 0x01, 0x54, 0x0a, 0x18, 0xc7, 0x0e, 0x46, 0xf9, 0xe9, 0xa9, 0x9c, 0xe3, 0x1d,
	0x1c, 0xe4, 0xa7, 0xa7, 0x40, 0x0a, 0x25, 0x1b, 0x07, 0x99, 0x9c, 0x6f, 0x24, 0x1b, 0x07, 0x19,
	0x90, 0xe2, 0x3c, 0x11, 0xfd, 0x4b, 0x9d, 0xc7, 0x63, 0x35, 0x96, 0xfd, 0x0e, 0x53, 0x29, 0x62,
	0x2a, 0x7f, 0xe8, 0x91, 0x5c, 0xe0, 0xa9, 0xbc, 0xd7, 0x23, 0xc0, 0xb8, 0xf3, 0x4c, 0x2c, 0xe0,
	0xac, 0x4e, 0x02, 0xff, 0x5c, 0x2e, 0x92, 0x67, 0xbd, 0x3e, 0x6b, 0x8c, 0x43, 0xe5, 0x70, 0x9e,
	0x8b, 0x45, 0xbc, 0x3f, 0xd4, 0x79, 0x9c, 0x49, 0x41, 0xf6, 0x8d, 0xba, 0x9d, 0x04, 0xb8, 0xf6,
	0x38, 0x8f, 0xc4, 0x5c, 0x66, 0xb4, 0x4e, 0xe4, 0x12, 0x99, 0x57, 0x4a, 0xf3, 0x09, 0x06, 0xa1,
	0xd0, 0x70, 0xb2, 0x59, 0x10, 0x2a, 0xb9, 0xcc, 0xe7, 0x71, 0x12, 0x84, 0x0a, 0x48, 0x21, 0x87,
	0x97, 0x9e, 0xcb, 0x95, 0x86, 0xc3, 0x4b, 0xcf, 0x81, 0x14, 0x9c, 0xc7, 0x45, 0x90, 0x1c, 0x4e,
	0x54, 0x9a, 0xc9, 0x55, 0x3e, 0x8f, 0xdf, 0x6c, 0x1c, 0x2a, 0x07, 0xba, 0x47, 0x79, 0x10, 0x8e,
	0x83, 0xf8, 0x4c, 0xae, 0x71, 0xf7, 0x81, 0x8d, 0x43, 0xe5, 0xa0, 0xd1, 0x95, 0x3f, 0x91, 0xeb,
	0x8d, 0xd1, 0x95, 0x3f, 0x01, 0x52, 0xd0, 0x11, 0x79, 0x41, 0x28, 0x37, 0xb8, 0x03, 0xf7, 0x29,
	0x90, 0xe2, 0x3c, 0x15, 0x7d, 0xbc, 0x7e, 0xcc, 0x23, 0xe9, 0x90, 0x69, 0xad, 0x6e, 0xfa, 0x98,
	0x47, 0x50, 0xea, 0xce, 0x8e, 0xe8, 0x8d, 0xf4, 0x95, 0xdc, 0x24, 0xdb, 0x56, 0x69, 0xdb, 0xf7,
	0xb3, 0xc0, 0x0f, 0xb2, 0x29, 0xa8, 0x4b, 0xcf, 0x8c, 0x01, 0x2d, 0xb8, 0x61, 0x8d, 0x4a, 0x7f,
	0xcd, 0x33, 0x79, 0x93, 0x6f, 0x58, 0xa0, 0x28, 0x58, 0x15, 0xd3, 0x9b, 0x28, 0xa3, 0xe5, 0x2d,
	0x9e, 0x1e, 0xbe, 0x9b, 0x40, 0x0a, 0xa6, 0x67, 0x94, 0x6f, 0xf2, 0x20, 0x93, 0x5b, 0x3c, 0x3d,
	0x28, 0xc2, 0x50, 0xea, 0xf8, 0x48, 0x8d, 0x17, 0x86, 0x53, 0x79, 0x9b, 0x3f, 0x52, 0xc0, 0x20,
	0x14, 0x1a, 0x2e, 0xf0, 0x44, 0x79, 0xe3, 0x63, 0x5f, 0xc7, 0x52, 0xf2, 0x05, 0x7e, 0x67, 0xe3,
	0x50, 0x39, 0x70, 0x5b, 0x95, 0xf7, 0x07, 0xf2, 0x0e, 0xdf, 0x56, 0xa5, 0xfd, 0x00, 0xae, 0x3d,
	0xd8, 0x3d, 0xae, 0xc5, 0xbe, 0x51, 0x9e, 0xbc, 0xcb, 0xbb, 0x3f, 0xb4, 0x71, 0xa8, 0x1c, 0xe5,
	0xae, 0x7d, 0xe3, 0x05, 0xe1, 0x54, 0xde, 0x6b, 0xef, 0x5a, 0x12, 0xe0, 0xda, 0x53, 0xbe, 0x14,
	0x1f, 0x3c, 0x73, 0x2e, 0xef, 0xb7, 0x5f, 0x0a, 0x8c, 0x43, 0xe5, 0x70, 0x5e, 0x8b, 0xf5, 0x68,
	0x9a, 0x66, 0xca, 0x4c, 0x3f, 0x4d, 0x74, 0xf2, 0x73, 0x98, 0xa7, 0x13, 0xf9, 0x80, 0x8f, 0x52,
	0x09, 0xd0, 0xb2, 0x36, 0x9a, 0xbf, 0xd5, 0x7a, 0x9c, 0xca, 0xff, 0xb4, 0x9b, 0x93, 0x00, 0x2d,
	0xab, 0xf3, 0x56, 0x6c, 0x60, 0x26, 0x65, 0x15, 0xdd, 0x4f, 0x92, 0x70, 0x2a, 0x1f, 0x52, 0xfb,
	0x3b, 0xf5, 0xa4, 0x99, 0x01, 0xda, 0x6d, 0x70, 0xd2, 0x9e, 0x0d, 0xc8, 0x6d, 0x3e, 0xe9, 0xd2,
	0x08, 0x95, 0xc3, 0xf9, 0x41, 0xac, 0x96, 0xf7, 0x1f, 0x54, 0x34, 0x52, 0x46, 0xfe, 0xb7, 0xb1,
	0x5f, 0x99, 0x0a, 0x0d, 0xb7, 0xf3, 0xbd, 0x58, 0xf1, 0x58, 0xca, 0x2e, 0x35, 0xbf, 0xd5, 0x6c,
	0x5e, 0xa4, 0xcb, 0xbd, 0xce, 0x2b, 0xb1, 0x5c, 0x06, 0xde, 0xa9, 0x30, 0x91, 0x8f, 0xa8, 0xed,
	0xcd, 0x66, 0x5b, 0xd4, 0x80, 0x39, 0xeb, 0x2d, 0xf1, 0xf5, 0x95, 0xff, 0xeb, 0x6e, 0x49, 0xaf,
	0x36, 0x73, 0xd6, 0x5b, 0x62, 0x9d, 0x96, 0x8f, 0xbb, 0x5b, 0x52, 0x0d, 0x67, 0xce, 0x7a, 0xcb,
	0xb7, 0xc1, 0x69, 0x26, 0x9f, 0x74, 0xb7, 0x44, 0x0d, 0x98, 0x13, 0x9f, 0x6d, 0xf9, 0xfb, 0x53,
	0x9e, 0x28, 0x43, 0xcd, 0xff, 0xcf, 0x9f, 0xed, 0x7e, 0xd3, 0x00, 0xed, 0x36, 0x98, 0x82, 0x51,
	0x41, 0x7c, 0xaa, 0x8d, 0xaf, 0x7e, 0xd1, 0x67, 0x72, 0x87, 0xa7, 0x00, 0x35, 0x0d, 0x98, 0x13,
	0x4b, 0x07, 0xbe, 0x47, 0xf2, 0x29, 0x2f, 0x1d, 0xf8, 0x96, 0x01, 0x29, 0xce, 0xb7, 0x62, 0xa1,
	0x64, 0xb0, 0xfc, 0x8a, 0xf7, 0xfb, 0xc6, 0xcb, 0xbc, 0x7d, 0xab, 0x41, 0xe5, 0xc2, 0xb2, 0x95,
	0x4d, 0x8c, 0x8e, 0x95, 0xfc, 0x9a, 0x97, 0xad, 0x13, 0x8a, 0x82, 0x55, 0x71, 0x47, 0xaa, 0xab,
	0x24, 0xd4, 0x46, 0x8d, 0xe5, 0x33, 0xbe, 0x23, 0x8f, 0x6c, 0x1c, 0x2a, 0x07, 0xce, 0xd1, 0xde,
	0x1f, 0x5d, 0xa8, 0x38, 0x93, 0xdf, 0xf0, 0x5c, 0x8e, 0x6a, 0x1a, 0x30, 0xa7, 0xfb, 0xe7, 0x92,
	0xe8, 0x83, 0x8a, 0xf4, 0x85, 0x4a, 0x1d, 0xd7, 0xb2, 0x7d, 0x86, 0x67, 0x86, 0x6c, 0x1f, 0x0e,
	0x2c, 0xdd, 0x1f, 0x16, 0x74, 0xbf, 0xd1, 0xa8, 0x7f, 0x2a, 0x1d, 0x0e, 0x0a, 0xbe, 0xbb, 0x96,
	0xef, 0x3d, 0xde, 0x09, 0xee, 0x06, 0xec, 0x84, 0x08, 0xff, 0xb0, 0xe0, 0xf2, 0x2c, 0xef, 0xe4,
	0xbd, 0x1e, 0x61, 0x27, 0x48, 0xe6, 0xdd, 0x1a, 0x99, 0x8b, 0x83, 0x82, 0xd3, 0x24, 0xf3, 0x70,
	0x50, 0x63, 0xf3, 0x8b, 0x3a, 0x9b, 0x8b, 0x73, 0xc3, 0x66, 0x8b, 0xcd, 0xc3, 0x41, 0x9d, 0xce,
	0x8f, 0x4b, 0x3a, 0xf7, 0x79, 0xcd, 0x27, 0x3a, 0x0f, 0x07, 0x25, 0x9f, 0x5d, 0xcb, 0xe7, 0x85,
	0xc6, 0xd3, 0x0a, 0x42, 0x85, 0xd3, 0x21, 0x42, 0xbb, 0x96, 0xd0, 0x8b, 0x0d, 0x8f, 0x97, 0x9e,
	0x93, 0x07, 0x19, 0xed, 0xda, 0x43, 0x8d, 0x68, 0x9c, 0xae, 0xe2, 0x00, 0xf3, 0x2a, 0x8e, 0x35,
	0x3b, 0xd7, 0xc7, 0x9a, 0xa5, 0x4e, 0x5b, 0x75, 0xb0, 0x71, 0x2d, 0x95, 0x97, 0x1b, 0x23, 0x2a,
	0x7f, 0x42, 0x23, 0xe2, 0x4b, 0xfb, 0xb8, 0x64, 0xd5, 0x4a, 0x03, 0x6a, 0x18, 0xc4, 0x09, 0x16,
	0xb4, 0xda, 0xad, 0x1d, 0x07, 0x56, 0xf9, 0x52, 0x97, 0xc7, 0x01, 0x5c, 0xea, 0xea, 0x40, 0xe0,
	0x5a, 0xdc, 0xaf, 0xf1, 0xa1, 0x91, 0xe4, 0x38, 0x34, 0x01, 0xdf, 0xb5, 0xcc, 0x5d, 0xe7, 0x1e,
	0x64, 0x2e, 0x7a, 0x88, 0xba, 0xcf, 0x6b, 0x94, 0xdc, 0xe0, 0x4f, 0xac, 0xc2, 0x1e, 0x0e, 0x5c,
	0x81, 0xf2, 0x45, 0x9d, 0x64, 0x4e, 0xfb, 0x19, 0x93, 0x50, 0x3e, 0xe3, 0x82, 0x65, 0xbb, 0x35,
	0x96, 0x6d, 0xb6, 0xb7, 0x11, 0xc6, 0xcb, 0x6d, 0x44, 0x34, 0xdb, 0x6b, 0x54, 0xab, 0x9b, 0xdd,
	0x65, 0x1d, 0xb5, 0xe1, 0xa0, 0x51, 0xaf, 0x7e, 0xec, 0x40, 0xd9, 0x2d, 0x9e, 0x65, 0x25, 0x0c,
	0x07, 0x1d, 0x30, 0x3b, 0xee, 0x82, 0x59, 0x71, 0x20, 0xb9, 0xf7, 0xb7, 0x30, 0x1b, 0x0e, 0xba,
	0x70, 0xf6, 0xba, 0x09, 0x98, 0xe2, 0xb8, 0x72, 0xbb, 0x13, 0x30, 0xc3, 0x41, 0x13, 0x31, 0x3f,
	0xb5, 0xf8, 0x56, 0x1c, 0x63, 0x64, 0x37, 0xdf, 0x86, 0x83, 0x16, 0xe1, 0xf6, 0x1a, 0x90, 0xba,
	0xd3, 0xbd, 0x90, 0xa8, 0xd5, 0x17, 0x92, 0x30, 0xb5, 0xd7, 0xc0, 0xd4, 0xdd, 0xee, 0xb6, 0x76,
	0xaf, 0x73, 0x50, 0xed, 0x35, 0x40, 0x75, 0xaf, 0xbb, 0xad, 0x2d, 0x46, 0x1c, 0x55, 0xc7, 0x5d,
	0xc0, 0xb9, 0xcf, 0xd7, 0xbf, 0x05, 0x1c, 0x5c, 0xff, 0x36, 0x72, 0x5e, 0xd6, 0xb0, 0xf0, 0x80,
	0xa7, 0x50, 0xc7, 0x02, 0xee, 0xbd, 0x0a, 0x0c, 0xbb, 0xad, 0x82, 0xef, 0x34, 0x0b, 0x3e, 0xfa,
	0xab, 0x92, 0xbf, 0xd7, 0x59, 0xf2, 0xb7, 0xba, 0x4a, 0x3e, 0x4e, 0x95, 0x15, 0xfd, 0x2f, 0x33,
	0x42, 0x80, 0xfd, 0x94, 0xfd, 0xfd, 0x93, 0x23, 0x45, 0xbf, 0xf8, 0x3c, 0x1d, 0xcb, 0x99, 0xed,
	0x99, 0x9d, 0x39, 0x28, 0x7f, 0xe2, 0xd1, 0x38, 0x2f, 0x3e, 0x21, 0xe5, 0x8d, 0xed, 0x99, 0x7a,
	0x15, 0xb1, 0x5f, 0x96, 0x50, 0xea, 0xc5, 0x29, 0x9a, 0x38, 0x22, 0x7b, 0xdc, 0x6a, 0xf1, 0x02,
	0xa5, 0x8e, 0x95, 0x29, 0x31, 0x3a, 0xc1, 0x6f, 0xc4, 0xce, 0x3e, 0x0b, 0xd5, 0xf5, 0x44, 0xff,
	0xc8, 0x18, 0x6d, 0xfe, 0x31, 0x43, 0x47, 0xcc, 0xfa, 0x7a, 0xac, 0x28, 0xbd, 0x39, 0xa0, 0x7b,
	0x67, 0x5d, 0xf4, 0xa2, 0xf4, 0x8c, 0xd2, 0x58, 0x04, 0xbc, 0x75, 0xb6, 0xc4, 0x7c, 0xe2, 0x19,
	0x2f, 0x2a, 0x3e, 0x4b, 0x17, 0xc1, 0xfe, 0x72, 0x5f, 0x89, 0x85, 0x8f, 0xea, 0xf2, 0x8d, 0x37,
	0xfd, 0xb7, 0x31, 0xb2, 0x20, 0x2a, 0xc6, 0xe8, 0x01, 0xdd, 0xbb, 0xf3, 0x62, 0x76, 0x18, 0xc4,
	0x67, 0x74, 0xd5, 0xf1, 0xd9, 0xa8, 0xf8, 0x2b, 0xe0, 0xbb, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x9e, 0x7f, 0x90, 0x62, 0x23, 0x10, 0x00, 0x00,
}
